//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CentralRepository.CentralDatabase
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CentralDigitalCondoEntities : DbContext
    {
        public CentralDigitalCondoEntities()
            : base("name=CentralDigitalCondoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int SP_DGC_SavePasswordDetails(Nullable<long> centralUserId, string newPassword, string newMobileIMEA, string updatedBy, ObjectParameter errorcode)
        {
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var newMobileIMEAParameter = newMobileIMEA != null ?
                new ObjectParameter("NewMobileIMEA", newMobileIMEA) :
                new ObjectParameter("NewMobileIMEA", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SavePasswordDetails", centralUserIdParameter, newPasswordParameter, newMobileIMEAParameter, updatedByParameter, errorcode);
        }
    
        public virtual int SP_DGC_ValidateCentralUserCredentials(string userMobileNumber, string userPassword, ObjectParameter centralUserId)
        {
            var userMobileNumberParameter = userMobileNumber != null ?
                new ObjectParameter("UserMobileNumber", userMobileNumber) :
                new ObjectParameter("UserMobileNumber", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_ValidateCentralUserCredentials", userMobileNumberParameter, userPasswordParameter, centralUserId);
        }
    
        public virtual int SP_DGC_DeactivateCentralUserById(Nullable<long> centralUserId, Nullable<long> subscriptionId, string deActivatedBy, ObjectParameter errorCode)
        {
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            var deActivatedByParameter = deActivatedBy != null ?
                new ObjectParameter("DeActivatedBy", deActivatedBy) :
                new ObjectParameter("DeActivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeactivateCentralUserById", centralUserIdParameter, subscriptionIdParameter, deActivatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetUserSubscriptionDetails_Result> SP_DGC_GetUserSubscriptionDetails(Nullable<long> centralUserId)
        {
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUserSubscriptionDetails_Result>("SP_DGC_GetUserSubscriptionDetails", centralUserIdParameter);
        }
    
        public virtual int SP_DGC_ChangeUserPassword(Nullable<long> centralUserId, string oldPassword, string curretPassword, string updatedBy, ObjectParameter errorCode)
        {
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            var oldPasswordParameter = oldPassword != null ?
                new ObjectParameter("OldPassword", oldPassword) :
                new ObjectParameter("OldPassword", typeof(string));
    
            var curretPasswordParameter = curretPassword != null ?
                new ObjectParameter("CurretPassword", curretPassword) :
                new ObjectParameter("CurretPassword", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_ChangeUserPassword", centralUserIdParameter, oldPasswordParameter, curretPasswordParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetEmailTemplate_Result> SP_DGC_GetEmailTemplate(string templateName)
        {
            var templateNameParameter = templateName != null ?
                new ObjectParameter("TemplateName", templateName) :
                new ObjectParameter("TemplateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetEmailTemplate_Result>("SP_DGC_GetEmailTemplate", templateNameParameter);
        }
    
        public virtual int SP_DGC_ActivateCentralWebUser(Nullable<long> centralUserId, string tempPassword, string curretPassword, Nullable<long> subscriptionId, string updatedBy, ObjectParameter errorCode)
        {
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            var tempPasswordParameter = tempPassword != null ?
                new ObjectParameter("TempPassword", tempPassword) :
                new ObjectParameter("TempPassword", typeof(string));
    
            var curretPasswordParameter = curretPassword != null ?
                new ObjectParameter("CurretPassword", curretPassword) :
                new ObjectParameter("CurretPassword", typeof(string));
    
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_ActivateCentralWebUser", centralUserIdParameter, tempPasswordParameter, curretPasswordParameter, subscriptionIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_ActivateCentralMobileUser(string mobileNumber, string mobileIMEA, string tempPassword, ObjectParameter errorCode)
        {
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var mobileIMEAParameter = mobileIMEA != null ?
                new ObjectParameter("MobileIMEA", mobileIMEA) :
                new ObjectParameter("MobileIMEA", typeof(string));
    
            var tempPasswordParameter = tempPassword != null ?
                new ObjectParameter("TempPassword", tempPassword) :
                new ObjectParameter("TempPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_ActivateCentralMobileUser", mobileNumberParameter, mobileIMEAParameter, tempPasswordParameter, errorCode);
        }
    
        public virtual int SP_DGC_Central_SaveOTPDeliveryDetails(string recieverMobileNumber, string aPIReferenceId, string sentBy)
        {
            var recieverMobileNumberParameter = recieverMobileNumber != null ?
                new ObjectParameter("RecieverMobileNumber", recieverMobileNumber) :
                new ObjectParameter("RecieverMobileNumber", typeof(string));
    
            var aPIReferenceIdParameter = aPIReferenceId != null ?
                new ObjectParameter("APIReferenceId", aPIReferenceId) :
                new ObjectParameter("APIReferenceId", typeof(string));
    
            var sentByParameter = sentBy != null ?
                new ObjectParameter("SentBy", sentBy) :
                new ObjectParameter("SentBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Central_SaveOTPDeliveryDetails", recieverMobileNumberParameter, aPIReferenceIdParameter, sentByParameter);
        }
    
        public virtual int SP_DGC_DeleteRefreshToken(string clientId, string subject, string refreshTokenId, ObjectParameter errorCode)
        {
            var clientIdParameter = clientId != null ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var refreshTokenIdParameter = refreshTokenId != null ?
                new ObjectParameter("RefreshTokenId", refreshTokenId) :
                new ObjectParameter("RefreshTokenId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteRefreshToken", clientIdParameter, subjectParameter, refreshTokenIdParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveAPIConsumeClients_Result> SP_DGC_GetActiveAPIConsumeClients()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveAPIConsumeClients_Result>("SP_DGC_GetActiveAPIConsumeClients");
        }
    
        public virtual ObjectResult<SP_DGC_GetAPIRefreshTokenById_Result> SP_DGC_GetAPIRefreshTokenById(string refreshTokenId)
        {
            var refreshTokenIdParameter = refreshTokenId != null ?
                new ObjectParameter("RefreshTokenId", refreshTokenId) :
                new ObjectParameter("RefreshTokenId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAPIRefreshTokenById_Result>("SP_DGC_GetAPIRefreshTokenById", refreshTokenIdParameter);
        }
    
        public virtual int SP_DGC_GetUserFireBaseDetailsById(Nullable<long> centralUserId, ObjectParameter toFireBaseKey, ObjectParameter deviceId)
        {
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_GetUserFireBaseDetailsById", centralUserIdParameter, toFireBaseKey, deviceId);
        }
    
        public virtual int SP_DGC_SaveRefreshTokenDetails(string clientId, string refreshTokenId, string subject, Nullable<System.DateTime> issuedUtc, Nullable<System.DateTime> expiresUtc, string protectedTicket, string updatedBy, ObjectParameter errorCode)
        {
            var clientIdParameter = clientId != null ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(string));
    
            var refreshTokenIdParameter = refreshTokenId != null ?
                new ObjectParameter("RefreshTokenId", refreshTokenId) :
                new ObjectParameter("RefreshTokenId", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var issuedUtcParameter = issuedUtc.HasValue ?
                new ObjectParameter("IssuedUtc", issuedUtc) :
                new ObjectParameter("IssuedUtc", typeof(System.DateTime));
    
            var expiresUtcParameter = expiresUtc.HasValue ?
                new ObjectParameter("ExpiresUtc", expiresUtc) :
                new ObjectParameter("ExpiresUtc", typeof(System.DateTime));
    
            var protectedTicketParameter = protectedTicket != null ?
                new ObjectParameter("ProtectedTicket", protectedTicket) :
                new ObjectParameter("ProtectedTicket", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveRefreshTokenDetails", clientIdParameter, refreshTokenIdParameter, subjectParameter, issuedUtcParameter, expiresUtcParameter, protectedTicketParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveUserFireBaseDetails(Nullable<long> centralUserId, string toFireBaseKey, string deviceId, string updatedBy, ObjectParameter errorCode)
        {
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            var toFireBaseKeyParameter = toFireBaseKey != null ?
                new ObjectParameter("ToFireBaseKey", toFireBaseKey) :
                new ObjectParameter("ToFireBaseKey", typeof(string));
    
            var deviceIdParameter = deviceId != null ?
                new ObjectParameter("DeviceId", deviceId) :
                new ObjectParameter("DeviceId", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUserFireBaseDetails", centralUserIdParameter, toFireBaseKeyParameter, deviceIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveUserFireBaseToken(Nullable<long> centralUserId, string userFireBaseKey, string updatedBy, ObjectParameter errorCode)
        {
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            var userFireBaseKeyParameter = userFireBaseKey != null ?
                new ObjectParameter("UserFireBaseKey", userFireBaseKey) :
                new ObjectParameter("UserFireBaseKey", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUserFireBaseToken", centralUserIdParameter, userFireBaseKeyParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveSubscriptionBillDetails(Nullable<int> subscriptionBillId, Nullable<int> billLevelType, Nullable<decimal> slabRateAmount, Nullable<System.DateTime> effectiveFrom, string updatedBy, ObjectParameter errorCode)
        {
            var subscriptionBillIdParameter = subscriptionBillId.HasValue ?
                new ObjectParameter("SubscriptionBillId", subscriptionBillId) :
                new ObjectParameter("SubscriptionBillId", typeof(int));
    
            var billLevelTypeParameter = billLevelType.HasValue ?
                new ObjectParameter("BillLevelType", billLevelType) :
                new ObjectParameter("BillLevelType", typeof(int));
    
            var slabRateAmountParameter = slabRateAmount.HasValue ?
                new ObjectParameter("SlabRateAmount", slabRateAmount) :
                new ObjectParameter("SlabRateAmount", typeof(decimal));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveSubscriptionBillDetails", subscriptionBillIdParameter, billLevelTypeParameter, slabRateAmountParameter, effectiveFromParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveComapnyDetails(Nullable<long> subScriptionId, string companyName, string companyRegistrationNo, string companyAddress, string companyPhoneNumber, string companyFaxNumber, string updatedBy, ObjectParameter errorcode)
        {
            var subScriptionIdParameter = subScriptionId.HasValue ?
                new ObjectParameter("SubScriptionId", subScriptionId) :
                new ObjectParameter("SubScriptionId", typeof(long));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyRegistrationNoParameter = companyRegistrationNo != null ?
                new ObjectParameter("CompanyRegistrationNo", companyRegistrationNo) :
                new ObjectParameter("CompanyRegistrationNo", typeof(string));
    
            var companyAddressParameter = companyAddress != null ?
                new ObjectParameter("CompanyAddress", companyAddress) :
                new ObjectParameter("CompanyAddress", typeof(string));
    
            var companyPhoneNumberParameter = companyPhoneNumber != null ?
                new ObjectParameter("CompanyPhoneNumber", companyPhoneNumber) :
                new ObjectParameter("CompanyPhoneNumber", typeof(string));
    
            var companyFaxNumberParameter = companyFaxNumber != null ?
                new ObjectParameter("CompanyFaxNumber", companyFaxNumber) :
                new ObjectParameter("CompanyFaxNumber", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveComapnyDetails", subScriptionIdParameter, companyNameParameter, companyRegistrationNoParameter, companyAddressParameter, companyPhoneNumberParameter, companyFaxNumberParameter, updatedByParameter, errorcode);
        }
    
        public virtual int SP_DGC_ValidateCentralUserAuthToken(string userAuthToken, string appCode, string centralUserId, ObjectParameter errorCode)
        {
            var userAuthTokenParameter = userAuthToken != null ?
                new ObjectParameter("UserAuthToken", userAuthToken) :
                new ObjectParameter("UserAuthToken", typeof(string));
    
            var appCodeParameter = appCode != null ?
                new ObjectParameter("AppCode", appCode) :
                new ObjectParameter("AppCode", typeof(string));
    
            var centralUserIdParameter = centralUserId != null ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_ValidateCentralUserAuthToken", userAuthTokenParameter, appCodeParameter, centralUserIdParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetCondoSubscriptionInvoiceConfigDetails_Result> SP_DGC_GetCondoSubscriptionInvoiceConfigDetails(Nullable<long> subscriptionId)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCondoSubscriptionInvoiceConfigDetails_Result>("SP_DGC_GetCondoSubscriptionInvoiceConfigDetails", subscriptionIdParameter);
        }
    
        public virtual int SP_DGC_SaveCondoSubscriptionInvoiceConfiguration(Nullable<int> invoiceConfigId, Nullable<long> subscriptionId, Nullable<float> lateFee, Nullable<int> intrestFreeDays, Nullable<float> rateOfIntrestPerMonth, Nullable<System.DateTime> effectiveFrom, string updatedBy, ObjectParameter errorCode)
        {
            var invoiceConfigIdParameter = invoiceConfigId.HasValue ?
                new ObjectParameter("InvoiceConfigId", invoiceConfigId) :
                new ObjectParameter("InvoiceConfigId", typeof(int));
    
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            var lateFeeParameter = lateFee.HasValue ?
                new ObjectParameter("LateFee", lateFee) :
                new ObjectParameter("LateFee", typeof(float));
    
            var intrestFreeDaysParameter = intrestFreeDays.HasValue ?
                new ObjectParameter("IntrestFreeDays", intrestFreeDays) :
                new ObjectParameter("IntrestFreeDays", typeof(int));
    
            var rateOfIntrestPerMonthParameter = rateOfIntrestPerMonth.HasValue ?
                new ObjectParameter("RateOfIntrestPerMonth", rateOfIntrestPerMonth) :
                new ObjectParameter("RateOfIntrestPerMonth", typeof(float));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCondoSubscriptionInvoiceConfiguration", invoiceConfigIdParameter, subscriptionIdParameter, lateFeeParameter, intrestFreeDaysParameter, rateOfIntrestPerMonthParameter, effectiveFromParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveComapnies_Result> SP_DGC_GetActiveComapnies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveComapnies_Result>("SP_DGC_GetActiveComapnies");
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveIsoCurrencyCodes_Result> SP_DGC_GetActiveIsoCurrencyCodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveIsoCurrencyCodes_Result>("SP_DGC_GetActiveIsoCurrencyCodes");
        }
    
        public virtual int SP_DGC_SaveSubscriptionBillingConfig(Nullable<long> subBillingID, Nullable<long> subscriptionId, string contactPersonName, string mobileNumber, string email, string billingAddress, Nullable<int> billingCurrencyId, string currencyDesc, string billingPeriodFrom, string createdBy, ObjectParameter errorcode)
        {
            var subBillingIDParameter = subBillingID.HasValue ?
                new ObjectParameter("SubBillingID", subBillingID) :
                new ObjectParameter("SubBillingID", typeof(long));
    
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            var contactPersonNameParameter = contactPersonName != null ?
                new ObjectParameter("ContactPersonName", contactPersonName) :
                new ObjectParameter("ContactPersonName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var billingAddressParameter = billingAddress != null ?
                new ObjectParameter("BillingAddress", billingAddress) :
                new ObjectParameter("BillingAddress", typeof(string));
    
            var billingCurrencyIdParameter = billingCurrencyId.HasValue ?
                new ObjectParameter("BillingCurrencyId", billingCurrencyId) :
                new ObjectParameter("BillingCurrencyId", typeof(int));
    
            var currencyDescParameter = currencyDesc != null ?
                new ObjectParameter("CurrencyDesc", currencyDesc) :
                new ObjectParameter("CurrencyDesc", typeof(string));
    
            var billingPeriodFromParameter = billingPeriodFrom != null ?
                new ObjectParameter("BillingPeriodFrom", billingPeriodFrom) :
                new ObjectParameter("BillingPeriodFrom", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveSubscriptionBillingConfig", subBillingIDParameter, subscriptionIdParameter, contactPersonNameParameter, mobileNumberParameter, emailParameter, billingAddressParameter, billingCurrencyIdParameter, currencyDescParameter, billingPeriodFromParameter, createdByParameter, errorcode);
        }
    
        public virtual ObjectResult<SP_DGC_GetPicDetailsBySubscriptionId_Result> SP_DGC_GetPicDetailsBySubscriptionId(Nullable<long> subscriptionId)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetPicDetailsBySubscriptionId_Result>("SP_DGC_GetPicDetailsBySubscriptionId", subscriptionIdParameter);
        }
    
        public virtual int SP_DGC_SaveSubscriptionPicDetails(Nullable<long> companyId, string picName, string picMobilenumber, string picEmail, string updatedBy, ObjectParameter errorCode)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var picNameParameter = picName != null ?
                new ObjectParameter("PicName", picName) :
                new ObjectParameter("PicName", typeof(string));
    
            var picMobilenumberParameter = picMobilenumber != null ?
                new ObjectParameter("PicMobilenumber", picMobilenumber) :
                new ObjectParameter("PicMobilenumber", typeof(string));
    
            var picEmailParameter = picEmail != null ?
                new ObjectParameter("PicEmail", picEmail) :
                new ObjectParameter("PicEmail", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveSubscriptionPicDetails", companyIdParameter, picNameParameter, picMobilenumberParameter, picEmailParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetSubscriptionStatusChangeValues_Result> SP_DGC_GetSubscriptionStatusChangeValues()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetSubscriptionStatusChangeValues_Result>("SP_DGC_GetSubscriptionStatusChangeValues");
        }
    
        public virtual ObjectResult<SP_DGC_GetSubscriptionCurrentStatus_Result> SP_DGC_GetSubscriptionCurrentStatus(Nullable<long> subscriptionId)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetSubscriptionCurrentStatus_Result>("SP_DGC_GetSubscriptionCurrentStatus", subscriptionIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetConStringBySubscriptionCode_Result> SP_DGC_GetConStringBySubscriptionCode(string subscriptionCode)
        {
            var subscriptionCodeParameter = subscriptionCode != null ?
                new ObjectParameter("SubscriptionCode", subscriptionCode) :
                new ObjectParameter("SubscriptionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetConStringBySubscriptionCode_Result>("SP_DGC_GetConStringBySubscriptionCode", subscriptionCodeParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllComapanySubscriptionDetails_Result> SP_DGC_GetAllComapanySubscriptionDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllComapanySubscriptionDetails_Result>("SP_DGC_GetAllComapanySubscriptionDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveComapnySubscriptionDetails(Nullable<long> companyId, string companyName, string companyRegistrationNo, string companyPhoneNumber, string companyEmail, string companyFaxNumber, string companyAddress, string isComapny, Nullable<long> parentComapnyID, string isIndividual, string picPersonName, string picMobilenumber, string picEmail, string createdBy, Nullable<long> theManagerSubscriptionID, Nullable<int> theManagerUserId, string subscriptionCreatedBy, string theMangerSubscriptionCode, ObjectParameter errorcode, ObjectParameter currentSubscriptionID, ObjectParameter currentSubscriptionCode)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyRegistrationNoParameter = companyRegistrationNo != null ?
                new ObjectParameter("CompanyRegistrationNo", companyRegistrationNo) :
                new ObjectParameter("CompanyRegistrationNo", typeof(string));
    
            var companyPhoneNumberParameter = companyPhoneNumber != null ?
                new ObjectParameter("CompanyPhoneNumber", companyPhoneNumber) :
                new ObjectParameter("CompanyPhoneNumber", typeof(string));
    
            var companyEmailParameter = companyEmail != null ?
                new ObjectParameter("CompanyEmail", companyEmail) :
                new ObjectParameter("CompanyEmail", typeof(string));
    
            var companyFaxNumberParameter = companyFaxNumber != null ?
                new ObjectParameter("CompanyFaxNumber", companyFaxNumber) :
                new ObjectParameter("CompanyFaxNumber", typeof(string));
    
            var companyAddressParameter = companyAddress != null ?
                new ObjectParameter("CompanyAddress", companyAddress) :
                new ObjectParameter("CompanyAddress", typeof(string));
    
            var isComapnyParameter = isComapny != null ?
                new ObjectParameter("IsComapny", isComapny) :
                new ObjectParameter("IsComapny", typeof(string));
    
            var parentComapnyIDParameter = parentComapnyID.HasValue ?
                new ObjectParameter("ParentComapnyID", parentComapnyID) :
                new ObjectParameter("ParentComapnyID", typeof(long));
    
            var isIndividualParameter = isIndividual != null ?
                new ObjectParameter("IsIndividual", isIndividual) :
                new ObjectParameter("IsIndividual", typeof(string));
    
            var picPersonNameParameter = picPersonName != null ?
                new ObjectParameter("PicPersonName", picPersonName) :
                new ObjectParameter("PicPersonName", typeof(string));
    
            var picMobilenumberParameter = picMobilenumber != null ?
                new ObjectParameter("PicMobilenumber", picMobilenumber) :
                new ObjectParameter("PicMobilenumber", typeof(string));
    
            var picEmailParameter = picEmail != null ?
                new ObjectParameter("PicEmail", picEmail) :
                new ObjectParameter("PicEmail", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var theManagerSubscriptionIDParameter = theManagerSubscriptionID.HasValue ?
                new ObjectParameter("TheManagerSubscriptionID", theManagerSubscriptionID) :
                new ObjectParameter("TheManagerSubscriptionID", typeof(long));
    
            var theManagerUserIdParameter = theManagerUserId.HasValue ?
                new ObjectParameter("TheManagerUserId", theManagerUserId) :
                new ObjectParameter("TheManagerUserId", typeof(int));
    
            var subscriptionCreatedByParameter = subscriptionCreatedBy != null ?
                new ObjectParameter("SubscriptionCreatedBy", subscriptionCreatedBy) :
                new ObjectParameter("SubscriptionCreatedBy", typeof(string));
    
            var theMangerSubscriptionCodeParameter = theMangerSubscriptionCode != null ?
                new ObjectParameter("TheMangerSubscriptionCode", theMangerSubscriptionCode) :
                new ObjectParameter("TheMangerSubscriptionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveComapnySubscriptionDetails", companyIdParameter, companyNameParameter, companyRegistrationNoParameter, companyPhoneNumberParameter, companyEmailParameter, companyFaxNumberParameter, companyAddressParameter, isComapnyParameter, parentComapnyIDParameter, isIndividualParameter, picPersonNameParameter, picMobilenumberParameter, picEmailParameter, createdByParameter, theManagerSubscriptionIDParameter, theManagerUserIdParameter, subscriptionCreatedByParameter, theMangerSubscriptionCodeParameter, errorcode, currentSubscriptionID, currentSubscriptionCode);
        }
    
        public virtual int SP_DGC_SaveTheManagerResposeDetails(Nullable<long> subscriptionID, Nullable<long> theManagerSubscriptionID, string theMangerSubscriptionCode, string responseStatus, ObjectParameter errorcode)
        {
            var subscriptionIDParameter = subscriptionID.HasValue ?
                new ObjectParameter("SubscriptionID", subscriptionID) :
                new ObjectParameter("SubscriptionID", typeof(long));
    
            var theManagerSubscriptionIDParameter = theManagerSubscriptionID.HasValue ?
                new ObjectParameter("TheManagerSubscriptionID", theManagerSubscriptionID) :
                new ObjectParameter("TheManagerSubscriptionID", typeof(long));
    
            var theMangerSubscriptionCodeParameter = theMangerSubscriptionCode != null ?
                new ObjectParameter("TheMangerSubscriptionCode", theMangerSubscriptionCode) :
                new ObjectParameter("TheMangerSubscriptionCode", typeof(string));
    
            var responseStatusParameter = responseStatus != null ?
                new ObjectParameter("ResponseStatus", responseStatus) :
                new ObjectParameter("ResponseStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveTheManagerResposeDetails", subscriptionIDParameter, theManagerSubscriptionIDParameter, theMangerSubscriptionCodeParameter, responseStatusParameter, errorcode);
        }
    
        public virtual int SP_DGC_ValidateUser_GetUserSubScriptionDetails(string userMobileNumber, string userPassword, string googleFireBaseToken, string userAccessDevice, string isWebCalling, ObjectParameter centralUserId, ObjectParameter subscriptionId, ObjectParameter subscriptionCode, ObjectParameter userAuthToken)
        {
            var userMobileNumberParameter = userMobileNumber != null ?
                new ObjectParameter("UserMobileNumber", userMobileNumber) :
                new ObjectParameter("UserMobileNumber", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var googleFireBaseTokenParameter = googleFireBaseToken != null ?
                new ObjectParameter("GoogleFireBaseToken", googleFireBaseToken) :
                new ObjectParameter("GoogleFireBaseToken", typeof(string));
    
            var userAccessDeviceParameter = userAccessDevice != null ?
                new ObjectParameter("UserAccessDevice", userAccessDevice) :
                new ObjectParameter("UserAccessDevice", typeof(string));
    
            var isWebCallingParameter = isWebCalling != null ?
                new ObjectParameter("IsWebCalling", isWebCalling) :
                new ObjectParameter("IsWebCalling", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_ValidateUser_GetUserSubScriptionDetails", userMobileNumberParameter, userPasswordParameter, googleFireBaseTokenParameter, userAccessDeviceParameter, isWebCallingParameter, centralUserId, subscriptionId, subscriptionCode, userAuthToken);
        }
    
        public virtual ObjectResult<SP_DGC_GetCurrencyDescByCurrencyId_Result> SP_DGC_GetCurrencyDescByCurrencyId(Nullable<long> currencyId)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("CurrencyId", currencyId) :
                new ObjectParameter("CurrencyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCurrencyDescByCurrencyId_Result>("SP_DGC_GetCurrencyDescByCurrencyId", currencyIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetSubscriptionBillingConfigBySubId_Result> SP_DGC_GetSubscriptionBillingConfigBySubId(Nullable<long> subscriptionId)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetSubscriptionBillingConfigBySubId_Result>("SP_DGC_GetSubscriptionBillingConfigBySubId", subscriptionIdParameter);
        }
    
        public virtual int SP_DGC_SaveTicketSystemActionDetails(Nullable<int> ticketId, Nullable<int> statusId, string comment, string actionTakenBy, Nullable<long> actionTakenByUserid, string assignToUserEMails, Nullable<int> previousStatusID, ObjectParameter errorCode)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var actionTakenByParameter = actionTakenBy != null ?
                new ObjectParameter("ActionTakenBy", actionTakenBy) :
                new ObjectParameter("ActionTakenBy", typeof(string));
    
            var actionTakenByUseridParameter = actionTakenByUserid.HasValue ?
                new ObjectParameter("ActionTakenByUserid", actionTakenByUserid) :
                new ObjectParameter("ActionTakenByUserid", typeof(long));
    
            var assignToUserEMailsParameter = assignToUserEMails != null ?
                new ObjectParameter("AssignToUserEMails", assignToUserEMails) :
                new ObjectParameter("AssignToUserEMails", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveTicketSystemActionDetails", ticketIdParameter, statusIdParameter, commentParameter, actionTakenByParameter, actionTakenByUseridParameter, assignToUserEMailsParameter, previousStatusIDParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveTicketSystemDetails(Nullable<int> ticketId, Nullable<long> subscriptionId, string subscriptionCode, string ticketSubject, string ticketDescription, string ticketImagePath, string raisedBy, Nullable<long> raisedByUserid, ObjectParameter errorCode)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            var subscriptionCodeParameter = subscriptionCode != null ?
                new ObjectParameter("SubscriptionCode", subscriptionCode) :
                new ObjectParameter("SubscriptionCode", typeof(string));
    
            var ticketSubjectParameter = ticketSubject != null ?
                new ObjectParameter("TicketSubject", ticketSubject) :
                new ObjectParameter("TicketSubject", typeof(string));
    
            var ticketDescriptionParameter = ticketDescription != null ?
                new ObjectParameter("TicketDescription", ticketDescription) :
                new ObjectParameter("TicketDescription", typeof(string));
    
            var ticketImagePathParameter = ticketImagePath != null ?
                new ObjectParameter("TicketImagePath", ticketImagePath) :
                new ObjectParameter("TicketImagePath", typeof(string));
    
            var raisedByParameter = raisedBy != null ?
                new ObjectParameter("RaisedBy", raisedBy) :
                new ObjectParameter("RaisedBy", typeof(string));
    
            var raisedByUseridParameter = raisedByUserid.HasValue ?
                new ObjectParameter("RaisedByUserid", raisedByUserid) :
                new ObjectParameter("RaisedByUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveTicketSystemDetails", ticketIdParameter, subscriptionIdParameter, subscriptionCodeParameter, ticketSubjectParameter, ticketDescriptionParameter, ticketImagePathParameter, raisedByParameter, raisedByUseridParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeactivateSmsProvider(Nullable<int> smsProviderID, string comment, string deactivatedBy, ObjectParameter errorCode)
        {
            var smsProviderIDParameter = smsProviderID.HasValue ?
                new ObjectParameter("SmsProviderID", smsProviderID) :
                new ObjectParameter("SmsProviderID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var deactivatedByParameter = deactivatedBy != null ?
                new ObjectParameter("DeactivatedBy", deactivatedBy) :
                new ObjectParameter("DeactivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeactivateSmsProvider", smsProviderIDParameter, commentParameter, deactivatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteAppDeviceDetails(Nullable<int> appAuthTokenId, string comment, string deactivatedBy, ObjectParameter errorCode)
        {
            var appAuthTokenIdParameter = appAuthTokenId.HasValue ?
                new ObjectParameter("AppAuthTokenId", appAuthTokenId) :
                new ObjectParameter("AppAuthTokenId", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var deactivatedByParameter = deactivatedBy != null ?
                new ObjectParameter("DeactivatedBy", deactivatedBy) :
                new ObjectParameter("DeactivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteAppDeviceDetails", appAuthTokenIdParameter, commentParameter, deactivatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteFcmConfigDetails(Nullable<int> fcmConfigId, string comment, string deactivatedBy, ObjectParameter errorCode)
        {
            var fcmConfigIdParameter = fcmConfigId.HasValue ?
                new ObjectParameter("FcmConfigId", fcmConfigId) :
                new ObjectParameter("FcmConfigId", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var deactivatedByParameter = deactivatedBy != null ?
                new ObjectParameter("DeactivatedBy", deactivatedBy) :
                new ObjectParameter("DeactivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteFcmConfigDetails", fcmConfigIdParameter, commentParameter, deactivatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveAppDeviceDetails(Nullable<int> appAuthTokenId, string applicationName, string applicationCode, string appToken, string comment, string createdBy, ObjectParameter errorCode)
        {
            var appAuthTokenIdParameter = appAuthTokenId.HasValue ?
                new ObjectParameter("AppAuthTokenId", appAuthTokenId) :
                new ObjectParameter("AppAuthTokenId", typeof(int));
    
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var applicationCodeParameter = applicationCode != null ?
                new ObjectParameter("ApplicationCode", applicationCode) :
                new ObjectParameter("ApplicationCode", typeof(string));
    
            var appTokenParameter = appToken != null ?
                new ObjectParameter("AppToken", appToken) :
                new ObjectParameter("AppToken", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveAppDeviceDetails", appAuthTokenIdParameter, applicationNameParameter, applicationCodeParameter, appTokenParameter, commentParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveFCMConfigDetails(Nullable<int> fcmConfigId, string fCMApiUrl, string fCMLegacyKey, Nullable<int> appDeviceId, string comment, string createdBy, ObjectParameter errorCode)
        {
            var fcmConfigIdParameter = fcmConfigId.HasValue ?
                new ObjectParameter("FcmConfigId", fcmConfigId) :
                new ObjectParameter("FcmConfigId", typeof(int));
    
            var fCMApiUrlParameter = fCMApiUrl != null ?
                new ObjectParameter("FCMApiUrl", fCMApiUrl) :
                new ObjectParameter("FCMApiUrl", typeof(string));
    
            var fCMLegacyKeyParameter = fCMLegacyKey != null ?
                new ObjectParameter("FCMLegacyKey", fCMLegacyKey) :
                new ObjectParameter("FCMLegacyKey", typeof(string));
    
            var appDeviceIdParameter = appDeviceId.HasValue ?
                new ObjectParameter("AppDeviceId", appDeviceId) :
                new ObjectParameter("AppDeviceId", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFCMConfigDetails", fcmConfigIdParameter, fCMApiUrlParameter, fCMLegacyKeyParameter, appDeviceIdParameter, commentParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllSmsProviderDetails_Result> SP_DGC_GetAllSmsProviderDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllSmsProviderDetails_Result>("SP_DGC_GetAllSmsProviderDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllFcmConfigDetails_Result> SP_DGC_GetAllFcmConfigDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllFcmConfigDetails_Result>("SP_DGC_GetAllFcmConfigDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAppDeviceDetailsById_Result> SP_DGC_GetAppDeviceDetailsById(Nullable<int> appAuthTokenId)
        {
            var appAuthTokenIdParameter = appAuthTokenId.HasValue ?
                new ObjectParameter("AppAuthTokenId", appAuthTokenId) :
                new ObjectParameter("AppAuthTokenId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAppDeviceDetailsById_Result>("SP_DGC_GetAppDeviceDetailsById", appAuthTokenIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetFcmConfigDetailsById_Result> SP_DGC_GetFcmConfigDetailsById(Nullable<int> fcmConfigId)
        {
            var fcmConfigIdParameter = fcmConfigId.HasValue ?
                new ObjectParameter("FcmConfigId", fcmConfigId) :
                new ObjectParameter("FcmConfigId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFcmConfigDetailsById_Result>("SP_DGC_GetFcmConfigDetailsById", fcmConfigIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetStatusChangeValuesByStatusFor_Result> SP_DGC_GetStatusChangeValuesByStatusFor(string statusFor)
        {
            var statusForParameter = statusFor != null ?
                new ObjectParameter("StatusFor", statusFor) :
                new ObjectParameter("StatusFor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetStatusChangeValuesByStatusFor_Result>("SP_DGC_GetStatusChangeValuesByStatusFor", statusForParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllAppDeviceDetails_Result> SP_DGC_GetAllAppDeviceDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllAppDeviceDetails_Result>("SP_DGC_GetAllAppDeviceDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveApplicationDevices_Result> SP_DGC_GetActiveApplicationDevices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveApplicationDevices_Result>("SP_DGC_GetActiveApplicationDevices");
        }
    
        public virtual ObjectResult<SP_DGC_GetSmsProviderDetailsById_Result> SP_DGC_GetSmsProviderDetailsById(Nullable<int> smsProviderId)
        {
            var smsProviderIdParameter = smsProviderId.HasValue ?
                new ObjectParameter("SmsProviderId", smsProviderId) :
                new ObjectParameter("SmsProviderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetSmsProviderDetailsById_Result>("SP_DGC_GetSmsProviderDetailsById", smsProviderIdParameter);
        }
    
        public virtual int SP_DGC_SaveSmsProviderDetails(Nullable<int> smsProviderID, Nullable<long> subScriptionId, string smsProviderName, string providerContactNumber, string providerEmailID, Nullable<decimal> getwayCharges, string paramsXml, string baseUrl, string createdBy, ObjectParameter errorCode)
        {
            var smsProviderIDParameter = smsProviderID.HasValue ?
                new ObjectParameter("SmsProviderID", smsProviderID) :
                new ObjectParameter("SmsProviderID", typeof(int));
    
            var subScriptionIdParameter = subScriptionId.HasValue ?
                new ObjectParameter("SubScriptionId", subScriptionId) :
                new ObjectParameter("SubScriptionId", typeof(long));
    
            var smsProviderNameParameter = smsProviderName != null ?
                new ObjectParameter("SmsProviderName", smsProviderName) :
                new ObjectParameter("SmsProviderName", typeof(string));
    
            var providerContactNumberParameter = providerContactNumber != null ?
                new ObjectParameter("ProviderContactNumber", providerContactNumber) :
                new ObjectParameter("ProviderContactNumber", typeof(string));
    
            var providerEmailIDParameter = providerEmailID != null ?
                new ObjectParameter("ProviderEmailID", providerEmailID) :
                new ObjectParameter("ProviderEmailID", typeof(string));
    
            var getwayChargesParameter = getwayCharges.HasValue ?
                new ObjectParameter("GetwayCharges", getwayCharges) :
                new ObjectParameter("GetwayCharges", typeof(decimal));
    
            var paramsXmlParameter = paramsXml != null ?
                new ObjectParameter("ParamsXml", paramsXml) :
                new ObjectParameter("ParamsXml", typeof(string));
    
            var baseUrlParameter = baseUrl != null ?
                new ObjectParameter("BaseUrl", baseUrl) :
                new ObjectParameter("BaseUrl", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveSmsProviderDetails", smsProviderIDParameter, subScriptionIdParameter, smsProviderNameParameter, providerContactNumberParameter, providerEmailIDParameter, getwayChargesParameter, paramsXmlParameter, baseUrlParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetSmsProviderDetailsBySubScriptionCode_Result> SP_DGC_GetSmsProviderDetailsBySubScriptionCode(string subScriptionCode)
        {
            var subScriptionCodeParameter = subScriptionCode != null ?
                new ObjectParameter("SubScriptionCode", subScriptionCode) :
                new ObjectParameter("SubScriptionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetSmsProviderDetailsBySubScriptionCode_Result>("SP_DGC_GetSmsProviderDetailsBySubScriptionCode", subScriptionCodeParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetSubscriptionBillConfigRates_Result> SP_DGC_GetSubscriptionBillConfigRates(Nullable<long> subscriptionId)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetSubscriptionBillConfigRates_Result>("SP_DGC_GetSubscriptionBillConfigRates", subscriptionIdParameter);
        }
    
        public virtual int SP_DGC_SaveCondoSubscriptionBillRates(Nullable<int> subscriptionBillId, Nullable<long> subscriptionId, Nullable<int> rateCalculationId, string slabRateXml, Nullable<System.DateTime> effectiveFrom, string updatedBy, ObjectParameter errorCode)
        {
            var subscriptionBillIdParameter = subscriptionBillId.HasValue ?
                new ObjectParameter("SubscriptionBillId", subscriptionBillId) :
                new ObjectParameter("SubscriptionBillId", typeof(int));
    
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            var rateCalculationIdParameter = rateCalculationId.HasValue ?
                new ObjectParameter("RateCalculationId", rateCalculationId) :
                new ObjectParameter("RateCalculationId", typeof(int));
    
            var slabRateXmlParameter = slabRateXml != null ?
                new ObjectParameter("SlabRateXml", slabRateXml) :
                new ObjectParameter("SlabRateXml", typeof(string));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCondoSubscriptionBillRates", subscriptionBillIdParameter, subscriptionIdParameter, rateCalculationIdParameter, slabRateXmlParameter, effectiveFromParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_GenerateOTPForMobileNumber(string mobileNumber, ObjectParameter oTPCode, ObjectParameter subscriptionCode)
        {
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_GenerateOTPForMobileNumber", mobileNumberParameter, oTPCode, subscriptionCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllActiveSubscriptions_Result> SP_DGC_GetAllActiveSubscriptions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllActiveSubscriptions_Result>("SP_DGC_GetAllActiveSubscriptions");
        }
    
        public virtual ObjectResult<SP_DGC_GetInvoiceSchedulebySubscriptionid_Result> SP_DGC_GetInvoiceSchedulebySubscriptionid(Nullable<long> subScriptionId)
        {
            var subScriptionIdParameter = subScriptionId.HasValue ?
                new ObjectParameter("SubScriptionId", subScriptionId) :
                new ObjectParameter("SubScriptionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetInvoiceSchedulebySubscriptionid_Result>("SP_DGC_GetInvoiceSchedulebySubscriptionid", subScriptionIdParameter);
        }
    
        public virtual int SP_DGC_SaveInvoiceSchedule(Nullable<int> invoiceScheduleID, Nullable<long> subScriptionId, Nullable<int> typeOfBill, Nullable<int> recurringPeriod, Nullable<int> scheduleDayOfMonth, string scheduleTime, string createdBy, ObjectParameter errorCode)
        {
            var invoiceScheduleIDParameter = invoiceScheduleID.HasValue ?
                new ObjectParameter("InvoiceScheduleID", invoiceScheduleID) :
                new ObjectParameter("InvoiceScheduleID", typeof(int));
    
            var subScriptionIdParameter = subScriptionId.HasValue ?
                new ObjectParameter("SubScriptionId", subScriptionId) :
                new ObjectParameter("SubScriptionId", typeof(long));
    
            var typeOfBillParameter = typeOfBill.HasValue ?
                new ObjectParameter("TypeOfBill", typeOfBill) :
                new ObjectParameter("TypeOfBill", typeof(int));
    
            var recurringPeriodParameter = recurringPeriod.HasValue ?
                new ObjectParameter("RecurringPeriod", recurringPeriod) :
                new ObjectParameter("RecurringPeriod", typeof(int));
    
            var scheduleDayOfMonthParameter = scheduleDayOfMonth.HasValue ?
                new ObjectParameter("ScheduleDayOfMonth", scheduleDayOfMonth) :
                new ObjectParameter("ScheduleDayOfMonth", typeof(int));
    
            var scheduleTimeParameter = scheduleTime != null ?
                new ObjectParameter("ScheduleTime", scheduleTime) :
                new ObjectParameter("ScheduleTime", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveInvoiceSchedule", invoiceScheduleIDParameter, subScriptionIdParameter, typeOfBillParameter, recurringPeriodParameter, scheduleDayOfMonthParameter, scheduleTimeParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetCentralConfigValuesByName_Result> SP_DGC_GetCentralConfigValuesByName(string configName)
        {
            var configNameParameter = configName != null ?
                new ObjectParameter("ConfigName", configName) :
                new ObjectParameter("ConfigName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCentralConfigValuesByName_Result>("SP_DGC_GetCentralConfigValuesByName", configNameParameter);
        }
    
        public virtual int SP_DGC_SaveForgetPasswordRequest(string userMobileNumber, Nullable<System.DateTime> requestSubmittedOn, string requestParam, ObjectParameter errorCode, ObjectParameter centralUserId, ObjectParameter subscriptionCode, ObjectParameter requestOTP)
        {
            var userMobileNumberParameter = userMobileNumber != null ?
                new ObjectParameter("UserMobileNumber", userMobileNumber) :
                new ObjectParameter("UserMobileNumber", typeof(string));
    
            var requestSubmittedOnParameter = requestSubmittedOn.HasValue ?
                new ObjectParameter("RequestSubmittedOn", requestSubmittedOn) :
                new ObjectParameter("RequestSubmittedOn", typeof(System.DateTime));
    
            var requestParamParameter = requestParam != null ?
                new ObjectParameter("RequestParam", requestParam) :
                new ObjectParameter("RequestParam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveForgetPasswordRequest", userMobileNumberParameter, requestSubmittedOnParameter, requestParamParameter, errorCode, centralUserId, subscriptionCode, requestOTP);
        }
    
        public virtual int SP_DGC_SaveResetpasswordRequest(string changePassword, string requestParam, string requestOTP, Nullable<System.DateTime> updatedOn, ObjectParameter errorCode, ObjectParameter centralUserId)
        {
            var changePasswordParameter = changePassword != null ?
                new ObjectParameter("ChangePassword", changePassword) :
                new ObjectParameter("ChangePassword", typeof(string));
    
            var requestParamParameter = requestParam != null ?
                new ObjectParameter("RequestParam", requestParam) :
                new ObjectParameter("RequestParam", typeof(string));
    
            var requestOTPParameter = requestOTP != null ?
                new ObjectParameter("RequestOTP", requestOTP) :
                new ObjectParameter("RequestOTP", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveResetpasswordRequest", changePasswordParameter, requestParamParameter, requestOTPParameter, updatedOnParameter, errorCode, centralUserId);
        }
    
        public virtual int SP_DGC_SaveCentralUserDetails(Nullable<long> subScriptionId, string userMobileNumber, string userPassword, string userMobileIMEA, string isActive, string updatedBy, ObjectParameter centralUserId, ObjectParameter errorCode, ObjectParameter isNewUser, string countryCode)
        {
            var subScriptionIdParameter = subScriptionId.HasValue ?
                new ObjectParameter("SubScriptionId", subScriptionId) :
                new ObjectParameter("SubScriptionId", typeof(long));
    
            var userMobileNumberParameter = userMobileNumber != null ?
                new ObjectParameter("UserMobileNumber", userMobileNumber) :
                new ObjectParameter("UserMobileNumber", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var userMobileIMEAParameter = userMobileIMEA != null ?
                new ObjectParameter("UserMobileIMEA", userMobileIMEA) :
                new ObjectParameter("UserMobileIMEA", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCentralUserDetails", subScriptionIdParameter, userMobileNumberParameter, userPasswordParameter, userMobileIMEAParameter, isActiveParameter, updatedByParameter, centralUserId, errorCode, isNewUser, countryCodeParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllCondoDataBaseDetails_Result> SP_DGC_GetAllCondoDataBaseDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllCondoDataBaseDetails_Result>("SP_DGC_GetAllCondoDataBaseDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveCondoDataBaseDetails(Nullable<int> dataBaseId, string serverName, string userName, string dbPassword, string initialcatalog, Nullable<System.DateTime> effectiveFrom, string createdBy, ObjectParameter errorCode)
        {
            var dataBaseIdParameter = dataBaseId.HasValue ?
                new ObjectParameter("DataBaseId", dataBaseId) :
                new ObjectParameter("DataBaseId", typeof(int));
    
            var serverNameParameter = serverName != null ?
                new ObjectParameter("ServerName", serverName) :
                new ObjectParameter("ServerName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var dbPasswordParameter = dbPassword != null ?
                new ObjectParameter("DbPassword", dbPassword) :
                new ObjectParameter("DbPassword", typeof(string));
    
            var initialcatalogParameter = initialcatalog != null ?
                new ObjectParameter("Initialcatalog", initialcatalog) :
                new ObjectParameter("Initialcatalog", typeof(string));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCondoDataBaseDetails", dataBaseIdParameter, serverNameParameter, userNameParameter, dbPasswordParameter, initialcatalogParameter, effectiveFromParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnMappedCondoDataBase_Result> SP_DGC_GetUnMappedCondoDataBase()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnMappedCondoDataBase_Result>("SP_DGC_GetUnMappedCondoDataBase");
        }
    
        public virtual int SP_DGC_SaveStatusChangeHistoryDetails(Nullable<long> subscriptionId, Nullable<int> statusId, string statusComment, string actionTakenBy, Nullable<decimal> paidAmount, string paymentReceivedBy, string modeofPayment, string bankName, string chequeNumber, string onlineReferenceNumber, Nullable<int> dataBaseId, string createdby, ObjectParameter errorCode)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var statusCommentParameter = statusComment != null ?
                new ObjectParameter("StatusComment", statusComment) :
                new ObjectParameter("StatusComment", typeof(string));
    
            var actionTakenByParameter = actionTakenBy != null ?
                new ObjectParameter("ActionTakenBy", actionTakenBy) :
                new ObjectParameter("ActionTakenBy", typeof(string));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(decimal));
    
            var paymentReceivedByParameter = paymentReceivedBy != null ?
                new ObjectParameter("PaymentReceivedBy", paymentReceivedBy) :
                new ObjectParameter("PaymentReceivedBy", typeof(string));
    
            var modeofPaymentParameter = modeofPayment != null ?
                new ObjectParameter("ModeofPayment", modeofPayment) :
                new ObjectParameter("ModeofPayment", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var chequeNumberParameter = chequeNumber != null ?
                new ObjectParameter("ChequeNumber", chequeNumber) :
                new ObjectParameter("ChequeNumber", typeof(string));
    
            var onlineReferenceNumberParameter = onlineReferenceNumber != null ?
                new ObjectParameter("OnlineReferenceNumber", onlineReferenceNumber) :
                new ObjectParameter("OnlineReferenceNumber", typeof(string));
    
            var dataBaseIdParameter = dataBaseId.HasValue ?
                new ObjectParameter("DataBaseId", dataBaseId) :
                new ObjectParameter("DataBaseId", typeof(int));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("Createdby", createdby) :
                new ObjectParameter("Createdby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveStatusChangeHistoryDetails", subscriptionIdParameter, statusIdParameter, statusCommentParameter, actionTakenByParameter, paidAmountParameter, paymentReceivedByParameter, modeofPaymentParameter, bankNameParameter, chequeNumberParameter, onlineReferenceNumberParameter, dataBaseIdParameter, createdbyParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetRemsIntigrationDetailsBySubscriptionId_Result> SP_DGC_GetRemsIntigrationDetailsBySubscriptionId(Nullable<long> subscriptionId)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetRemsIntigrationDetailsBySubscriptionId_Result>("SP_DGC_GetRemsIntigrationDetailsBySubscriptionId", subscriptionIdParameter);
        }
    
        public virtual int SP_DGC_SaveCondoSubscriptionRemsIntigrationDetails(Nullable<int> remsIntigrationId, Nullable<long> subscriptionId, Nullable<long> remsSubscriptionId, string remsFrontEndUrl, string remsBackEndUrl, string androidApplicationName, string iosApplicationName, string isIntigrationEnable, string appLogoPath, string updatedBy, ObjectParameter errorCode)
        {
            var remsIntigrationIdParameter = remsIntigrationId.HasValue ?
                new ObjectParameter("RemsIntigrationId", remsIntigrationId) :
                new ObjectParameter("RemsIntigrationId", typeof(int));
    
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            var remsSubscriptionIdParameter = remsSubscriptionId.HasValue ?
                new ObjectParameter("RemsSubscriptionId", remsSubscriptionId) :
                new ObjectParameter("RemsSubscriptionId", typeof(long));
    
            var remsFrontEndUrlParameter = remsFrontEndUrl != null ?
                new ObjectParameter("RemsFrontEndUrl", remsFrontEndUrl) :
                new ObjectParameter("RemsFrontEndUrl", typeof(string));
    
            var remsBackEndUrlParameter = remsBackEndUrl != null ?
                new ObjectParameter("RemsBackEndUrl", remsBackEndUrl) :
                new ObjectParameter("RemsBackEndUrl", typeof(string));
    
            var androidApplicationNameParameter = androidApplicationName != null ?
                new ObjectParameter("AndroidApplicationName", androidApplicationName) :
                new ObjectParameter("AndroidApplicationName", typeof(string));
    
            var iosApplicationNameParameter = iosApplicationName != null ?
                new ObjectParameter("IosApplicationName", iosApplicationName) :
                new ObjectParameter("IosApplicationName", typeof(string));
    
            var isIntigrationEnableParameter = isIntigrationEnable != null ?
                new ObjectParameter("IsIntigrationEnable", isIntigrationEnable) :
                new ObjectParameter("IsIntigrationEnable", typeof(string));
    
            var appLogoPathParameter = appLogoPath != null ?
                new ObjectParameter("AppLogoPath", appLogoPath) :
                new ObjectParameter("AppLogoPath", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCondoSubscriptionRemsIntigrationDetails", remsIntigrationIdParameter, subscriptionIdParameter, remsSubscriptionIdParameter, remsFrontEndUrlParameter, remsBackEndUrlParameter, androidApplicationNameParameter, iosApplicationNameParameter, isIntigrationEnableParameter, appLogoPathParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveInitailaManagerSubscriptionUserDetails(Nullable<long> subScriptionId, Nullable<long> centralUserId, string updatedBy, ObjectParameter errorCode)
        {
            var subScriptionIdParameter = subScriptionId.HasValue ?
                new ObjectParameter("SubScriptionId", subScriptionId) :
                new ObjectParameter("SubScriptionId", typeof(long));
    
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveInitailaManagerSubscriptionUserDetails", subScriptionIdParameter, centralUserIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_GetPropertyManagerDetailsBySubscriptionId(Nullable<long> subscriptionId, ObjectParameter centraUserId)
        {
            var subscriptionIdParameter = subscriptionId.HasValue ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_GetPropertyManagerDetailsBySubscriptionId", subscriptionIdParameter, centraUserId);
        }
    
        public virtual ObjectResult<SP_DGC_GetUserPasswordDetailsByCentralUserId_Result> SP_DGC_GetUserPasswordDetailsByCentralUserId(Nullable<long> centralUserId)
        {
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUserPasswordDetailsByCentralUserId_Result>("SP_DGC_GetUserPasswordDetailsByCentralUserId", centralUserIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllTicketSystemDetails_Result> SP_DGC_GetAllTicketSystemDetails(Nullable<System.DateTime> ticketFromDate, Nullable<System.DateTime> ticketToDate, Nullable<int> statusId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, string subscriptionCode, Nullable<long> subscriptionID, ObjectParameter actualTotalRecords)
        {
            var ticketFromDateParameter = ticketFromDate.HasValue ?
                new ObjectParameter("TicketFromDate", ticketFromDate) :
                new ObjectParameter("TicketFromDate", typeof(System.DateTime));
    
            var ticketToDateParameter = ticketToDate.HasValue ?
                new ObjectParameter("TicketToDate", ticketToDate) :
                new ObjectParameter("TicketToDate", typeof(System.DateTime));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var subscriptionCodeParameter = subscriptionCode != null ?
                new ObjectParameter("SubscriptionCode", subscriptionCode) :
                new ObjectParameter("SubscriptionCode", typeof(string));
    
            var subscriptionIDParameter = subscriptionID.HasValue ?
                new ObjectParameter("SubscriptionID", subscriptionID) :
                new ObjectParameter("SubscriptionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllTicketSystemDetails_Result>("SP_DGC_GetAllTicketSystemDetails", ticketFromDateParameter, ticketToDateParameter, statusIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, subscriptionCodeParameter, subscriptionIDParameter, actualTotalRecords);
        }
    }
}
