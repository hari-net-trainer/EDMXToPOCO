//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CondoRepository.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DigitalCondomiumEntities : DbContext
    {
        public DigitalCondomiumEntities()
            : base("name=DigitalCondomiumEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int SP_DGC_CheckUserLoginCredentials(string userLogIn, string userPassword, ObjectParameter userId)
        {
            var userLogInParameter = userLogIn != null ?
                new ObjectParameter("UserLogIn", userLogIn) :
                new ObjectParameter("UserLogIn", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CheckUserLoginCredentials", userLogInParameter, userPasswordParameter, userId);
        }
    
        public virtual int SP_DGC_DeactivateUser(Nullable<long> userId, string deletedBy, ObjectParameter errorCode)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeactivateUser", userIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteAdditionalServiceProviderById(Nullable<int> serviceProviderId, string deletedBy, ObjectParameter errorCode)
        {
            var serviceProviderIdParameter = serviceProviderId.HasValue ?
                new ObjectParameter("ServiceProviderId", serviceProviderId) :
                new ObjectParameter("ServiceProviderId", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteAdditionalServiceProviderById", serviceProviderIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteAnnouncement(Nullable<int> announcementId, string updatedBY, ObjectParameter errorCode)
        {
            var announcementIdParameter = announcementId.HasValue ?
                new ObjectParameter("AnnouncementId", announcementId) :
                new ObjectParameter("AnnouncementId", typeof(int));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteAnnouncement", announcementIdParameter, updatedBYParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteBlockById(Nullable<int> blockId, string updatedBy, ObjectParameter errorCode)
        {
            var blockIdParameter = blockId.HasValue ?
                new ObjectParameter("BlockId", blockId) :
                new ObjectParameter("BlockId", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteBlockById", blockIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteEmergencyContactById(Nullable<int> contactId, string deletedBY, ObjectParameter errorCode)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("ContactId", contactId) :
                new ObjectParameter("ContactId", typeof(int));
    
            var deletedBYParameter = deletedBY != null ?
                new ObjectParameter("DeletedBY", deletedBY) :
                new ObjectParameter("DeletedBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteEmergencyContactById", contactIdParameter, deletedBYParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteFloorById(Nullable<int> floorId, string deletedBy, ObjectParameter errorCode)
        {
            var floorIdParameter = floorId.HasValue ?
                new ObjectParameter("FloorId", floorId) :
                new ObjectParameter("FloorId", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteFloorById", floorIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteNotification(Nullable<int> notificationId, string updatedBY, ObjectParameter errorCode)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(int));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteNotification", notificationIdParameter, updatedBYParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteRennovationRequest(Nullable<long> rennovationRequestId, string deletedBy, ObjectParameter errorCode)
        {
            var rennovationRequestIdParameter = rennovationRequestId.HasValue ?
                new ObjectParameter("RennovationRequestId", rennovationRequestId) :
                new ObjectParameter("RennovationRequestId", typeof(long));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteRennovationRequest", rennovationRequestIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteUnitById(Nullable<int> unitId, string updatedBy, ObjectParameter errorCode)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteUnitById", unitIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteVendorRegistrationById(Nullable<long> vendorRegId, string deletedBy, ObjectParameter errorCode)
        {
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(long));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteVendorRegistrationById", vendorRegIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAccessGoodsRequestDetailsById_Result> SP_DGC_GetAccessGoodsRequestDetailsById(Nullable<long> requestId)
        {
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAccessGoodsRequestDetailsById_Result>("SP_DGC_GetAccessGoodsRequestDetailsById", requestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveBillType_Result> SP_DGC_GetActiveBillType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveBillType_Result>("SP_DGC_GetActiveBillType");
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveBlockSettings_Result> SP_DGC_GetActiveBlockSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveBlockSettings_Result>("SP_DGC_GetActiveBlockSettings");
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveCountriesByFlag_Result> SP_DGC_GetActiveCountriesByFlag(string isMalaysia)
        {
            var isMalaysiaParameter = isMalaysia != null ?
                new ObjectParameter("IsMalaysia", isMalaysia) :
                new ObjectParameter("IsMalaysia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveCountriesByFlag_Result>("SP_DGC_GetActiveCountriesByFlag", isMalaysiaParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveDepartments_Result> SP_DGC_GetActiveDepartments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveDepartments_Result>("SP_DGC_GetActiveDepartments");
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveFloorSettingsByBlockId_Result> SP_DGC_GetActiveFloorSettingsByBlockId(Nullable<int> blockId)
        {
            var blockIdParameter = blockId.HasValue ?
                new ObjectParameter("BlockId", blockId) :
                new ObjectParameter("BlockId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveFloorSettingsByBlockId_Result>("SP_DGC_GetActiveFloorSettingsByBlockId", blockIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveNotifications_Result> SP_DGC_GetActiveNotifications(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveNotifications_Result>("SP_DGC_GetActiveNotifications", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveUnits_Result> SP_DGC_GetActiveUnits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveUnits_Result>("SP_DGC_GetActiveUnits");
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveUnitSettingsByFloorId_Result> SP_DGC_GetActiveUnitSettingsByFloorId(Nullable<int> floorId)
        {
            var floorIdParameter = floorId.HasValue ?
                new ObjectParameter("FloorId", floorId) :
                new ObjectParameter("FloorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveUnitSettingsByFloorId_Result>("SP_DGC_GetActiveUnitSettingsByFloorId", floorIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveVendorServiceDepartments_Result> SP_DGC_GetActiveVendorServiceDepartments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveVendorServiceDepartments_Result>("SP_DGC_GetActiveVendorServiceDepartments");
        }
    
        public virtual ObjectResult<SP_DGC_GetAdditionalServiceProviderById_Result> SP_DGC_GetAdditionalServiceProviderById(Nullable<int> serviceProviderId)
        {
            var serviceProviderIdParameter = serviceProviderId.HasValue ?
                new ObjectParameter("ServiceProviderId", serviceProviderId) :
                new ObjectParameter("ServiceProviderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAdditionalServiceProviderById_Result>("SP_DGC_GetAdditionalServiceProviderById", serviceProviderIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllAdditionalServiceProviders_Result> SP_DGC_GetAllAdditionalServiceProviders(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllAdditionalServiceProviders_Result>("SP_DGC_GetAllAdditionalServiceProviders", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllBlocksSettings_Result> SP_DGC_GetAllBlocksSettings(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllBlocksSettings_Result>("SP_DGC_GetAllBlocksSettings", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllComiteeMembers_Result> SP_DGC_GetAllComiteeMembers(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllComiteeMembers_Result>("SP_DGC_GetAllComiteeMembers", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllEmergencyContacts_Result> SP_DGC_GetAllEmergencyContacts(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllEmergencyContacts_Result>("SP_DGC_GetAllEmergencyContacts", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllFloorSettings_Result> SP_DGC_GetAllFloorSettings(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllFloorSettings_Result>("SP_DGC_GetAllFloorSettings", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitDisplayFormats_Result> SP_DGC_GetAllUnitDisplayFormats()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitDisplayFormats_Result>("SP_DGC_GetAllUnitDisplayFormats");
        }
    
        public virtual ObjectResult<SP_DGC_GetAnnouncementById_Result> SP_DGC_GetAnnouncementById(Nullable<int> announcementId)
        {
            var announcementIdParameter = announcementId.HasValue ?
                new ObjectParameter("AnnouncementId", announcementId) :
                new ObjectParameter("AnnouncementId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAnnouncementById_Result>("SP_DGC_GetAnnouncementById", announcementIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetBlockSettingsById_Result> SP_DGC_GetBlockSettingsById(Nullable<int> blockId)
        {
            var blockIdParameter = blockId.HasValue ?
                new ObjectParameter("BlockId", blockId) :
                new ObjectParameter("BlockId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetBlockSettingsById_Result>("SP_DGC_GetBlockSettingsById", blockIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCommitieMemberDetailsById_Result> SP_DGC_GetCommitieMemberDetailsById(Nullable<int> commiteeMemberId)
        {
            var commiteeMemberIdParameter = commiteeMemberId.HasValue ?
                new ObjectParameter("CommiteeMemberId", commiteeMemberId) :
                new ObjectParameter("CommiteeMemberId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCommitieMemberDetailsById_Result>("SP_DGC_GetCommitieMemberDetailsById", commiteeMemberIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetConfigValuesByName_Result> SP_DGC_GetConfigValuesByName(string configName)
        {
            var configNameParameter = configName != null ?
                new ObjectParameter("ConfigName", configName) :
                new ObjectParameter("ConfigName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetConfigValuesByName_Result>("SP_DGC_GetConfigValuesByName", configNameParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCountries_Result> SP_DGC_GetCountries(string isMalaySia)
        {
            var isMalaySiaParameter = isMalaySia != null ?
                new ObjectParameter("IsMalaySia", isMalaySia) :
                new ObjectParameter("IsMalaySia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCountries_Result>("SP_DGC_GetCountries", isMalaySiaParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCurrentCommiteeMembers_Result> SP_DGC_GetCurrentCommiteeMembers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCurrentCommiteeMembers_Result>("SP_DGC_GetCurrentCommiteeMembers");
        }
    
        public virtual ObjectResult<SP_DGC_GetCurrentNotifications_Result> SP_DGC_GetCurrentNotifications(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCurrentNotifications_Result>("SP_DGC_GetCurrentNotifications", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetEmergencyContactById_Result> SP_DGC_GetEmergencyContactById(Nullable<int> contactId)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("ContactId", contactId) :
                new ObjectParameter("ContactId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetEmergencyContactById_Result>("SP_DGC_GetEmergencyContactById", contactIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetFloorSettingsById_Result> SP_DGC_GetFloorSettingsById(Nullable<int> floorId)
        {
            var floorIdParameter = floorId.HasValue ?
                new ObjectParameter("FloorId", floorId) :
                new ObjectParameter("FloorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFloorSettingsById_Result>("SP_DGC_GetFloorSettingsById", floorIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetGoodsPriceDetails_Result> SP_DGC_GetGoodsPriceDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetGoodsPriceDetails_Result>("SP_DGC_GetGoodsPriceDetails");
        }
    
        public virtual ObjectResult<SP_DGC_GetNotificationById_Result> SP_DGC_GetNotificationById(Nullable<int> notificationId)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetNotificationById_Result>("SP_DGC_GetNotificationById", notificationIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetOwnerDetailsByNameSearch_Result> SP_DGC_GetOwnerDetailsByNameSearch(string ownerName)
        {
            var ownerNameParameter = ownerName != null ?
                new ObjectParameter("OwnerName", ownerName) :
                new ObjectParameter("OwnerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetOwnerDetailsByNameSearch_Result>("SP_DGC_GetOwnerDetailsByNameSearch", ownerNameParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetRolesByDepartmentId_Result> SP_DGC_GetRolesByDepartmentId(Nullable<int> departmentId)
        {
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetRolesByDepartmentId_Result>("SP_DGC_GetRolesByDepartmentId", departmentIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetTodaysVisitorRequests_Result> SP_DGC_GetTodaysVisitorRequests(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetTodaysVisitorRequests_Result>("SP_DGC_GetTodaysVisitorRequests", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitOwnerDependentDetails_Result> SP_DGC_GetUnitOwnerDependentDetails(Nullable<long> unitPurchaseRequestId)
        {
            var unitPurchaseRequestIdParameter = unitPurchaseRequestId.HasValue ?
                new ObjectParameter("UnitPurchaseRequestId", unitPurchaseRequestId) :
                new ObjectParameter("UnitPurchaseRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitOwnerDependentDetails_Result>("SP_DGC_GetUnitOwnerDependentDetails", unitPurchaseRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitTenantDependentDetails_Result> SP_DGC_GetUnitTenantDependentDetails(Nullable<long> unitTenantRequestId)
        {
            var unitTenantRequestIdParameter = unitTenantRequestId.HasValue ?
                new ObjectParameter("UnitTenantRequestId", unitTenantRequestId) :
                new ObjectParameter("UnitTenantRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitTenantDependentDetails_Result>("SP_DGC_GetUnitTenantDependentDetails", unitTenantRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUsersOfRoleByNameSearch_Result> SP_DGC_GetUsersOfRoleByNameSearch(string name, string roleName, Nullable<int> departmentId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUsersOfRoleByNameSearch_Result>("SP_DGC_GetUsersOfRoleByNameSearch", nameParameter, roleNameParameter, departmentIdParameter);
        }
    
        public virtual int SP_DGC_SaveAdditionalServiceProviderDetails(Nullable<int> serviceProviderId, string providerName, string providerPhoneNumber, string providerEmail, string providerDescription, string serviceName, string isActive, string updatedBy, ObjectParameter errorCode)
        {
            var serviceProviderIdParameter = serviceProviderId.HasValue ?
                new ObjectParameter("ServiceProviderId", serviceProviderId) :
                new ObjectParameter("ServiceProviderId", typeof(int));
    
            var providerNameParameter = providerName != null ?
                new ObjectParameter("ProviderName", providerName) :
                new ObjectParameter("ProviderName", typeof(string));
    
            var providerPhoneNumberParameter = providerPhoneNumber != null ?
                new ObjectParameter("ProviderPhoneNumber", providerPhoneNumber) :
                new ObjectParameter("ProviderPhoneNumber", typeof(string));
    
            var providerEmailParameter = providerEmail != null ?
                new ObjectParameter("ProviderEmail", providerEmail) :
                new ObjectParameter("ProviderEmail", typeof(string));
    
            var providerDescriptionParameter = providerDescription != null ?
                new ObjectParameter("ProviderDescription", providerDescription) :
                new ObjectParameter("ProviderDescription", typeof(string));
    
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("ServiceName", serviceName) :
                new ObjectParameter("ServiceName", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveAdditionalServiceProviderDetails", serviceProviderIdParameter, providerNameParameter, providerPhoneNumberParameter, providerEmailParameter, providerDescriptionParameter, serviceNameParameter, isActiveParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveAnnouncement(Nullable<int> announcementId, string announcementSubject, string announcementDescription, Nullable<System.DateTime> validFrom, Nullable<System.DateTime> validTo, string referenceFileName, string updatedBy, string isActive, ObjectParameter errorCode)
        {
            var announcementIdParameter = announcementId.HasValue ?
                new ObjectParameter("AnnouncementId", announcementId) :
                new ObjectParameter("AnnouncementId", typeof(int));
    
            var announcementSubjectParameter = announcementSubject != null ?
                new ObjectParameter("AnnouncementSubject", announcementSubject) :
                new ObjectParameter("AnnouncementSubject", typeof(string));
    
            var announcementDescriptionParameter = announcementDescription != null ?
                new ObjectParameter("AnnouncementDescription", announcementDescription) :
                new ObjectParameter("AnnouncementDescription", typeof(string));
    
            var validFromParameter = validFrom.HasValue ?
                new ObjectParameter("ValidFrom", validFrom) :
                new ObjectParameter("ValidFrom", typeof(System.DateTime));
    
            var validToParameter = validTo.HasValue ?
                new ObjectParameter("ValidTo", validTo) :
                new ObjectParameter("ValidTo", typeof(System.DateTime));
    
            var referenceFileNameParameter = referenceFileName != null ?
                new ObjectParameter("ReferenceFileName", referenceFileName) :
                new ObjectParameter("ReferenceFileName", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveAnnouncement", announcementIdParameter, announcementSubjectParameter, announcementDescriptionParameter, validFromParameter, validToParameter, referenceFileNameParameter, updatedByParameter, isActiveParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveBlockSettings(Nullable<int> blockId, string blockName, string isActive, string updatedBy, ObjectParameter errorCode)
        {
            var blockIdParameter = blockId.HasValue ?
                new ObjectParameter("BlockId", blockId) :
                new ObjectParameter("BlockId", typeof(int));
    
            var blockNameParameter = blockName != null ?
                new ObjectParameter("BlockName", blockName) :
                new ObjectParameter("BlockName", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveBlockSettings", blockIdParameter, blockNameParameter, isActiveParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveComiteeMemberDetails(Nullable<int> comiteeMemberId, Nullable<long> commiteeMemberUserId, Nullable<int> unitId, string designation, Nullable<int> electionConductedYear, Nullable<System.DateTime> periodFrom, Nullable<System.DateTime> periodTo, string createdBy, ObjectParameter errorCode)
        {
            var comiteeMemberIdParameter = comiteeMemberId.HasValue ?
                new ObjectParameter("ComiteeMemberId", comiteeMemberId) :
                new ObjectParameter("ComiteeMemberId", typeof(int));
    
            var commiteeMemberUserIdParameter = commiteeMemberUserId.HasValue ?
                new ObjectParameter("CommiteeMemberUserId", commiteeMemberUserId) :
                new ObjectParameter("CommiteeMemberUserId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var electionConductedYearParameter = electionConductedYear.HasValue ?
                new ObjectParameter("ElectionConductedYear", electionConductedYear) :
                new ObjectParameter("ElectionConductedYear", typeof(int));
    
            var periodFromParameter = periodFrom.HasValue ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(System.DateTime));
    
            var periodToParameter = periodTo.HasValue ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveComiteeMemberDetails", comiteeMemberIdParameter, commiteeMemberUserIdParameter, unitIdParameter, designationParameter, electionConductedYearParameter, periodFromParameter, periodToParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveComplaintDetails(string subject, string description, Nullable<int> departmentId, Nullable<int> statusId, Nullable<long> raisedByUserId, string referenceDocPath, string raisedBy, ObjectParameter errorCode)
        {
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var raisedByUserIdParameter = raisedByUserId.HasValue ?
                new ObjectParameter("RaisedByUserId", raisedByUserId) :
                new ObjectParameter("RaisedByUserId", typeof(long));
    
            var referenceDocPathParameter = referenceDocPath != null ?
                new ObjectParameter("ReferenceDocPath", referenceDocPath) :
                new ObjectParameter("ReferenceDocPath", typeof(string));
    
            var raisedByParameter = raisedBy != null ?
                new ObjectParameter("RaisedBy", raisedBy) :
                new ObjectParameter("RaisedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveComplaintDetails", subjectParameter, descriptionParameter, departmentIdParameter, statusIdParameter, raisedByUserIdParameter, referenceDocPathParameter, raisedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveEmergencyContact(Nullable<int> contactId, string contactName, string contactPhoneNumber, string contactEmail, string contactDescription, string isActive, string updatedBy, ObjectParameter errorCode)
        {
            var contactIdParameter = contactId.HasValue ?
                new ObjectParameter("ContactId", contactId) :
                new ObjectParameter("ContactId", typeof(int));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var contactPhoneNumberParameter = contactPhoneNumber != null ?
                new ObjectParameter("ContactPhoneNumber", contactPhoneNumber) :
                new ObjectParameter("ContactPhoneNumber", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var contactDescriptionParameter = contactDescription != null ?
                new ObjectParameter("ContactDescription", contactDescription) :
                new ObjectParameter("ContactDescription", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveEmergencyContact", contactIdParameter, contactNameParameter, contactPhoneNumberParameter, contactEmailParameter, contactDescriptionParameter, isActiveParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveFloorSettings(Nullable<int> floorId, string floorNo, Nullable<int> blockId, string isActive, string updatedBy, ObjectParameter errorCode)
        {
            var floorIdParameter = floorId.HasValue ?
                new ObjectParameter("FloorId", floorId) :
                new ObjectParameter("FloorId", typeof(int));
    
            var floorNoParameter = floorNo != null ?
                new ObjectParameter("FloorNo", floorNo) :
                new ObjectParameter("FloorNo", typeof(string));
    
            var blockIdParameter = blockId.HasValue ?
                new ObjectParameter("BlockId", blockId) :
                new ObjectParameter("BlockId", typeof(int));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFloorSettings", floorIdParameter, floorNoParameter, blockIdParameter, isActiveParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveGoodsPriceDetails(string goodsPriceInfo, Nullable<System.DateTime> updatedBy, ObjectParameter errorCode)
        {
            var goodsPriceInfoParameter = goodsPriceInfo != null ?
                new ObjectParameter("GoodsPriceInfo", goodsPriceInfo) :
                new ObjectParameter("GoodsPriceInfo", typeof(string));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveGoodsPriceDetails", goodsPriceInfoParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveVisitorRequestDetails(Nullable<int> visitorRequestId, Nullable<long> livingMemberId, Nullable<int> unitId, string visitorName, string visitingPurpose, string visitorMobileNo, string visitorVehicleNo, Nullable<System.DateTime> visitingDateTime, string updatedBy, ObjectParameter errorCode)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            var livingMemberIdParameter = livingMemberId.HasValue ?
                new ObjectParameter("LivingMemberId", livingMemberId) :
                new ObjectParameter("LivingMemberId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var visitorNameParameter = visitorName != null ?
                new ObjectParameter("VisitorName", visitorName) :
                new ObjectParameter("VisitorName", typeof(string));
    
            var visitingPurposeParameter = visitingPurpose != null ?
                new ObjectParameter("VisitingPurpose", visitingPurpose) :
                new ObjectParameter("VisitingPurpose", typeof(string));
    
            var visitorMobileNoParameter = visitorMobileNo != null ?
                new ObjectParameter("VisitorMobileNo", visitorMobileNo) :
                new ObjectParameter("VisitorMobileNo", typeof(string));
    
            var visitorVehicleNoParameter = visitorVehicleNo != null ?
                new ObjectParameter("VisitorVehicleNo", visitorVehicleNo) :
                new ObjectParameter("VisitorVehicleNo", typeof(string));
    
            var visitingDateTimeParameter = visitingDateTime.HasValue ?
                new ObjectParameter("VisitingDateTime", visitingDateTime) :
                new ObjectParameter("VisitingDateTime", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVisitorRequestDetails", visitorRequestIdParameter, livingMemberIdParameter, unitIdParameter, visitorNameParameter, visitingPurposeParameter, visitorMobileNoParameter, visitorVehicleNoParameter, visitingDateTimeParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveHallBookingRequest(Nullable<long> hallBookingRequestId, string requestFor, Nullable<int> unitId, Nullable<long> livingMemberUserId, Nullable<System.DateTime> bookingDate, Nullable<decimal> depositAmount, Nullable<decimal> rentAmount, string puproseOfBooking, Nullable<long> depositPriceId, Nullable<long> rentPriceId, Nullable<int> statusId, Nullable<long> requestByUserId, string updatedBy, ObjectParameter errorCode)
        {
            var hallBookingRequestIdParameter = hallBookingRequestId.HasValue ?
                new ObjectParameter("HallBookingRequestId", hallBookingRequestId) :
                new ObjectParameter("HallBookingRequestId", typeof(long));
    
            var requestForParameter = requestFor != null ?
                new ObjectParameter("RequestFor", requestFor) :
                new ObjectParameter("RequestFor", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var livingMemberUserIdParameter = livingMemberUserId.HasValue ?
                new ObjectParameter("livingMemberUserId", livingMemberUserId) :
                new ObjectParameter("livingMemberUserId", typeof(long));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var depositAmountParameter = depositAmount.HasValue ?
                new ObjectParameter("DepositAmount", depositAmount) :
                new ObjectParameter("DepositAmount", typeof(decimal));
    
            var rentAmountParameter = rentAmount.HasValue ?
                new ObjectParameter("RentAmount", rentAmount) :
                new ObjectParameter("RentAmount", typeof(decimal));
    
            var puproseOfBookingParameter = puproseOfBooking != null ?
                new ObjectParameter("PuproseOfBooking", puproseOfBooking) :
                new ObjectParameter("PuproseOfBooking", typeof(string));
    
            var depositPriceIdParameter = depositPriceId.HasValue ?
                new ObjectParameter("DepositPriceId", depositPriceId) :
                new ObjectParameter("DepositPriceId", typeof(long));
    
            var rentPriceIdParameter = rentPriceId.HasValue ?
                new ObjectParameter("RentPriceId", rentPriceId) :
                new ObjectParameter("RentPriceId", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var requestByUserIdParameter = requestByUserId.HasValue ?
                new ObjectParameter("RequestByUserId", requestByUserId) :
                new ObjectParameter("RequestByUserId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveHallBookingRequest", hallBookingRequestIdParameter, requestForParameter, unitIdParameter, livingMemberUserIdParameter, bookingDateParameter, depositAmountParameter, rentAmountParameter, puproseOfBookingParameter, depositPriceIdParameter, rentPriceIdParameter, statusIdParameter, requestByUserIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveHallFeeDetails_Result> SP_DGC_GetActiveHallFeeDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveHallFeeDetails_Result>("SP_DGC_GetActiveHallFeeDetails");
        }
    
        public virtual ObjectResult<SP_DGC_GetClampRequestDetailsById_Result> SP_DGC_GetClampRequestDetailsById(Nullable<long> clampRequestId)
        {
            var clampRequestIdParameter = clampRequestId.HasValue ?
                new ObjectParameter("ClampRequestId", clampRequestId) :
                new ObjectParameter("ClampRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetClampRequestDetailsById_Result>("SP_DGC_GetClampRequestDetailsById", clampRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllDepartmentsDetails_Result> SP_DGC_GetAllDepartmentsDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllDepartmentsDetails_Result>("SP_DGC_GetAllDepartmentsDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllRoles_Result> SP_DGC_GetAllRoles(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllRoles_Result>("SP_DGC_GetAllRoles", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetDepartmentByDptId_Result> SP_DGC_GetDepartmentByDptId(Nullable<int> departmentId)
        {
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetDepartmentByDptId_Result>("SP_DGC_GetDepartmentByDptId", departmentIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetRolesByRoleId_Result> SP_DGC_GetRolesByRoleId(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetRolesByRoleId_Result>("SP_DGC_GetRolesByRoleId", roleIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUserPermitableUnitsByUserId_Result> SP_DGC_GetUserPermitableUnitsByUserId(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUserPermitableUnitsByUserId_Result>("SP_DGC_GetUserPermitableUnitsByUserId", userIdParameter);
        }
    
        public virtual int SP_DGC_SaveDepartmentDetails(Nullable<int> departmentId, string departmentName, string isVendorServiceEnabled, string isActive, string createdBy, ObjectParameter errorCode)
        {
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var departmentNameParameter = departmentName != null ?
                new ObjectParameter("DepartmentName", departmentName) :
                new ObjectParameter("DepartmentName", typeof(string));
    
            var isVendorServiceEnabledParameter = isVendorServiceEnabled != null ?
                new ObjectParameter("IsVendorServiceEnabled", isVendorServiceEnabled) :
                new ObjectParameter("IsVendorServiceEnabled", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveDepartmentDetails", departmentIdParameter, departmentNameParameter, isVendorServiceEnabledParameter, isActiveParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveRolesDetails(Nullable<int> roleId, Nullable<int> departmentId, string roleName, string roleDisplayName, string roleDescription, string isActive, string createdBy, ObjectParameter errorCode)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var roleDisplayNameParameter = roleDisplayName != null ?
                new ObjectParameter("RoleDisplayName", roleDisplayName) :
                new ObjectParameter("RoleDisplayName", typeof(string));
    
            var roleDescriptionParameter = roleDescription != null ?
                new ObjectParameter("RoleDescription", roleDescription) :
                new ObjectParameter("RoleDescription", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveRolesDetails", roleIdParameter, departmentIdParameter, roleNameParameter, roleDisplayNameParameter, roleDescriptionParameter, isActiveParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetCurrentAccessGoodsInfoByUnitId_Result> SP_DGC_GetCurrentAccessGoodsInfoByUnitId(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCurrentAccessGoodsInfoByUnitId_Result>("SP_DGC_GetCurrentAccessGoodsInfoByUnitId", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCurrentInvoiceInfoByUnitId_Result> SP_DGC_GetCurrentInvoiceInfoByUnitId(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCurrentInvoiceInfoByUnitId_Result>("SP_DGC_GetCurrentInvoiceInfoByUnitId", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetShopPICDetailsBySRId_Result> SP_DGC_GetShopPICDetailsBySRId(Nullable<int> shopRegistrationId)
        {
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetShopPICDetailsBySRId_Result>("SP_DGC_GetShopPICDetailsBySRId", shopRegistrationIdParameter);
        }
    
        public virtual int SP_DGC_SaveShopPICDetails(Nullable<int> shopPICId, Nullable<int> shopRegistrationId, Nullable<long> picUserID, string pICName, string pICEmail, string pICMobileNumber, string isActive, string createdBy, ObjectParameter errorCode, Nullable<int> shopSetupId)
        {
            var shopPICIdParameter = shopPICId.HasValue ?
                new ObjectParameter("ShopPICId", shopPICId) :
                new ObjectParameter("ShopPICId", typeof(int));
    
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            var picUserIDParameter = picUserID.HasValue ?
                new ObjectParameter("PicUserID", picUserID) :
                new ObjectParameter("PicUserID", typeof(long));
    
            var pICNameParameter = pICName != null ?
                new ObjectParameter("PICName", pICName) :
                new ObjectParameter("PICName", typeof(string));
    
            var pICEmailParameter = pICEmail != null ?
                new ObjectParameter("PICEmail", pICEmail) :
                new ObjectParameter("PICEmail", typeof(string));
    
            var pICMobileNumberParameter = pICMobileNumber != null ?
                new ObjectParameter("PICMobileNumber", pICMobileNumber) :
                new ObjectParameter("PICMobileNumber", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var shopSetupIdParameter = shopSetupId.HasValue ?
                new ObjectParameter("shopSetupId", shopSetupId) :
                new ObjectParameter("shopSetupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveShopPICDetails", shopPICIdParameter, shopRegistrationIdParameter, picUserIDParameter, pICNameParameter, pICEmailParameter, pICMobileNumberParameter, isActiveParameter, createdByParameter, errorCode, shopSetupIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllShopMembersDetails_Result> SP_DGC_GetAllShopMembersDetails(Nullable<int> shopRegistrationId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllShopMembersDetails_Result>("SP_DGC_GetAllShopMembersDetails", shopRegistrationIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetShopMemberDetailsBySMId_Result> SP_DGC_GetShopMemberDetailsBySMId(Nullable<int> shopMemberId)
        {
            var shopMemberIdParameter = shopMemberId.HasValue ?
                new ObjectParameter("ShopMemberId", shopMemberId) :
                new ObjectParameter("ShopMemberId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetShopMemberDetailsBySMId_Result>("SP_DGC_GetShopMemberDetailsBySMId", shopMemberIdParameter);
        }
    
        public virtual int SP_DGC_SaveShopMemberDetails(Nullable<int> shopMemberId, Nullable<int> shopRegistrationId, string memberName, string memberEmail, string memberMobileNo, string isCardIssued, string cardNumber, string isActive, string updatedBy, ObjectParameter errorCode)
        {
            var shopMemberIdParameter = shopMemberId.HasValue ?
                new ObjectParameter("ShopMemberId", shopMemberId) :
                new ObjectParameter("ShopMemberId", typeof(int));
    
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var memberEmailParameter = memberEmail != null ?
                new ObjectParameter("MemberEmail", memberEmail) :
                new ObjectParameter("MemberEmail", typeof(string));
    
            var memberMobileNoParameter = memberMobileNo != null ?
                new ObjectParameter("MemberMobileNo", memberMobileNo) :
                new ObjectParameter("MemberMobileNo", typeof(string));
    
            var isCardIssuedParameter = isCardIssued != null ?
                new ObjectParameter("IsCardIssued", isCardIssued) :
                new ObjectParameter("IsCardIssued", typeof(string));
    
            var cardNumberParameter = cardNumber != null ?
                new ObjectParameter("CardNumber", cardNumber) :
                new ObjectParameter("CardNumber", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveShopMemberDetails", shopMemberIdParameter, shopRegistrationIdParameter, memberNameParameter, memberEmailParameter, memberMobileNoParameter, isCardIssuedParameter, cardNumberParameter, isActiveParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveVendorCompany_Result1> SP_DGC_GetActiveVendorCompany()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveVendorCompany_Result1>("SP_DGC_GetActiveVendorCompany");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUtiltityBillsDetails_Result> SP_DGC_GetAllUtiltityBillsDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUtiltityBillsDetails_Result>("SP_DGC_GetAllUtiltityBillsDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetUtilityBillsById_Result> SP_DGC_GetUtilityBillsById(Nullable<int> utiltityBillId)
        {
            var utiltityBillIdParameter = utiltityBillId.HasValue ?
                new ObjectParameter("UtiltityBillId", utiltityBillId) :
                new ObjectParameter("UtiltityBillId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUtilityBillsById_Result>("SP_DGC_GetUtilityBillsById", utiltityBillIdParameter);
        }
    
        public virtual int SP_DGC_SaveUtilityBillsDetails(Nullable<int> utiltityBillId, Nullable<int> configurationid, string providerName, string isActive, string createdBy, ObjectParameter errorCode)
        {
            var utiltityBillIdParameter = utiltityBillId.HasValue ?
                new ObjectParameter("UtiltityBillId", utiltityBillId) :
                new ObjectParameter("UtiltityBillId", typeof(int));
    
            var configurationidParameter = configurationid.HasValue ?
                new ObjectParameter("Configurationid", configurationid) :
                new ObjectParameter("Configurationid", typeof(int));
    
            var providerNameParameter = providerName != null ?
                new ObjectParameter("ProviderName", providerName) :
                new ObjectParameter("ProviderName", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUtilityBillsDetails", utiltityBillIdParameter, configurationidParameter, providerNameParameter, isActiveParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetOwnerTenantByUnitId_Result> SP_DGC_GetOwnerTenantByUnitId(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetOwnerTenantByUnitId_Result>("SP_DGC_GetOwnerTenantByUnitId", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitInvoiceLineDetailsByInvoiceId_Result> SP_DGC_GetUnitInvoiceLineDetailsByInvoiceId(Nullable<long> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitInvoiceLineDetailsByInvoiceId_Result>("SP_DGC_GetUnitInvoiceLineDetailsByInvoiceId", invoiceIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveProviderNamesForUtilityInvoice_Result> SP_DGC_GetActiveProviderNamesForUtilityInvoice(Nullable<int> utilityConfigKey)
        {
            var utilityConfigKeyParameter = utilityConfigKey.HasValue ?
                new ObjectParameter("UtilityConfigKey", utilityConfigKey) :
                new ObjectParameter("UtilityConfigKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveProviderNamesForUtilityInvoice_Result>("SP_DGC_GetActiveProviderNamesForUtilityInvoice", utilityConfigKeyParameter);
        }
    
        public virtual int SP_DGC_SaveVendorInvoicePaymentDetails(Nullable<long> vendorInvoiceId, Nullable<int> statusId, string paymentInfo, string comments, string additionalReferenceFilePath, Nullable<long> actionTakenByUserId, string updatedBY, ObjectParameter errorCode)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVendorInvoicePaymentDetails", vendorInvoiceIdParameter, statusIdParameter, paymentInfoParameter, commentsParameter, additionalReferenceFilePathParameter, actionTakenByUserIdParameter, updatedBYParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAdminOfficeUsersByAutoText_Result> SP_DGC_GetAdminOfficeUsersByAutoText(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAdminOfficeUsersByAutoText_Result>("SP_DGC_GetAdminOfficeUsersByAutoText", nameParameter);
        }
    
        public virtual int SP_DGC_CancelUtilityInvoice(Nullable<long> utilityInvoiceId, string cancelReason, Nullable<long> cancelledByUserId, string cancelledBy, ObjectParameter errorCode)
        {
            var utilityInvoiceIdParameter = utilityInvoiceId.HasValue ?
                new ObjectParameter("UtilityInvoiceId", utilityInvoiceId) :
                new ObjectParameter("UtilityInvoiceId", typeof(long));
    
            var cancelReasonParameter = cancelReason != null ?
                new ObjectParameter("CancelReason", cancelReason) :
                new ObjectParameter("CancelReason", typeof(string));
    
            var cancelledByUserIdParameter = cancelledByUserId.HasValue ?
                new ObjectParameter("CancelledByUserId", cancelledByUserId) :
                new ObjectParameter("CancelledByUserId", typeof(long));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelUtilityInvoice", utilityInvoiceIdParameter, cancelReasonParameter, cancelledByUserIdParameter, cancelledByParameter, errorCode);
        }
    
        public virtual int SP_DGC_CancelVendorInvoice(Nullable<long> vendorInvoiceId, string cancelReason, Nullable<long> cancelledByUserId, string cancelledBy, ObjectParameter errorCode)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            var cancelReasonParameter = cancelReason != null ?
                new ObjectParameter("CancelReason", cancelReason) :
                new ObjectParameter("CancelReason", typeof(string));
    
            var cancelledByUserIdParameter = cancelledByUserId.HasValue ?
                new ObjectParameter("CancelledByUserId", cancelledByUserId) :
                new ObjectParameter("CancelledByUserId", typeof(long));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelVendorInvoice", vendorInvoiceIdParameter, cancelReasonParameter, cancelledByUserIdParameter, cancelledByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveUtilityInvoicePaymentDetails(Nullable<long> utilityInvoiceId, Nullable<int> statusId, string paymentInfo, string comments, string additionalReferenceFilePath, Nullable<long> actionTakenByUserId, string updatedBY, ObjectParameter errorCode)
        {
            var utilityInvoiceIdParameter = utilityInvoiceId.HasValue ?
                new ObjectParameter("UtilityInvoiceId", utilityInvoiceId) :
                new ObjectParameter("UtilityInvoiceId", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUtilityInvoicePaymentDetails", utilityInvoiceIdParameter, statusIdParameter, paymentInfoParameter, commentsParameter, additionalReferenceFilePathParameter, actionTakenByUserIdParameter, updatedBYParameter, errorCode);
        }
    
        public virtual int SP_DGC_UpdateQrCodePath(Nullable<int> unitId, string qrCodePath, string updatedBy, ObjectParameter errorCode)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var qrCodePathParameter = qrCodePath != null ?
                new ObjectParameter("QrCodePath", qrCodePath) :
                new ObjectParameter("QrCodePath", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_UpdateQrCodePath", unitIdParameter, qrCodePathParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveUnitDetails(Nullable<int> unitId, string unitName, string unitDescription, Nullable<float> builtUpArea, Nullable<int> floorId, Nullable<int> blockId, string isActive, string updatedBy, string isResidence, Nullable<decimal> rentPerMonth, Nullable<decimal> depositAmount, string qrCodePath, ObjectParameter errorCode)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            var unitDescriptionParameter = unitDescription != null ?
                new ObjectParameter("UnitDescription", unitDescription) :
                new ObjectParameter("UnitDescription", typeof(string));
    
            var builtUpAreaParameter = builtUpArea.HasValue ?
                new ObjectParameter("BuiltUpArea", builtUpArea) :
                new ObjectParameter("BuiltUpArea", typeof(float));
    
            var floorIdParameter = floorId.HasValue ?
                new ObjectParameter("FloorId", floorId) :
                new ObjectParameter("FloorId", typeof(int));
    
            var blockIdParameter = blockId.HasValue ?
                new ObjectParameter("BlockId", blockId) :
                new ObjectParameter("BlockId", typeof(int));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isResidenceParameter = isResidence != null ?
                new ObjectParameter("IsResidence", isResidence) :
                new ObjectParameter("IsResidence", typeof(string));
    
            var rentPerMonthParameter = rentPerMonth.HasValue ?
                new ObjectParameter("RentPerMonth", rentPerMonth) :
                new ObjectParameter("RentPerMonth", typeof(decimal));
    
            var depositAmountParameter = depositAmount.HasValue ?
                new ObjectParameter("DepositAmount", depositAmount) :
                new ObjectParameter("DepositAmount", typeof(decimal));
    
            var qrCodePathParameter = qrCodePath != null ?
                new ObjectParameter("QrCodePath", qrCodePath) :
                new ObjectParameter("QrCodePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitDetails", unitIdParameter, unitNameParameter, unitDescriptionParameter, builtUpAreaParameter, floorIdParameter, blockIdParameter, isActiveParameter, updatedByParameter, isResidenceParameter, rentPerMonthParameter, depositAmountParameter, qrCodePathParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeActivateUnitMember(Nullable<long> unitOccupiedFamilyMemberId, string deactivatedBy, string comments, ObjectParameter errorCode)
        {
            var unitOccupiedFamilyMemberIdParameter = unitOccupiedFamilyMemberId.HasValue ?
                new ObjectParameter("UnitOccupiedFamilyMemberId", unitOccupiedFamilyMemberId) :
                new ObjectParameter("UnitOccupiedFamilyMemberId", typeof(long));
    
            var deactivatedByParameter = deactivatedBy != null ?
                new ObjectParameter("DeactivatedBy", deactivatedBy) :
                new ObjectParameter("DeactivatedBy", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeActivateUnitMember", unitOccupiedFamilyMemberIdParameter, deactivatedByParameter, commentsParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveUnitMemberDetails(Nullable<long> unitOccupiedFamilyMemberId, Nullable<int> unitId, string memberName, string memberEmail, string memberMobileNumber, string memberIsMalaysian, Nullable<int> memberCountryId, string memberICorPassPortNumber, string memberVisaExpireMonthYear, string isOwner, string memberProfilePicPath, string raisedBy, ObjectParameter errorCode, string isAggreeToDisplayDCVMS)
        {
            var unitOccupiedFamilyMemberIdParameter = unitOccupiedFamilyMemberId.HasValue ?
                new ObjectParameter("UnitOccupiedFamilyMemberId", unitOccupiedFamilyMemberId) :
                new ObjectParameter("UnitOccupiedFamilyMemberId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var memberEmailParameter = memberEmail != null ?
                new ObjectParameter("MemberEmail", memberEmail) :
                new ObjectParameter("MemberEmail", typeof(string));
    
            var memberMobileNumberParameter = memberMobileNumber != null ?
                new ObjectParameter("MemberMobileNumber", memberMobileNumber) :
                new ObjectParameter("MemberMobileNumber", typeof(string));
    
            var memberIsMalaysianParameter = memberIsMalaysian != null ?
                new ObjectParameter("MemberIsMalaysian", memberIsMalaysian) :
                new ObjectParameter("MemberIsMalaysian", typeof(string));
    
            var memberCountryIdParameter = memberCountryId.HasValue ?
                new ObjectParameter("MemberCountryId", memberCountryId) :
                new ObjectParameter("MemberCountryId", typeof(int));
    
            var memberICorPassPortNumberParameter = memberICorPassPortNumber != null ?
                new ObjectParameter("MemberICorPassPortNumber", memberICorPassPortNumber) :
                new ObjectParameter("MemberICorPassPortNumber", typeof(string));
    
            var memberVisaExpireMonthYearParameter = memberVisaExpireMonthYear != null ?
                new ObjectParameter("MemberVisaExpireMonthYear", memberVisaExpireMonthYear) :
                new ObjectParameter("MemberVisaExpireMonthYear", typeof(string));
    
            var isOwnerParameter = isOwner != null ?
                new ObjectParameter("IsOwner", isOwner) :
                new ObjectParameter("IsOwner", typeof(string));
    
            var memberProfilePicPathParameter = memberProfilePicPath != null ?
                new ObjectParameter("MemberProfilePicPath", memberProfilePicPath) :
                new ObjectParameter("MemberProfilePicPath", typeof(string));
    
            var raisedByParameter = raisedBy != null ?
                new ObjectParameter("RaisedBy", raisedBy) :
                new ObjectParameter("RaisedBy", typeof(string));
    
            var isAggreeToDisplayDCVMSParameter = isAggreeToDisplayDCVMS != null ?
                new ObjectParameter("IsAggreeToDisplayDCVMS", isAggreeToDisplayDCVMS) :
                new ObjectParameter("IsAggreeToDisplayDCVMS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitMemberDetails", unitOccupiedFamilyMemberIdParameter, unitIdParameter, memberNameParameter, memberEmailParameter, memberMobileNumberParameter, memberIsMalaysianParameter, memberCountryIdParameter, memberICorPassPortNumberParameter, memberVisaExpireMonthYearParameter, isOwnerParameter, memberProfilePicPathParameter, raisedByParameter, errorCode, isAggreeToDisplayDCVMSParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetResUnitOwnerDetailsById_Result> SP_DGC_GetResUnitOwnerDetailsById(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetResUnitOwnerDetailsById_Result>("SP_DGC_GetResUnitOwnerDetailsById", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetResUnitTenantDetailsByUnitId_Result> SP_DGC_GetResUnitTenantDetailsByUnitId(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetResUnitTenantDetailsByUnitId_Result>("SP_DGC_GetResUnitTenantDetailsByUnitId", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitTenantRequestDetailsById_Result> SP_DGC_GetUnitTenantRequestDetailsById(Nullable<long> tenantRequestId)
        {
            var tenantRequestIdParameter = tenantRequestId.HasValue ?
                new ObjectParameter("TenantRequestId", tenantRequestId) :
                new ObjectParameter("TenantRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitTenantRequestDetailsById_Result>("SP_DGC_GetUnitTenantRequestDetailsById", tenantRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetVendorPICDetailsByVRId_Result> SP_DGC_GetVendorPICDetailsByVRId(Nullable<int> vendorRegId)
        {
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVendorPICDetailsByVRId_Result>("SP_DGC_GetVendorPICDetailsByVRId", vendorRegIdParameter);
        }
    
        public virtual int SP_DGC_DeActiveVendorPIC(Nullable<int> vendorPICId, Nullable<long> picUserID, Nullable<long> pICcentralUserid, string deActivatedBy)
        {
            var vendorPICIdParameter = vendorPICId.HasValue ?
                new ObjectParameter("VendorPICId", vendorPICId) :
                new ObjectParameter("VendorPICId", typeof(int));
    
            var picUserIDParameter = picUserID.HasValue ?
                new ObjectParameter("PicUserID", picUserID) :
                new ObjectParameter("PicUserID", typeof(long));
    
            var pICcentralUseridParameter = pICcentralUserid.HasValue ?
                new ObjectParameter("PICcentralUserid", pICcentralUserid) :
                new ObjectParameter("PICcentralUserid", typeof(long));
    
            var deActivatedByParameter = deActivatedBy != null ?
                new ObjectParameter("DeActivatedBy", deActivatedBy) :
                new ObjectParameter("DeActivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeActiveVendorPIC", vendorPICIdParameter, picUserIDParameter, pICcentralUseridParameter, deActivatedByParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAccessGoodsRequestHistoryById_Result> SP_DGC_GetAccessGoodsRequestHistoryById(Nullable<long> accessGoodsRequestId)
        {
            var accessGoodsRequestIdParameter = accessGoodsRequestId.HasValue ?
                new ObjectParameter("AccessGoodsRequestId", accessGoodsRequestId) :
                new ObjectParameter("AccessGoodsRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAccessGoodsRequestHistoryById_Result>("SP_DGC_GetAccessGoodsRequestHistoryById", accessGoodsRequestIdParameter);
        }
    
        public virtual int SP_DGC_DeactivateUnitOwner(Nullable<long> ownerUserId, Nullable<long> unitPurchaseRequestId, Nullable<long> centralisedUserId, string deactivatedBy, ObjectParameter numberOfAccessibleUnits, ObjectParameter errorCode)
        {
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("OwnerUserId", ownerUserId) :
                new ObjectParameter("OwnerUserId", typeof(long));
    
            var unitPurchaseRequestIdParameter = unitPurchaseRequestId.HasValue ?
                new ObjectParameter("UnitPurchaseRequestId", unitPurchaseRequestId) :
                new ObjectParameter("UnitPurchaseRequestId", typeof(long));
    
            var centralisedUserIdParameter = centralisedUserId.HasValue ?
                new ObjectParameter("CentralisedUserId", centralisedUserId) :
                new ObjectParameter("CentralisedUserId", typeof(long));
    
            var deactivatedByParameter = deactivatedBy != null ?
                new ObjectParameter("DeactivatedBy", deactivatedBy) :
                new ObjectParameter("DeactivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeactivateUnitOwner", ownerUserIdParameter, unitPurchaseRequestIdParameter, centralisedUserIdParameter, deactivatedByParameter, numberOfAccessibleUnits, errorCode);
        }
    
        public virtual int SP_DGC_SaveSMSDeliveryDetails(string recieverMobileNumber, string aPIReferenceId, string sentBy)
        {
            var recieverMobileNumberParameter = recieverMobileNumber != null ?
                new ObjectParameter("RecieverMobileNumber", recieverMobileNumber) :
                new ObjectParameter("RecieverMobileNumber", typeof(string));
    
            var aPIReferenceIdParameter = aPIReferenceId != null ?
                new ObjectParameter("APIReferenceId", aPIReferenceId) :
                new ObjectParameter("APIReferenceId", typeof(string));
    
            var sentByParameter = sentBy != null ?
                new ObjectParameter("SentBy", sentBy) :
                new ObjectParameter("SentBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveSMSDeliveryDetails", recieverMobileNumberParameter, aPIReferenceIdParameter, sentByParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAccessGoodsRequestIssueDetails_Result> SP_DGC_GetAccessGoodsRequestIssueDetails(Nullable<long> accessGoodsRequestId)
        {
            var accessGoodsRequestIdParameter = accessGoodsRequestId.HasValue ?
                new ObjectParameter("AccessGoodsRequestId", accessGoodsRequestId) :
                new ObjectParameter("AccessGoodsRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAccessGoodsRequestIssueDetails_Result>("SP_DGC_GetAccessGoodsRequestIssueDetails", accessGoodsRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAccessGoodsRequestedMembers_Result> SP_DGC_GetAccessGoodsRequestedMembers(Nullable<long> accessGoodsRequestId)
        {
            var accessGoodsRequestIdParameter = accessGoodsRequestId.HasValue ?
                new ObjectParameter("AccessGoodsRequestId", accessGoodsRequestId) :
                new ObjectParameter("AccessGoodsRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAccessGoodsRequestedMembers_Result>("SP_DGC_GetAccessGoodsRequestedMembers", accessGoodsRequestIdParameter);
        }
    
        public virtual int SP_DGC_UnitInvoice_SaveSettlementDetails(Nullable<long> unitInvoiceId, Nullable<decimal> settlementAmount, string settlementComments, string additionalReferencePath, Nullable<long> settledByUserId, string settledBy, ObjectParameter errorCode)
        {
            var unitInvoiceIdParameter = unitInvoiceId.HasValue ?
                new ObjectParameter("UnitInvoiceId", unitInvoiceId) :
                new ObjectParameter("UnitInvoiceId", typeof(long));
    
            var settlementAmountParameter = settlementAmount.HasValue ?
                new ObjectParameter("SettlementAmount", settlementAmount) :
                new ObjectParameter("SettlementAmount", typeof(decimal));
    
            var settlementCommentsParameter = settlementComments != null ?
                new ObjectParameter("SettlementComments", settlementComments) :
                new ObjectParameter("SettlementComments", typeof(string));
    
            var additionalReferencePathParameter = additionalReferencePath != null ?
                new ObjectParameter("AdditionalReferencePath", additionalReferencePath) :
                new ObjectParameter("AdditionalReferencePath", typeof(string));
    
            var settledByUserIdParameter = settledByUserId.HasValue ?
                new ObjectParameter("SettledByUserId", settledByUserId) :
                new ObjectParameter("SettledByUserId", typeof(long));
    
            var settledByParameter = settledBy != null ?
                new ObjectParameter("SettledBy", settledBy) :
                new ObjectParameter("SettledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_UnitInvoice_SaveSettlementDetails", unitInvoiceIdParameter, settlementAmountParameter, settlementCommentsParameter, additionalReferencePathParameter, settledByUserIdParameter, settledByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllTenantRequestDetailsByUnitIds_Result> SP_DGC_GetAllTenantRequestDetailsByUnitIds(string unitIds, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var unitIdsParameter = unitIds != null ?
                new ObjectParameter("UnitIds", unitIds) :
                new ObjectParameter("UnitIds", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllTenantRequestDetailsByUnitIds_Result>("SP_DGC_GetAllTenantRequestDetailsByUnitIds", unitIdsParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllFloorNotifications_Result> SP_DGC_GetAllFloorNotifications(string blockid)
        {
            var blockidParameter = blockid != null ?
                new ObjectParameter("Blockid", blockid) :
                new ObjectParameter("Blockid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllFloorNotifications_Result>("SP_DGC_GetAllFloorNotifications", blockidParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllRoleNotifications_Result> SP_DGC_GetAllRoleNotifications(string departmentid)
        {
            var departmentidParameter = departmentid != null ?
                new ObjectParameter("Departmentid", departmentid) :
                new ObjectParameter("Departmentid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllRoleNotifications_Result>("SP_DGC_GetAllRoleNotifications", departmentidParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitNotifications_Result> SP_DGC_GetAllUnitNotifications(string floorid)
        {
            var flooridParameter = floorid != null ?
                new ObjectParameter("Floorid", floorid) :
                new ObjectParameter("Floorid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitNotifications_Result>("SP_DGC_GetAllUnitNotifications", flooridParameter);
        }
    
        public virtual int SP_DGC_SaveNotification(Nullable<int> notificationId, string notificationSubject, string notificationDescription, Nullable<System.DateTime> validFrom, Nullable<System.DateTime> validTo, string referenceFileName, string receiverInfo, string updatedBy, string isActive, ObjectParameter errorCode)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(int));
    
            var notificationSubjectParameter = notificationSubject != null ?
                new ObjectParameter("NotificationSubject", notificationSubject) :
                new ObjectParameter("NotificationSubject", typeof(string));
    
            var notificationDescriptionParameter = notificationDescription != null ?
                new ObjectParameter("NotificationDescription", notificationDescription) :
                new ObjectParameter("NotificationDescription", typeof(string));
    
            var validFromParameter = validFrom.HasValue ?
                new ObjectParameter("ValidFrom", validFrom) :
                new ObjectParameter("ValidFrom", typeof(System.DateTime));
    
            var validToParameter = validTo.HasValue ?
                new ObjectParameter("ValidTo", validTo) :
                new ObjectParameter("ValidTo", typeof(System.DateTime));
    
            var referenceFileNameParameter = referenceFileName != null ?
                new ObjectParameter("ReferenceFileName", referenceFileName) :
                new ObjectParameter("ReferenceFileName", typeof(string));
    
            var receiverInfoParameter = receiverInfo != null ?
                new ObjectParameter("ReceiverInfo", receiverInfo) :
                new ObjectParameter("ReceiverInfo", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveNotification", notificationIdParameter, notificationSubjectParameter, notificationDescriptionParameter, validFromParameter, validToParameter, referenceFileNameParameter, receiverInfoParameter, updatedByParameter, isActiveParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveUsers_Result> SP_DGC_GetActiveUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveUsers_Result>("SP_DGC_GetActiveUsers");
        }
    
        public virtual int SP_DGC_DeleteShopRegistrationById(Nullable<long> shopRegistrationId, string deletedBy, ObjectParameter errorCode)
        {
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(long));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteShopRegistrationById", shopRegistrationIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeactivateCommitteeMember(Nullable<long> commiteeMemberId, string deletedBy, ObjectParameter errorCode)
        {
            var commiteeMemberIdParameter = commiteeMemberId.HasValue ?
                new ObjectParameter("CommiteeMemberId", commiteeMemberId) :
                new ObjectParameter("CommiteeMemberId", typeof(long));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeactivateCommitteeMember", commiteeMemberIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetLastWaterReadingOfUnit_Result> SP_DGC_GetLastWaterReadingOfUnit(string blockFloorUnitName)
        {
            var blockFloorUnitNameParameter = blockFloorUnitName != null ?
                new ObjectParameter("BlockFloorUnitName", blockFloorUnitName) :
                new ObjectParameter("BlockFloorUnitName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLastWaterReadingOfUnit_Result>("SP_DGC_GetLastWaterReadingOfUnit", blockFloorUnitNameParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetLast12MonthsMaintanceBillsOfUnit_Result> SP_DGC_GetLast12MonthsMaintanceBillsOfUnit(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLast12MonthsMaintanceBillsOfUnit_Result>("SP_DGC_GetLast12MonthsMaintanceBillsOfUnit", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetLast12MonthsWaterBillsOfUnit_Result> SP_DGC_GetLast12MonthsWaterBillsOfUnit(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLast12MonthsWaterBillsOfUnit_Result>("SP_DGC_GetLast12MonthsWaterBillsOfUnit", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetLast12MonthsWaterReadingOfUnit_Result> SP_DGC_GetLast12MonthsWaterReadingOfUnit(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLast12MonthsWaterReadingOfUnit_Result>("SP_DGC_GetLast12MonthsWaterReadingOfUnit", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitManintanceBillDetails_Result> SP_DGC_GetAllUnitManintanceBillDetails(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitManintanceBillDetails_Result>("SP_DGC_GetAllUnitManintanceBillDetails", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitWaterBillDetails_Result> SP_DGC_GetAllUnitWaterBillDetails(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitWaterBillDetails_Result>("SP_DGC_GetAllUnitWaterBillDetails", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCourtNameById_Result> SP_DGC_GetCourtNameById(Nullable<int> gameId)
        {
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCourtNameById_Result>("SP_DGC_GetCourtNameById", gameIdParameter);
        }
    
        public virtual int SP_DGC_SaveFacilitiesBooking(Nullable<long> facilitiesId, Nullable<int> courtID, Nullable<int> gameId, Nullable<int> uintId, Nullable<long> livingMemberUserId, string otherPersonName, Nullable<System.DateTime> bookingDate, string fromTime, string totime, Nullable<int> numberOfPeoples, string updatedBy, ObjectParameter errorCode)
        {
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(long));
    
            var courtIDParameter = courtID.HasValue ?
                new ObjectParameter("CourtID", courtID) :
                new ObjectParameter("CourtID", typeof(int));
    
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(int));
    
            var uintIdParameter = uintId.HasValue ?
                new ObjectParameter("UintId", uintId) :
                new ObjectParameter("UintId", typeof(int));
    
            var livingMemberUserIdParameter = livingMemberUserId.HasValue ?
                new ObjectParameter("LivingMemberUserId", livingMemberUserId) :
                new ObjectParameter("LivingMemberUserId", typeof(long));
    
            var otherPersonNameParameter = otherPersonName != null ?
                new ObjectParameter("OtherPersonName", otherPersonName) :
                new ObjectParameter("OtherPersonName", typeof(string));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var fromTimeParameter = fromTime != null ?
                new ObjectParameter("FromTime", fromTime) :
                new ObjectParameter("FromTime", typeof(string));
    
            var totimeParameter = totime != null ?
                new ObjectParameter("Totime", totime) :
                new ObjectParameter("Totime", typeof(string));
    
            var numberOfPeoplesParameter = numberOfPeoples.HasValue ?
                new ObjectParameter("NumberOfPeoples", numberOfPeoples) :
                new ObjectParameter("NumberOfPeoples", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFacilitiesBooking", facilitiesIdParameter, courtIDParameter, gameIdParameter, uintIdParameter, livingMemberUserIdParameter, otherPersonNameParameter, bookingDateParameter, fromTimeParameter, totimeParameter, numberOfPeoplesParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllFacilitiesBooking_Result> SP_DGC_GetAllFacilitiesBooking(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllFacilitiesBooking_Result>("SP_DGC_GetAllFacilitiesBooking", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetRolesByDeptName_Result> SP_DGC_GetRolesByDeptName(string departmentName)
        {
            var departmentNameParameter = departmentName != null ?
                new ObjectParameter("DepartmentName", departmentName) :
                new ObjectParameter("DepartmentName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetRolesByDeptName_Result>("SP_DGC_GetRolesByDeptName", departmentNameParameter);
        }
    
        public virtual ObjectResult<SP_DGC_RPT_GetNoOfComplaintByDepartmentStatus_Result> SP_DGC_RPT_GetNoOfComplaintByDepartmentStatus(Nullable<int> noOfBackMonths)
        {
            var noOfBackMonthsParameter = noOfBackMonths.HasValue ?
                new ObjectParameter("NoOfBackMonths", noOfBackMonths) :
                new ObjectParameter("NoOfBackMonths", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_RPT_GetNoOfComplaintByDepartmentStatus_Result>("SP_DGC_RPT_GetNoOfComplaintByDepartmentStatus", noOfBackMonthsParameter);
        }
    
        public virtual int SP_DGC_SaveUnitOwnerSetupDetails(string ownersDetails, string createdBy, ObjectParameter errorCode)
        {
            var ownersDetailsParameter = ownersDetails != null ?
                new ObjectParameter("OwnersDetails", ownersDetails) :
                new ObjectParameter("OwnersDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitOwnerSetupDetails", ownersDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetLastWaterReadingOfUnitByUnitId_Result> SP_DGC_GetLastWaterReadingOfUnitByUnitId(Nullable<long> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLastWaterReadingOfUnitByUnitId_Result>("SP_DGC_GetLastWaterReadingOfUnitByUnitId", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetParentMenuDetails_Result> SP_DGC_GetParentMenuDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetParentMenuDetails_Result>("SP_DGC_GetParentMenuDetails");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllMenuDetails_Result> SP_DGC_GetAllMenuDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllMenuDetails_Result>("SP_DGC_GetAllMenuDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveRoles_Result> SP_DGC_GetActiveRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveRoles_Result>("SP_DGC_GetActiveRoles");
        }
    
        public virtual ObjectResult<SP_DGC_GetCommercialUnits_Result> SP_DGC_GetCommercialUnits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCommercialUnits_Result>("SP_DGC_GetCommercialUnits");
        }
    
        public virtual ObjectResult<SP_DGC_GetShopCommercialUnits_Result> SP_DGC_GetShopCommercialUnits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetShopCommercialUnits_Result>("SP_DGC_GetShopCommercialUnits");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitShopRentBillDetails_Result> SP_DGC_GetAllUnitShopRentBillDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> shopRegistrationId, Nullable<int> unitId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitShopRentBillDetails_Result>("SP_DGC_GetAllUnitShopRentBillDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, shopRegistrationIdParameter, unitIdParameter);
        }
    
        public virtual int SP_DGC_InitialSetUp_ProcessBlocks(string createdBy, ObjectParameter errorCode)
        {
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_ProcessBlocks", createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_InitialSetUp_ProcessFloors(string createdBy, ObjectParameter errorCode)
        {
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_ProcessFloors", createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeActiveShopPIC(Nullable<int> shopPICId, string deActivatedBy, ObjectParameter errorCode)
        {
            var shopPICIdParameter = shopPICId.HasValue ?
                new ObjectParameter("ShopPICId", shopPICId) :
                new ObjectParameter("ShopPICId", typeof(int));
    
            var deActivatedByParameter = deActivatedBy != null ?
                new ObjectParameter("DeActivatedBy", deActivatedBy) :
                new ObjectParameter("DeActivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeActiveShopPIC", shopPICIdParameter, deActivatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteShopByShopId(Nullable<int> shopRegistrationId, string deletedBy, ObjectParameter errorCode)
        {
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteShopByShopId", shopRegistrationIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeactivateUnitTenant(Nullable<long> tenantUserId, Nullable<long> unitTenantRequestId, Nullable<long> centralisedUserId, ObjectParameter numberOfAccessibleUnits, string deactivatedBy, ObjectParameter errorCode)
        {
            var tenantUserIdParameter = tenantUserId.HasValue ?
                new ObjectParameter("TenantUserId", tenantUserId) :
                new ObjectParameter("TenantUserId", typeof(long));
    
            var unitTenantRequestIdParameter = unitTenantRequestId.HasValue ?
                new ObjectParameter("UnitTenantRequestId", unitTenantRequestId) :
                new ObjectParameter("UnitTenantRequestId", typeof(long));
    
            var centralisedUserIdParameter = centralisedUserId.HasValue ?
                new ObjectParameter("CentralisedUserId", centralisedUserId) :
                new ObjectParameter("CentralisedUserId", typeof(long));
    
            var deactivatedByParameter = deactivatedBy != null ?
                new ObjectParameter("DeactivatedBy", deactivatedBy) :
                new ObjectParameter("DeactivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeactivateUnitTenant", tenantUserIdParameter, unitTenantRequestIdParameter, centralisedUserIdParameter, numberOfAccessibleUnits, deactivatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllFacilitiesBookingReq_Result> SP_DGC_GetAllFacilitiesBookingReq(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> unitId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllFacilitiesBookingReq_Result>("SP_DGC_GetAllFacilitiesBookingReq", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, requestedFromRoleParameter, requestedUserIdParameter, unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetMenuDetailsById_Result> SP_DGC_GetMenuDetailsById(Nullable<int> menuId)
        {
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetMenuDetailsById_Result>("SP_DGC_GetMenuDetailsById", menuIdParameter);
        }
    
        public virtual int SP_DGC_SaveMenuUrls(Nullable<int> menuId, string displayMenuName, string roleIds, Nullable<int> parentMenuId, string menuName, string menuIconClass, string menuDescription, string isParentMenu, Nullable<int> displayOrder, string controllerName, string actionName, string @params, string isActive, string backGroundColor, string createdBy, ObjectParameter errorCode)
        {
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var displayMenuNameParameter = displayMenuName != null ?
                new ObjectParameter("DisplayMenuName", displayMenuName) :
                new ObjectParameter("DisplayMenuName", typeof(string));
    
            var roleIdsParameter = roleIds != null ?
                new ObjectParameter("RoleIds", roleIds) :
                new ObjectParameter("RoleIds", typeof(string));
    
            var parentMenuIdParameter = parentMenuId.HasValue ?
                new ObjectParameter("ParentMenuId", parentMenuId) :
                new ObjectParameter("ParentMenuId", typeof(int));
    
            var menuNameParameter = menuName != null ?
                new ObjectParameter("MenuName", menuName) :
                new ObjectParameter("MenuName", typeof(string));
    
            var menuIconClassParameter = menuIconClass != null ?
                new ObjectParameter("MenuIconClass", menuIconClass) :
                new ObjectParameter("MenuIconClass", typeof(string));
    
            var menuDescriptionParameter = menuDescription != null ?
                new ObjectParameter("MenuDescription", menuDescription) :
                new ObjectParameter("MenuDescription", typeof(string));
    
            var isParentMenuParameter = isParentMenu != null ?
                new ObjectParameter("IsParentMenu", isParentMenu) :
                new ObjectParameter("IsParentMenu", typeof(string));
    
            var displayOrderParameter = displayOrder.HasValue ?
                new ObjectParameter("DisplayOrder", displayOrder) :
                new ObjectParameter("DisplayOrder", typeof(int));
    
            var controllerNameParameter = controllerName != null ?
                new ObjectParameter("ControllerName", controllerName) :
                new ObjectParameter("ControllerName", typeof(string));
    
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            var paramsParameter = @params != null ?
                new ObjectParameter("params", @params) :
                new ObjectParameter("params", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var backGroundColorParameter = backGroundColor != null ?
                new ObjectParameter("BackGroundColor", backGroundColor) :
                new ObjectParameter("BackGroundColor", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveMenuUrls", menuIdParameter, displayMenuNameParameter, roleIdsParameter, parentMenuIdParameter, menuNameParameter, menuIconClassParameter, menuDescriptionParameter, isParentMenuParameter, displayOrderParameter, controllerNameParameter, actionNameParameter, paramsParameter, isActiveParameter, backGroundColorParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetMenusBasedOnRole_Result> SP_DGC_GetMenusBasedOnRole(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetMenusBasedOnRole_Result>("SP_DGC_GetMenusBasedOnRole", userIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveResidenceUnits_Result> SP_DGC_GetActiveResidenceUnits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveResidenceUnits_Result>("SP_DGC_GetActiveResidenceUnits");
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitSettingsById_Result> SP_DGC_GetUnitSettingsById(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitSettingsById_Result>("SP_DGC_GetUnitSettingsById", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitInvoiceBillsHistoryByInvoiceId_Result> SP_DGC_GetUnitInvoiceBillsHistoryByInvoiceId(Nullable<long> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitInvoiceBillsHistoryByInvoiceId_Result>("SP_DGC_GetUnitInvoiceBillsHistoryByInvoiceId", invoiceIdParameter);
        }
    
        public virtual int SP_DGC_DeleteShopMemberDetails(Nullable<int> shopMemberId, string deletedBy, ObjectParameter errorCode)
        {
            var shopMemberIdParameter = shopMemberId.HasValue ?
                new ObjectParameter("ShopMemberId", shopMemberId) :
                new ObjectParameter("ShopMemberId", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteShopMemberDetails", shopMemberIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteUtilityBillsProvider(Nullable<int> utiltityBillId, string deletedBy, ObjectParameter errorCode)
        {
            var utiltityBillIdParameter = utiltityBillId.HasValue ?
                new ObjectParameter("UtiltityBillId", utiltityBillId) :
                new ObjectParameter("UtiltityBillId", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteUtilityBillsProvider", utiltityBillIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_RPT_GetYearWiseExpensive_Result> SP_DGC_RPT_GetYearWiseExpensive(Nullable<int> expensiveYear)
        {
            var expensiveYearParameter = expensiveYear.HasValue ?
                new ObjectParameter("ExpensiveYear", expensiveYear) :
                new ObjectParameter("ExpensiveYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_RPT_GetYearWiseExpensive_Result>("SP_DGC_RPT_GetYearWiseExpensive", expensiveYearParameter);
        }
    
        public virtual ObjectResult<SP_DGC_RPT_GetMonthWiseIncomeExpenseDetailsBySources_Result> SP_DGC_RPT_GetMonthWiseIncomeExpenseDetailsBySources(Nullable<int> incomeExpensiveYear, string typeOfIncome, string monthOfIncomeExpensive)
        {
            var incomeExpensiveYearParameter = incomeExpensiveYear.HasValue ?
                new ObjectParameter("IncomeExpensiveYear", incomeExpensiveYear) :
                new ObjectParameter("IncomeExpensiveYear", typeof(int));
    
            var typeOfIncomeParameter = typeOfIncome != null ?
                new ObjectParameter("TypeOfIncome", typeOfIncome) :
                new ObjectParameter("TypeOfIncome", typeof(string));
    
            var monthOfIncomeExpensiveParameter = monthOfIncomeExpensive != null ?
                new ObjectParameter("MonthOfIncomeExpensive", monthOfIncomeExpensive) :
                new ObjectParameter("MonthOfIncomeExpensive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_RPT_GetMonthWiseIncomeExpenseDetailsBySources_Result>("SP_DGC_RPT_GetMonthWiseIncomeExpenseDetailsBySources", incomeExpensiveYearParameter, typeOfIncomeParameter, monthOfIncomeExpensiveParameter);
        }
    
        public virtual ObjectResult<SP_DGC_RPT_GetAllVisitorRequestReportsByDateWise_Result> SP_DGC_RPT_GetAllVisitorRequestReportsByDateWise(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> unitId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_RPT_GetAllVisitorRequestReportsByDateWise_Result>("SP_DGC_RPT_GetAllVisitorRequestReportsByDateWise", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, fromDateParameter, toDateParameter, unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_RPT_GetAllBalanceReportsByDateWise_Result> SP_DGC_RPT_GetAllBalanceReportsByDateWise(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> unitId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_RPT_GetAllBalanceReportsByDateWise_Result>("SP_DGC_RPT_GetAllBalanceReportsByDateWise", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, fromDateParameter, toDateParameter, unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_RPT_GetAllExpenseReportsByDateWise_Result> SP_DGC_RPT_GetAllExpenseReportsByDateWise(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> unitId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_RPT_GetAllExpenseReportsByDateWise_Result>("SP_DGC_RPT_GetAllExpenseReportsByDateWise", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, fromDateParameter, toDateParameter, unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_RPT_GetAllIncomeReportsByDateWise_Result> SP_DGC_RPT_GetAllIncomeReportsByDateWise(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> unitId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_RPT_GetAllIncomeReportsByDateWise_Result>("SP_DGC_RPT_GetAllIncomeReportsByDateWise", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, fromDateParameter, toDateParameter, unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitInvoiceConfigurationBillTypes_Result> SP_DGC_GetUnitInvoiceConfigurationBillTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitInvoiceConfigurationBillTypes_Result>("SP_DGC_GetUnitInvoiceConfigurationBillTypes");
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitInvoiceCofigurationDetails_Result> SP_DGC_GetUnitInvoiceCofigurationDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitInvoiceCofigurationDetails_Result>("SP_DGC_GetUnitInvoiceCofigurationDetails");
        }
    
        public virtual int SP_DGC_SaveUnitInvoiceCofigurationDetails(Nullable<int> unitConfigurationId, string billGeneratedDate, Nullable<int> invoiceSourceId, Nullable<int> billDueDuration, Nullable<decimal> lateFee, Nullable<decimal> rateOfInterest, Nullable<System.DateTime> effectiveFrom, string updatedBy, ObjectParameter errorCode)
        {
            var unitConfigurationIdParameter = unitConfigurationId.HasValue ?
                new ObjectParameter("UnitConfigurationId", unitConfigurationId) :
                new ObjectParameter("UnitConfigurationId", typeof(int));
    
            var billGeneratedDateParameter = billGeneratedDate != null ?
                new ObjectParameter("BillGeneratedDate", billGeneratedDate) :
                new ObjectParameter("BillGeneratedDate", typeof(string));
    
            var invoiceSourceIdParameter = invoiceSourceId.HasValue ?
                new ObjectParameter("InvoiceSourceId", invoiceSourceId) :
                new ObjectParameter("InvoiceSourceId", typeof(int));
    
            var billDueDurationParameter = billDueDuration.HasValue ?
                new ObjectParameter("BillDueDuration", billDueDuration) :
                new ObjectParameter("BillDueDuration", typeof(int));
    
            var lateFeeParameter = lateFee.HasValue ?
                new ObjectParameter("LateFee", lateFee) :
                new ObjectParameter("LateFee", typeof(decimal));
    
            var rateOfInterestParameter = rateOfInterest.HasValue ?
                new ObjectParameter("RateOfInterest", rateOfInterest) :
                new ObjectParameter("RateOfInterest", typeof(decimal));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitInvoiceCofigurationDetails", unitConfigurationIdParameter, billGeneratedDateParameter, invoiceSourceIdParameter, billDueDurationParameter, lateFeeParameter, rateOfInterestParameter, effectiveFromParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_Setup_SaveAccessCardsDetails(string accessCardDetails, string createdBy, ObjectParameter errorCode)
        {
            var accessCardDetailsParameter = accessCardDetails != null ?
                new ObjectParameter("AccessCardDetails", accessCardDetails) :
                new ObjectParameter("AccessCardDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Setup_SaveAccessCardsDetails", accessCardDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_Setup_SaveMaintenanceBillDetails(string maintenanceBillDetails, string createdBy, ObjectParameter errorCode)
        {
            var maintenanceBillDetailsParameter = maintenanceBillDetails != null ?
                new ObjectParameter("MaintenanceBillDetails", maintenanceBillDetails) :
                new ObjectParameter("MaintenanceBillDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Setup_SaveMaintenanceBillDetails", maintenanceBillDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveFacilitiesBookingRequest(Nullable<long> facilitiesId, Nullable<int> courtID, Nullable<int> gameId, Nullable<int> uintId, Nullable<long> livingMemberUserId, string otherPersonName, Nullable<System.DateTime> bookingDate, string fromTime, string totime, Nullable<int> numberOfPeoples, string updatedBy, ObjectParameter errorCode, ObjectParameter facilitiesBookingId, ObjectParameter livingMemberCentralUserId)
        {
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(long));
    
            var courtIDParameter = courtID.HasValue ?
                new ObjectParameter("CourtID", courtID) :
                new ObjectParameter("CourtID", typeof(int));
    
            var gameIdParameter = gameId.HasValue ?
                new ObjectParameter("GameId", gameId) :
                new ObjectParameter("GameId", typeof(int));
    
            var uintIdParameter = uintId.HasValue ?
                new ObjectParameter("UintId", uintId) :
                new ObjectParameter("UintId", typeof(int));
    
            var livingMemberUserIdParameter = livingMemberUserId.HasValue ?
                new ObjectParameter("LivingMemberUserId", livingMemberUserId) :
                new ObjectParameter("LivingMemberUserId", typeof(long));
    
            var otherPersonNameParameter = otherPersonName != null ?
                new ObjectParameter("OtherPersonName", otherPersonName) :
                new ObjectParameter("OtherPersonName", typeof(string));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var fromTimeParameter = fromTime != null ?
                new ObjectParameter("FromTime", fromTime) :
                new ObjectParameter("FromTime", typeof(string));
    
            var totimeParameter = totime != null ?
                new ObjectParameter("Totime", totime) :
                new ObjectParameter("Totime", typeof(string));
    
            var numberOfPeoplesParameter = numberOfPeoples.HasValue ?
                new ObjectParameter("NumberOfPeoples", numberOfPeoples) :
                new ObjectParameter("NumberOfPeoples", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFacilitiesBookingRequest", facilitiesIdParameter, courtIDParameter, gameIdParameter, uintIdParameter, livingMemberUserIdParameter, otherPersonNameParameter, bookingDateParameter, fromTimeParameter, totimeParameter, numberOfPeoplesParameter, updatedByParameter, errorCode, facilitiesBookingId, livingMemberCentralUserId);
        }
    
        public virtual int SP_DGC_SaveHallBookingRequestDetails(Nullable<long> hallBookingRequestId, string requestFor, Nullable<int> unitId, Nullable<long> livingMemberUserId, Nullable<System.DateTime> bookingDate, Nullable<decimal> depositAmount, Nullable<decimal> rentAmount, string puproseOfBooking, Nullable<long> depositPriceId, Nullable<long> rentPriceId, Nullable<int> statusId, Nullable<long> requestByUserId, string updatedBy, ObjectParameter errorCode, ObjectParameter hBRquestId, ObjectParameter livingMemberCentralUserId)
        {
            var hallBookingRequestIdParameter = hallBookingRequestId.HasValue ?
                new ObjectParameter("HallBookingRequestId", hallBookingRequestId) :
                new ObjectParameter("HallBookingRequestId", typeof(long));
    
            var requestForParameter = requestFor != null ?
                new ObjectParameter("RequestFor", requestFor) :
                new ObjectParameter("RequestFor", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var livingMemberUserIdParameter = livingMemberUserId.HasValue ?
                new ObjectParameter("livingMemberUserId", livingMemberUserId) :
                new ObjectParameter("livingMemberUserId", typeof(long));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var depositAmountParameter = depositAmount.HasValue ?
                new ObjectParameter("DepositAmount", depositAmount) :
                new ObjectParameter("DepositAmount", typeof(decimal));
    
            var rentAmountParameter = rentAmount.HasValue ?
                new ObjectParameter("RentAmount", rentAmount) :
                new ObjectParameter("RentAmount", typeof(decimal));
    
            var puproseOfBookingParameter = puproseOfBooking != null ?
                new ObjectParameter("PuproseOfBooking", puproseOfBooking) :
                new ObjectParameter("PuproseOfBooking", typeof(string));
    
            var depositPriceIdParameter = depositPriceId.HasValue ?
                new ObjectParameter("DepositPriceId", depositPriceId) :
                new ObjectParameter("DepositPriceId", typeof(long));
    
            var rentPriceIdParameter = rentPriceId.HasValue ?
                new ObjectParameter("RentPriceId", rentPriceId) :
                new ObjectParameter("RentPriceId", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var requestByUserIdParameter = requestByUserId.HasValue ?
                new ObjectParameter("RequestByUserId", requestByUserId) :
                new ObjectParameter("RequestByUserId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveHallBookingRequestDetails", hallBookingRequestIdParameter, requestForParameter, unitIdParameter, livingMemberUserIdParameter, bookingDateParameter, depositAmountParameter, rentAmountParameter, puproseOfBookingParameter, depositPriceIdParameter, rentPriceIdParameter, statusIdParameter, requestByUserIdParameter, updatedByParameter, errorCode, hBRquestId, livingMemberCentralUserId);
        }
    
        public virtual int SP_DGC_Setup_SaveHallBookingProcessDetails(string hallBookingDetails, string createdBy, ObjectParameter errorCode)
        {
            var hallBookingDetailsParameter = hallBookingDetails != null ?
                new ObjectParameter("HallBookingDetails", hallBookingDetails) :
                new ObjectParameter("HallBookingDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Setup_SaveHallBookingProcessDetails", hallBookingDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetInitialSetupErrorsBasedOnLineNumber_Result> SP_DGC_GetInitialSetupErrorsBasedOnLineNumber(Nullable<int> lineNumber, string errorTable)
        {
            var lineNumberParameter = lineNumber.HasValue ?
                new ObjectParameter("LineNumber", lineNumber) :
                new ObjectParameter("LineNumber", typeof(int));
    
            var errorTableParameter = errorTable != null ?
                new ObjectParameter("ErrorTable", errorTable) :
                new ObjectParameter("ErrorTable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetInitialSetupErrorsBasedOnLineNumber_Result>("SP_DGC_GetInitialSetupErrorsBasedOnLineNumber", lineNumberParameter, errorTableParameter);
        }
    
        public virtual int SP_DGC_Setup_SaveAccessCardProcessDetails(string accessCardsDetails, string createdBy, ObjectParameter errorCode)
        {
            var accessCardsDetailsParameter = accessCardsDetails != null ?
                new ObjectParameter("AccessCardsDetails", accessCardsDetails) :
                new ObjectParameter("AccessCardsDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Setup_SaveAccessCardProcessDetails", accessCardsDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_Setup_SaveRennovationReqDetails(string renovationRequestDetails, string createdBy, ObjectParameter errorCode)
        {
            var renovationRequestDetailsParameter = renovationRequestDetails != null ?
                new ObjectParameter("RenovationRequestDetails", renovationRequestDetails) :
                new ObjectParameter("RenovationRequestDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Setup_SaveRennovationReqDetails", renovationRequestDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_Setup_SaveWaterBillDetails(string waterBillDetails, string createdBy, ObjectParameter errorCode)
        {
            var waterBillDetailsParameter = waterBillDetails != null ?
                new ObjectParameter("WaterBillDetails", waterBillDetails) :
                new ObjectParameter("WaterBillDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Setup_SaveWaterBillDetails", waterBillDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_Setup_SaveRenovationRequestProcessDetails(string renovationDetails, string createdBy, ObjectParameter errorCode)
        {
            var renovationDetailsParameter = renovationDetails != null ?
                new ObjectParameter("RenovationDetails", renovationDetails) :
                new ObjectParameter("RenovationDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Setup_SaveRenovationRequestProcessDetails", renovationDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveAdditionalServiceProviders_Result> SP_DGC_GetActiveAdditionalServiceProviders(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveAdditionalServiceProviders_Result>("SP_DGC_GetActiveAdditionalServiceProviders", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllMaintenanceBillInitialSetupDetails_Result> SP_DGC_GetAllMaintenanceBillInitialSetupDetails(ObjectParameter actualTotalRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllMaintenanceBillInitialSetupDetails_Result>("SP_DGC_GetAllMaintenanceBillInitialSetupDetails", actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllWaterBillInitialSetupDetails_Result> SP_DGC_GetAllWaterBillInitialSetupDetails(ObjectParameter actualTotalRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllWaterBillInitialSetupDetails_Result>("SP_DGC_GetAllWaterBillInitialSetupDetails", actualTotalRecords);
        }
    
        public virtual int SP_DGC_Setup_SaveMaintenanceBillProcessDetails(string maintenanceBillDetails, string createdBy, ObjectParameter errorCode)
        {
            var maintenanceBillDetailsParameter = maintenanceBillDetails != null ?
                new ObjectParameter("MaintenanceBillDetails", maintenanceBillDetails) :
                new ObjectParameter("MaintenanceBillDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Setup_SaveMaintenanceBillProcessDetails", maintenanceBillDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_Setup_SaveWaterBillProcessDetails(string waterBillDetails, string createdBy, ObjectParameter errorCode)
        {
            var waterBillDetailsParameter = waterBillDetails != null ?
                new ObjectParameter("WaterBillDetails", waterBillDetails) :
                new ObjectParameter("WaterBillDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Setup_SaveWaterBillProcessDetails", waterBillDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveVisitorParkingSlatsDetails(Nullable<int> slatId, Nullable<int> totalSlats, string updatedBy, ObjectParameter errorCode)
        {
            var slatIdParameter = slatId.HasValue ?
                new ObjectParameter("SlatId", slatId) :
                new ObjectParameter("SlatId", typeof(int));
    
            var totalSlatsParameter = totalSlats.HasValue ?
                new ObjectParameter("TotalSlats", totalSlats) :
                new ObjectParameter("TotalSlats", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVisitorParkingSlatsDetails", slatIdParameter, totalSlatsParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_GetVisitorParkingSlatAvailable(ObjectParameter isAvailable)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_GetVisitorParkingSlatAvailable", isAvailable);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVisitorRequestDetails_Result> SP_DGC_GetAllVisitorRequestDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> unitId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVisitorRequestDetails_Result>("SP_DGC_GetAllVisitorRequestDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, requestedFromRoleParameter, requestedUserIdParameter, unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetConfigurationById_Result> SP_DGC_GetConfigurationById(Nullable<int> configurationId)
        {
            var configurationIdParameter = configurationId.HasValue ?
                new ObjectParameter("ConfigurationId", configurationId) :
                new ObjectParameter("ConfigurationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetConfigurationById_Result>("SP_DGC_GetConfigurationById", configurationIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllConfigurationDetails_Result> SP_DGC_GetAllConfigurationDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllConfigurationDetails_Result>("SP_DGC_GetAllConfigurationDetails");
        }
    
        public virtual int SP_DGC_SaveConfigurationDetails(Nullable<int> configurationId, string configurationName, Nullable<int> configurationKey, string configurationValue, string updatedBy, ObjectParameter errorCode)
        {
            var configurationIdParameter = configurationId.HasValue ?
                new ObjectParameter("ConfigurationId", configurationId) :
                new ObjectParameter("ConfigurationId", typeof(int));
    
            var configurationNameParameter = configurationName != null ?
                new ObjectParameter("ConfigurationName", configurationName) :
                new ObjectParameter("ConfigurationName", typeof(string));
    
            var configurationKeyParameter = configurationKey.HasValue ?
                new ObjectParameter("ConfigurationKey", configurationKey) :
                new ObjectParameter("ConfigurationKey", typeof(int));
    
            var configurationValueParameter = configurationValue != null ?
                new ObjectParameter("ConfigurationValue", configurationValue) :
                new ObjectParameter("ConfigurationValue", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveConfigurationDetails", configurationIdParameter, configurationNameParameter, configurationKeyParameter, configurationValueParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_RPT_GetAllVisitorEntryReportsByDateWise_Result> SP_DGC_RPT_GetAllVisitorEntryReportsByDateWise(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> unitId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_RPT_GetAllVisitorEntryReportsByDateWise_Result>("SP_DGC_RPT_GetAllVisitorEntryReportsByDateWise", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, fromDateParameter, toDateParameter, unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetConfigurationValuesByName_Result> SP_DGC_GetConfigurationValuesByName(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, string configurationName)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var configurationNameParameter = configurationName != null ?
                new ObjectParameter("ConfigurationName", configurationName) :
                new ObjectParameter("ConfigurationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetConfigurationValuesByName_Result>("SP_DGC_GetConfigurationValuesByName", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, configurationNameParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetEmailTemplate_Result> SP_DGC_GetEmailTemplate(string templateName)
        {
            var templateNameParameter = templateName != null ?
                new ObjectParameter("TemplateName", templateName) :
                new ObjectParameter("TemplateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetEmailTemplate_Result>("SP_DGC_GetEmailTemplate", templateNameParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetEmailTemplateByID_Result> SP_DGC_GetEmailTemplateByID(Nullable<int> templateId)
        {
            var templateIdParameter = templateId.HasValue ?
                new ObjectParameter("TemplateId", templateId) :
                new ObjectParameter("TemplateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetEmailTemplateByID_Result>("SP_DGC_GetEmailTemplateByID", templateIdParameter);
        }
    
        public virtual int Sp_Dgc_SaveEmailTemplate(Nullable<int> templateId, string templateName, string templateSubject, string templateBody, string replaceWords, string createdBy, ObjectParameter errorCode)
        {
            var templateIdParameter = templateId.HasValue ?
                new ObjectParameter("TemplateId", templateId) :
                new ObjectParameter("TemplateId", typeof(int));
    
            var templateNameParameter = templateName != null ?
                new ObjectParameter("TemplateName", templateName) :
                new ObjectParameter("TemplateName", typeof(string));
    
            var templateSubjectParameter = templateSubject != null ?
                new ObjectParameter("TemplateSubject", templateSubject) :
                new ObjectParameter("TemplateSubject", typeof(string));
    
            var templateBodyParameter = templateBody != null ?
                new ObjectParameter("TemplateBody", templateBody) :
                new ObjectParameter("TemplateBody", typeof(string));
    
            var replaceWordsParameter = replaceWords != null ?
                new ObjectParameter("ReplaceWords", replaceWords) :
                new ObjectParameter("ReplaceWords", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Dgc_SaveEmailTemplate", templateIdParameter, templateNameParameter, templateSubjectParameter, templateBodyParameter, replaceWordsParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllEmailTemplates_Result> SP_DGC_GetAllEmailTemplates(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllEmailTemplates_Result>("SP_DGC_GetAllEmailTemplates", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveNotificationDetails(Nullable<int> notificationId, string notificationSubject, string notificationDescription, Nullable<System.DateTime> validFrom, Nullable<System.DateTime> validTo, string referenceFileName, string receiverInfo, string updatedBy, string isActive, ObjectParameter errorCode, ObjectParameter currentNotificationId)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(int));
    
            var notificationSubjectParameter = notificationSubject != null ?
                new ObjectParameter("NotificationSubject", notificationSubject) :
                new ObjectParameter("NotificationSubject", typeof(string));
    
            var notificationDescriptionParameter = notificationDescription != null ?
                new ObjectParameter("NotificationDescription", notificationDescription) :
                new ObjectParameter("NotificationDescription", typeof(string));
    
            var validFromParameter = validFrom.HasValue ?
                new ObjectParameter("ValidFrom", validFrom) :
                new ObjectParameter("ValidFrom", typeof(System.DateTime));
    
            var validToParameter = validTo.HasValue ?
                new ObjectParameter("ValidTo", validTo) :
                new ObjectParameter("ValidTo", typeof(System.DateTime));
    
            var referenceFileNameParameter = referenceFileName != null ?
                new ObjectParameter("ReferenceFileName", referenceFileName) :
                new ObjectParameter("ReferenceFileName", typeof(string));
    
            var receiverInfoParameter = receiverInfo != null ?
                new ObjectParameter("ReceiverInfo", receiverInfo) :
                new ObjectParameter("ReceiverInfo", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveNotificationDetails", notificationIdParameter, notificationSubjectParameter, notificationDescriptionParameter, validFromParameter, validToParameter, referenceFileNameParameter, receiverInfoParameter, updatedByParameter, isActiveParameter, errorCode, currentNotificationId);
        }
    
        public virtual ObjectResult<SP_DGC_GetfacilityReqById_Result> SP_DGC_GetfacilityReqById(Nullable<int> facilitiesId)
        {
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetfacilityReqById_Result>("SP_DGC_GetfacilityReqById", facilitiesIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUserEmailsforNotificationByNFId_Result> SP_DGC_GetUserEmailsforNotificationByNFId(Nullable<int> notificationId)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUserEmailsforNotificationByNFId_Result>("SP_DGC_GetUserEmailsforNotificationByNFId", notificationIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetClampRequestHistoryById_Result> SP_DGC_GetClampRequestHistoryById(Nullable<long> clampRequestId)
        {
            var clampRequestIdParameter = clampRequestId.HasValue ?
                new ObjectParameter("ClampRequestId", clampRequestId) :
                new ObjectParameter("ClampRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetClampRequestHistoryById_Result>("SP_DGC_GetClampRequestHistoryById", clampRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUserPermitableUnitsByCentralUserId_Result> SP_DGC_GetUserPermitableUnitsByCentralUserId(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUserPermitableUnitsByCentralUserId_Result>("SP_DGC_GetUserPermitableUnitsByCentralUserId", userIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllFcmNotificationDetails_Result> SP_DGC_GetAllFcmNotificationDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllFcmNotificationDetails_Result>("SP_DGC_GetAllFcmNotificationDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetFcmNotificationDetailsById_Result> SP_DGC_GetFcmNotificationDetailsById(Nullable<int> fcmNotificationId)
        {
            var fcmNotificationIdParameter = fcmNotificationId.HasValue ?
                new ObjectParameter("FcmNotificationId", fcmNotificationId) :
                new ObjectParameter("FcmNotificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFcmNotificationDetailsById_Result>("SP_DGC_GetFcmNotificationDetailsById", fcmNotificationIdParameter);
        }
    
        public virtual int SP_DGC_SaveFcmNotificationDetails(Nullable<int> fcmNotificationId, string controllerName, string actionName, Nullable<int> statusId, string message, string title, string createdBy, ObjectParameter errorCode)
        {
            var fcmNotificationIdParameter = fcmNotificationId.HasValue ?
                new ObjectParameter("FcmNotificationId", fcmNotificationId) :
                new ObjectParameter("FcmNotificationId", typeof(int));
    
            var controllerNameParameter = controllerName != null ?
                new ObjectParameter("ControllerName", controllerName) :
                new ObjectParameter("ControllerName", typeof(string));
    
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFcmNotificationDetails", fcmNotificationIdParameter, controllerNameParameter, actionNameParameter, statusIdParameter, messageParameter, titleParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllCountriesDetails_Result> SP_DGC_GetAllCountriesDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllCountriesDetails_Result>("SP_DGC_GetAllCountriesDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetCountryDetailsById_Result> SP_DGC_GetCountryDetailsById(Nullable<int> countryId)
        {
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCountryDetailsById_Result>("SP_DGC_GetCountryDetailsById", countryIdParameter);
        }
    
        public virtual int SP_DGC_SaveCountryDetails(Nullable<int> countryId, string countryCode, string countryName, string countryCurrencyName, Nullable<int> countryMobileCode, string countryMobileNumMax, string countryMobileNumMin, string countryCurrencyCodeDescription, string countryCurrencyImage, string createdBy, ObjectParameter errorCode)
        {
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            var countryCurrencyNameParameter = countryCurrencyName != null ?
                new ObjectParameter("CountryCurrencyName", countryCurrencyName) :
                new ObjectParameter("CountryCurrencyName", typeof(string));
    
            var countryMobileCodeParameter = countryMobileCode.HasValue ?
                new ObjectParameter("CountryMobileCode", countryMobileCode) :
                new ObjectParameter("CountryMobileCode", typeof(int));
    
            var countryMobileNumMaxParameter = countryMobileNumMax != null ?
                new ObjectParameter("CountryMobileNumMax", countryMobileNumMax) :
                new ObjectParameter("CountryMobileNumMax", typeof(string));
    
            var countryMobileNumMinParameter = countryMobileNumMin != null ?
                new ObjectParameter("CountryMobileNumMin", countryMobileNumMin) :
                new ObjectParameter("CountryMobileNumMin", typeof(string));
    
            var countryCurrencyCodeDescriptionParameter = countryCurrencyCodeDescription != null ?
                new ObjectParameter("CountryCurrencyCodeDescription", countryCurrencyCodeDescription) :
                new ObjectParameter("CountryCurrencyCodeDescription", typeof(string));
    
            var countryCurrencyImageParameter = countryCurrencyImage != null ?
                new ObjectParameter("CountryCurrencyImage", countryCurrencyImage) :
                new ObjectParameter("CountryCurrencyImage", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCountryDetails", countryIdParameter, countryCodeParameter, countryNameParameter, countryCurrencyNameParameter, countryMobileCodeParameter, countryMobileNumMaxParameter, countryMobileNumMinParameter, countryCurrencyCodeDescriptionParameter, countryCurrencyImageParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_CancelFacilitiesBooking(Nullable<long> facilitiesId, string cancelComments, string cancelledBy, ObjectParameter errorCode, Nullable<int> previousStatusID)
        {
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(long));
    
            var cancelCommentsParameter = cancelComments != null ?
                new ObjectParameter("CancelComments", cancelComments) :
                new ObjectParameter("CancelComments", typeof(string));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelFacilitiesBooking", facilitiesIdParameter, cancelCommentsParameter, cancelledByParameter, errorCode, previousStatusIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetFcmNotificationDetailsByControllerName_Result> SP_DGC_GetFcmNotificationDetailsByControllerName(string controllerName, Nullable<int> statusId, string actionName)
        {
            var controllerNameParameter = controllerName != null ?
                new ObjectParameter("ControllerName", controllerName) :
                new ObjectParameter("ControllerName", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFcmNotificationDetailsByControllerName_Result>("SP_DGC_GetFcmNotificationDetailsByControllerName", controllerNameParameter, statusIdParameter, actionNameParameter);
        }
    
        public virtual int SP_DGC_SaveHallBookingRequestActionDetails(Nullable<long> hallBookingRequestId, Nullable<int> requestStatusId, string paymentInfo, string comments, string additionalReferenceFilePath, Nullable<long> actionTakenByUserId, string updatedBY, ObjectParameter errorCode, Nullable<int> previousStatusID)
        {
            var hallBookingRequestIdParameter = hallBookingRequestId.HasValue ?
                new ObjectParameter("HallBookingRequestId", hallBookingRequestId) :
                new ObjectParameter("HallBookingRequestId", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveHallBookingRequestActionDetails", hallBookingRequestIdParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, additionalReferenceFilePathParameter, actionTakenByUserIdParameter, updatedBYParameter, errorCode, previousStatusIDParameter);
        }
    
        public virtual int SP_DGC_CancelledVisitorRequest(Nullable<int> visitorRequestId, string cancelledBy, string cancelledComments, ObjectParameter errorCode, Nullable<int> previousStatusId)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            var cancelledCommentsParameter = cancelledComments != null ?
                new ObjectParameter("CancelledComments", cancelledComments) :
                new ObjectParameter("CancelledComments", typeof(string));
    
            var previousStatusIdParameter = previousStatusId.HasValue ?
                new ObjectParameter("PreviousStatusId", previousStatusId) :
                new ObjectParameter("PreviousStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelledVisitorRequest", visitorRequestIdParameter, cancelledByParameter, cancelledCommentsParameter, errorCode, previousStatusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetLivingMembersByUnitIdForSecurity_Result> SP_DGC_GetLivingMembersByUnitIdForSecurity(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLivingMembersByUnitIdForSecurity_Result>("SP_DGC_GetLivingMembersByUnitIdForSecurity", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVisitorRequests_Result> SP_DGC_GetAllVisitorRequests(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> requestedFromRole, Nullable<long> requestedUserId, string statusCode, Nullable<int> unitId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVisitorRequests_Result>("SP_DGC_GetAllVisitorRequests", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, requestedFromRoleParameter, requestedUserIdParameter, statusCodeParameter, unitIdParameter);
        }
    
        public virtual int SP_DGC_SaveVistorParkingOutTime(Nullable<int> visitorRequestId, string outComment, string updatedBy, ObjectParameter errorCode, Nullable<int> previousStatusID, string visitorOutTime)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            var outCommentParameter = outComment != null ?
                new ObjectParameter("OutComment", outComment) :
                new ObjectParameter("OutComment", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var visitorOutTimeParameter = visitorOutTime != null ?
                new ObjectParameter("VisitorOutTime", visitorOutTime) :
                new ObjectParameter("VisitorOutTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVistorParkingOutTime", visitorRequestIdParameter, outCommentParameter, updatedByParameter, errorCode, previousStatusIDParameter, visitorOutTimeParameter);
        }
    
        public virtual int SP_DGC_SaveVistorParkingEntry(Nullable<int> visitorRequestId, string visitorVehicleNumber, string visitorPhotPath, string visitorIdentityProofPath, string isSlatAvailable, string updatedBy, ObjectParameter errorCode, Nullable<int> previousStatusID, string visiotrInComment, string visitorInTime, string visitorCardNumber)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            var visitorVehicleNumberParameter = visitorVehicleNumber != null ?
                new ObjectParameter("VisitorVehicleNumber", visitorVehicleNumber) :
                new ObjectParameter("VisitorVehicleNumber", typeof(string));
    
            var visitorPhotPathParameter = visitorPhotPath != null ?
                new ObjectParameter("VisitorPhotPath", visitorPhotPath) :
                new ObjectParameter("VisitorPhotPath", typeof(string));
    
            var visitorIdentityProofPathParameter = visitorIdentityProofPath != null ?
                new ObjectParameter("VisitorIdentityProofPath", visitorIdentityProofPath) :
                new ObjectParameter("VisitorIdentityProofPath", typeof(string));
    
            var isSlatAvailableParameter = isSlatAvailable != null ?
                new ObjectParameter("IsSlatAvailable", isSlatAvailable) :
                new ObjectParameter("IsSlatAvailable", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var visiotrInCommentParameter = visiotrInComment != null ?
                new ObjectParameter("VisiotrInComment", visiotrInComment) :
                new ObjectParameter("VisiotrInComment", typeof(string));
    
            var visitorInTimeParameter = visitorInTime != null ?
                new ObjectParameter("VisitorInTime", visitorInTime) :
                new ObjectParameter("VisitorInTime", typeof(string));
    
            var visitorCardNumberParameter = visitorCardNumber != null ?
                new ObjectParameter("VisitorCardNumber", visitorCardNumber) :
                new ObjectParameter("VisitorCardNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVistorParkingEntry", visitorRequestIdParameter, visitorVehicleNumberParameter, visitorPhotPathParameter, visitorIdentityProofPathParameter, isSlatAvailableParameter, updatedByParameter, errorCode, previousStatusIDParameter, visiotrInCommentParameter, visitorInTimeParameter, visitorCardNumberParameter);
        }
    
        public virtual int SP_DGC_DeleteFacilityAdding(Nullable<int> facilitiesId, string deletedBy, ObjectParameter errorCode)
        {
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteFacilityAdding", facilitiesIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetTodayAllVisitorRequests_Result> SP_DGC_GetTodayAllVisitorRequests(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> requestedFromRole, Nullable<long> requestedUserId, string statusCode, Nullable<int> unitId, Nullable<System.DateTime> todayDate)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var todayDateParameter = todayDate.HasValue ?
                new ObjectParameter("TodayDate", todayDate) :
                new ObjectParameter("TodayDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetTodayAllVisitorRequests_Result>("SP_DGC_GetTodayAllVisitorRequests", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, requestedFromRoleParameter, requestedUserIdParameter, statusCodeParameter, unitIdParameter, todayDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCourtPaymentPackagesId_Result> SP_DGC_GetCourtPaymentPackagesId(Nullable<int> courtID)
        {
            var courtIDParameter = courtID.HasValue ?
                new ObjectParameter("CourtID", courtID) :
                new ObjectParameter("CourtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCourtPaymentPackagesId_Result>("SP_DGC_GetCourtPaymentPackagesId", courtIDParameter);
        }
    
        public virtual int SP_DGC_GetGameCourtByCourtId(Nullable<int> courtID)
        {
            var courtIDParameter = courtID.HasValue ?
                new ObjectParameter("CourtID", courtID) :
                new ObjectParameter("CourtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_GetGameCourtByCourtId", courtIDParameter);
        }
    
        public virtual int SP_DGC_DeleteTrainer(Nullable<int> trainerId, string deletedBy, ObjectParameter errorCode)
        {
            var trainerIdParameter = trainerId.HasValue ?
                new ObjectParameter("TrainerId", trainerId) :
                new ObjectParameter("TrainerId", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteTrainer", trainerIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteChartsOfAccountItems(Nullable<int> accountItemId, string deActiveComment, string deActivatedBy, ObjectParameter errorCode)
        {
            var accountItemIdParameter = accountItemId.HasValue ?
                new ObjectParameter("AccountItemId", accountItemId) :
                new ObjectParameter("AccountItemId", typeof(int));
    
            var deActiveCommentParameter = deActiveComment != null ?
                new ObjectParameter("DeActiveComment", deActiveComment) :
                new ObjectParameter("DeActiveComment", typeof(string));
    
            var deActivatedByParameter = deActivatedBy != null ?
                new ObjectParameter("DeActivatedBy", deActivatedBy) :
                new ObjectParameter("DeActivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteChartsOfAccountItems", accountItemIdParameter, deActiveCommentParameter, deActivatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteChartsOfAccounts(Nullable<int> accountId, string deActiveComment, string deActivatedBy, ObjectParameter errorCode)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var deActiveCommentParameter = deActiveComment != null ?
                new ObjectParameter("DeActiveComment", deActiveComment) :
                new ObjectParameter("DeActiveComment", typeof(string));
    
            var deActivatedByParameter = deActivatedBy != null ?
                new ObjectParameter("DeActivatedBy", deActivatedBy) :
                new ObjectParameter("DeActivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteChartsOfAccounts", accountIdParameter, deActiveCommentParameter, deActivatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveChartsOfAccountItemsDetails(Nullable<int> accountItemId, Nullable<int> typeOfAccount, string itemName, Nullable<int> accountItemNo, string itemCode, string createdBy, ObjectParameter errorCode)
        {
            var accountItemIdParameter = accountItemId.HasValue ?
                new ObjectParameter("AccountItemId", accountItemId) :
                new ObjectParameter("AccountItemId", typeof(int));
    
            var typeOfAccountParameter = typeOfAccount.HasValue ?
                new ObjectParameter("TypeOfAccount", typeOfAccount) :
                new ObjectParameter("TypeOfAccount", typeof(int));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var accountItemNoParameter = accountItemNo.HasValue ?
                new ObjectParameter("AccountItemNo", accountItemNo) :
                new ObjectParameter("AccountItemNo", typeof(int));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveChartsOfAccountItemsDetails", accountItemIdParameter, typeOfAccountParameter, itemNameParameter, accountItemNoParameter, itemCodeParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveChartsOfAccountsDetails(Nullable<int> accountId, string accountName, string accountDescription, string accountCode, string accountDisplayName, Nullable<int> startingAccountNumber, Nullable<int> endingAccountNumber, string subscriptionId, string createdBy, ObjectParameter errorCode)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var accountDescriptionParameter = accountDescription != null ?
                new ObjectParameter("AccountDescription", accountDescription) :
                new ObjectParameter("AccountDescription", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountDisplayNameParameter = accountDisplayName != null ?
                new ObjectParameter("AccountDisplayName", accountDisplayName) :
                new ObjectParameter("AccountDisplayName", typeof(string));
    
            var startingAccountNumberParameter = startingAccountNumber.HasValue ?
                new ObjectParameter("StartingAccountNumber", startingAccountNumber) :
                new ObjectParameter("StartingAccountNumber", typeof(int));
    
            var endingAccountNumberParameter = endingAccountNumber.HasValue ?
                new ObjectParameter("EndingAccountNumber", endingAccountNumber) :
                new ObjectParameter("EndingAccountNumber", typeof(int));
    
            var subscriptionIdParameter = subscriptionId != null ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveChartsOfAccountsDetails", accountIdParameter, accountNameParameter, accountDescriptionParameter, accountCodeParameter, accountDisplayNameParameter, startingAccountNumberParameter, endingAccountNumberParameter, subscriptionIdParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveAccounts_Result> SP_DGC_GetActiveAccounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveAccounts_Result>("SP_DGC_GetActiveAccounts");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllChartsOfAccounts_Result> SP_DGC_GetAllChartsOfAccounts(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllChartsOfAccounts_Result>("SP_DGC_GetAllChartsOfAccounts", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllChartsOfAccountItems_Result> SP_DGC_GetAllChartsOfAccountItems(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, Nullable<int> accountId, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllChartsOfAccountItems_Result>("SP_DGC_GetAllChartsOfAccountItems", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, accountIdParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_CancelCondoFacilitiesBooking(Nullable<int> condoFacilityBookingId, string cancelComments, string cancelledBy, ObjectParameter errorCode, Nullable<int> previousStatusID)
        {
            var condoFacilityBookingIdParameter = condoFacilityBookingId.HasValue ?
                new ObjectParameter("CondoFacilityBookingId", condoFacilityBookingId) :
                new ObjectParameter("CondoFacilityBookingId", typeof(int));
    
            var cancelCommentsParameter = cancelComments != null ?
                new ObjectParameter("CancelComments", cancelComments) :
                new ObjectParameter("CancelComments", typeof(string));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelCondoFacilitiesBooking", condoFacilityBookingIdParameter, cancelCommentsParameter, cancelledByParameter, errorCode, previousStatusIDParameter);
        }
    
        public virtual int SP_DGC_SaveVendorInvoice(Nullable<long> vendorInvoiceId, Nullable<long> vendorRegId, string monthOfInvoice, Nullable<System.DateTime> invoicePeriodFrom, Nullable<System.DateTime> invoicePeriodTo, Nullable<System.DateTime> billReceivedDate, string invoiceNumber, Nullable<System.DateTime> invoiceDate, Nullable<int> pymentTermDays, Nullable<decimal> invoiceAmount, string otherCompanyName, string statusid, string createdBy, string vendorInvoiceFilePath, ObjectParameter errorCode)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(long));
    
            var monthOfInvoiceParameter = monthOfInvoice != null ?
                new ObjectParameter("MonthOfInvoice", monthOfInvoice) :
                new ObjectParameter("MonthOfInvoice", typeof(string));
    
            var invoicePeriodFromParameter = invoicePeriodFrom.HasValue ?
                new ObjectParameter("InvoicePeriodFrom", invoicePeriodFrom) :
                new ObjectParameter("InvoicePeriodFrom", typeof(System.DateTime));
    
            var invoicePeriodToParameter = invoicePeriodTo.HasValue ?
                new ObjectParameter("InvoicePeriodTo", invoicePeriodTo) :
                new ObjectParameter("InvoicePeriodTo", typeof(System.DateTime));
    
            var billReceivedDateParameter = billReceivedDate.HasValue ?
                new ObjectParameter("BillReceivedDate", billReceivedDate) :
                new ObjectParameter("BillReceivedDate", typeof(System.DateTime));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var pymentTermDaysParameter = pymentTermDays.HasValue ?
                new ObjectParameter("PymentTermDays", pymentTermDays) :
                new ObjectParameter("PymentTermDays", typeof(int));
    
            var invoiceAmountParameter = invoiceAmount.HasValue ?
                new ObjectParameter("InvoiceAmount", invoiceAmount) :
                new ObjectParameter("InvoiceAmount", typeof(decimal));
    
            var otherCompanyNameParameter = otherCompanyName != null ?
                new ObjectParameter("OtherCompanyName", otherCompanyName) :
                new ObjectParameter("OtherCompanyName", typeof(string));
    
            var statusidParameter = statusid != null ?
                new ObjectParameter("Statusid", statusid) :
                new ObjectParameter("Statusid", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var vendorInvoiceFilePathParameter = vendorInvoiceFilePath != null ?
                new ObjectParameter("VendorInvoiceFilePath", vendorInvoiceFilePath) :
                new ObjectParameter("VendorInvoiceFilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVendorInvoice", vendorInvoiceIdParameter, vendorRegIdParameter, monthOfInvoiceParameter, invoicePeriodFromParameter, invoicePeriodToParameter, billReceivedDateParameter, invoiceNumberParameter, invoiceDateParameter, pymentTermDaysParameter, invoiceAmountParameter, otherCompanyNameParameter, statusidParameter, createdByParameter, vendorInvoiceFilePathParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveCourtsByFacilitiesId_Result> SP_DGC_GetActiveCourtsByFacilitiesId(Nullable<int> facilitiesId)
        {
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveCourtsByFacilitiesId_Result>("SP_DGC_GetActiveCourtsByFacilitiesId", facilitiesIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveAccountItemByAccountID_Result> SP_DGC_GetActiveAccountItemByAccountID(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveAccountItemByAccountID_Result>("SP_DGC_GetActiveAccountItemByAccountID", accountIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUitRequestItemDetails_Result> SP_DGC_GetAllUitRequestItemDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUitRequestItemDetails_Result>("SP_DGC_GetAllUitRequestItemDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitRequestItemById_Result> SP_DGC_GetUnitRequestItemById(Nullable<int> unitRequestItemId)
        {
            var unitRequestItemIdParameter = unitRequestItemId.HasValue ?
                new ObjectParameter("UnitRequestItemId", unitRequestItemId) :
                new ObjectParameter("UnitRequestItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitRequestItemById_Result>("SP_DGC_GetUnitRequestItemById", unitRequestItemIdParameter);
        }
    
        public virtual int SP_DGC_SaveUnitRequestItemDetails(Nullable<int> unitRequestItemId, string unitRequestType, string unitRequestItem, string unitItemCode, string updatedBy, ObjectParameter errorCode)
        {
            var unitRequestItemIdParameter = unitRequestItemId.HasValue ?
                new ObjectParameter("UnitRequestItemId", unitRequestItemId) :
                new ObjectParameter("UnitRequestItemId", typeof(int));
    
            var unitRequestTypeParameter = unitRequestType != null ?
                new ObjectParameter("UnitRequestType", unitRequestType) :
                new ObjectParameter("UnitRequestType", typeof(string));
    
            var unitRequestItemParameter = unitRequestItem != null ?
                new ObjectParameter("UnitRequestItem", unitRequestItem) :
                new ObjectParameter("UnitRequestItem", typeof(string));
    
            var unitItemCodeParameter = unitItemCode != null ?
                new ObjectParameter("UnitItemCode", unitItemCode) :
                new ObjectParameter("UnitItemCode", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitRequestItemDetails", unitRequestItemIdParameter, unitRequestTypeParameter, unitRequestItemParameter, unitItemCodeParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveUnitRequestItemMappingDetails(Nullable<int> unitRequestItemId, Nullable<int> chartsOfAccountId, Nullable<int> accountItemId, string mappedBy, ObjectParameter errorCode)
        {
            var unitRequestItemIdParameter = unitRequestItemId.HasValue ?
                new ObjectParameter("UnitRequestItemId", unitRequestItemId) :
                new ObjectParameter("UnitRequestItemId", typeof(int));
    
            var chartsOfAccountIdParameter = chartsOfAccountId.HasValue ?
                new ObjectParameter("ChartsOfAccountId", chartsOfAccountId) :
                new ObjectParameter("ChartsOfAccountId", typeof(int));
    
            var accountItemIdParameter = accountItemId.HasValue ?
                new ObjectParameter("AccountItemId", accountItemId) :
                new ObjectParameter("AccountItemId", typeof(int));
    
            var mappedByParameter = mappedBy != null ?
                new ObjectParameter("MappedBy", mappedBy) :
                new ObjectParameter("MappedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitRequestItemMappingDetails", unitRequestItemIdParameter, chartsOfAccountIdParameter, accountItemIdParameter, mappedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveUnitRequestItemUnMappingDetails(Nullable<int> mappingId, string unMappedComment, string unMappedBy, ObjectParameter errorCode)
        {
            var mappingIdParameter = mappingId.HasValue ?
                new ObjectParameter("MappingId", mappingId) :
                new ObjectParameter("MappingId", typeof(int));
    
            var unMappedCommentParameter = unMappedComment != null ?
                new ObjectParameter("UnMappedComment", unMappedComment) :
                new ObjectParameter("UnMappedComment", typeof(string));
    
            var unMappedByParameter = unMappedBy != null ?
                new ObjectParameter("UnMappedBy", unMappedBy) :
                new ObjectParameter("UnMappedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitRequestItemUnMappingDetails", mappingIdParameter, unMappedCommentParameter, unMappedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitRequestAccountItemMappingDetails_Result> SP_DGC_GetAllUnitRequestAccountItemMappingDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitRequestAccountItemMappingDetails_Result>("SP_DGC_GetAllUnitRequestAccountItemMappingDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_DeleteGlAccountItems(Nullable<int> accountItemId, string deActiveComment, string deActivatedBy, ObjectParameter errorCode)
        {
            var accountItemIdParameter = accountItemId.HasValue ?
                new ObjectParameter("AccountItemId", accountItemId) :
                new ObjectParameter("AccountItemId", typeof(int));
    
            var deActiveCommentParameter = deActiveComment != null ?
                new ObjectParameter("DeActiveComment", deActiveComment) :
                new ObjectParameter("DeActiveComment", typeof(string));
    
            var deActivatedByParameter = deActivatedBy != null ?
                new ObjectParameter("DeActivatedBy", deActivatedBy) :
                new ObjectParameter("DeActivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteGlAccountItems", accountItemIdParameter, deActiveCommentParameter, deActivatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteGlGroup(Nullable<int> accountId, string deActiveComment, string deActivatedBy, ObjectParameter errorCode)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var deActiveCommentParameter = deActiveComment != null ?
                new ObjectParameter("DeActiveComment", deActiveComment) :
                new ObjectParameter("DeActiveComment", typeof(string));
    
            var deActivatedByParameter = deActivatedBy != null ?
                new ObjectParameter("DeActivatedBy", deActivatedBy) :
                new ObjectParameter("DeActivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteGlGroup", accountIdParameter, deActiveCommentParameter, deActivatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllActiveCondoAccounts_Result> SP_DGC_GetAllActiveCondoAccounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllActiveCondoAccounts_Result>("SP_DGC_GetAllActiveCondoAccounts");
        }
    
        public virtual ObjectResult<SP_DGC_GetGasConsumeByMeterReadingId_Result> SP_DGC_GetGasConsumeByMeterReadingId(Nullable<long> meterReadingId)
        {
            var meterReadingIdParameter = meterReadingId.HasValue ?
                new ObjectParameter("MeterReadingId", meterReadingId) :
                new ObjectParameter("MeterReadingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetGasConsumeByMeterReadingId_Result>("SP_DGC_GetGasConsumeByMeterReadingId", meterReadingIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetLastGasReadingOfUnitByUnitId_Result> SP_DGC_GetLastGasReadingOfUnitByUnitId(Nullable<long> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLastGasReadingOfUnitByUnitId_Result>("SP_DGC_GetLastGasReadingOfUnitByUnitId", unitIdParameter);
        }
    
        public virtual int SP_DGC_SaveGasConsumeDetails(Nullable<long> meterReadingId, Nullable<int> unitId, Nullable<System.DateTime> periodFrom, Nullable<System.DateTime> periodTo, string readingTime, string monthOfReading, Nullable<long> previousReading, Nullable<long> currentReading, Nullable<long> consumedUnits, Nullable<int> statusId, Nullable<long> readingTakenByUserId, string updatedBy, ObjectParameter errorCode)
        {
            var meterReadingIdParameter = meterReadingId.HasValue ?
                new ObjectParameter("MeterReadingId", meterReadingId) :
                new ObjectParameter("MeterReadingId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var periodFromParameter = periodFrom.HasValue ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(System.DateTime));
    
            var periodToParameter = periodTo.HasValue ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(System.DateTime));
    
            var readingTimeParameter = readingTime != null ?
                new ObjectParameter("ReadingTime", readingTime) :
                new ObjectParameter("ReadingTime", typeof(string));
    
            var monthOfReadingParameter = monthOfReading != null ?
                new ObjectParameter("MonthOfReading", monthOfReading) :
                new ObjectParameter("MonthOfReading", typeof(string));
    
            var previousReadingParameter = previousReading.HasValue ?
                new ObjectParameter("PreviousReading", previousReading) :
                new ObjectParameter("PreviousReading", typeof(long));
    
            var currentReadingParameter = currentReading.HasValue ?
                new ObjectParameter("CurrentReading", currentReading) :
                new ObjectParameter("CurrentReading", typeof(long));
    
            var consumedUnitsParameter = consumedUnits.HasValue ?
                new ObjectParameter("ConsumedUnits", consumedUnits) :
                new ObjectParameter("ConsumedUnits", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var readingTakenByUserIdParameter = readingTakenByUserId.HasValue ?
                new ObjectParameter("ReadingTakenByUserId", readingTakenByUserId) :
                new ObjectParameter("ReadingTakenByUserId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveGasConsumeDetails", meterReadingIdParameter, unitIdParameter, periodFromParameter, periodToParameter, readingTimeParameter, monthOfReadingParameter, previousReadingParameter, currentReadingParameter, consumedUnitsParameter, statusIdParameter, readingTakenByUserIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_RPT_GetAllDueAmountReports_Result> SP_DGC_RPT_GetAllDueAmountReports(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, string monthYear, Nullable<int> unitId, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var monthYearParameter = monthYear != null ?
                new ObjectParameter("MonthYear", monthYear) :
                new ObjectParameter("MonthYear", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_RPT_GetAllDueAmountReports_Result>("SP_DGC_RPT_GetAllDueAmountReports", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, monthYearParameter, unitIdParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllGasConsumeDetails_Result> SP_DGC_GetAllGasConsumeDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllGasConsumeDetails_Result>("SP_DGC_GetAllGasConsumeDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetLastGasReadingOfUnit_Result> SP_DGC_GetLastGasReadingOfUnit(string blockFloorUnitName)
        {
            var blockFloorUnitNameParameter = blockFloorUnitName != null ?
                new ObjectParameter("BlockFloorUnitName", blockFloorUnitName) :
                new ObjectParameter("BlockFloorUnitName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLastGasReadingOfUnit_Result>("SP_DGC_GetLastGasReadingOfUnit", blockFloorUnitNameParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitGasBillDetails_Result> SP_DGC_GetAllUnitGasBillDetails(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitGasBillDetails_Result>("SP_DGC_GetAllUnitGasBillDetails", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveGlAccountNumbers_Result> SP_DGC_GetActiveGlAccountNumbers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveGlAccountNumbers_Result>("SP_DGC_GetActiveGlAccountNumbers");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllPurchaseInvoiceDetails_Result> SP_DGC_GetAllPurchaseInvoiceDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllPurchaseInvoiceDetails_Result>("SP_DGC_GetAllPurchaseInvoiceDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SavePurchaseInvoiceDetails(Nullable<long> purchaseInvoiceId, Nullable<long> vendorRegId, Nullable<System.DateTime> billReceivedDate, string invoiceNumber, Nullable<System.DateTime> invoiceDate, Nullable<int> pymentTermDays, Nullable<decimal> invoiceAmount, string statusid, string createdBy, string purchaseInvoiceFilePath, ObjectParameter errorCode)
        {
            var purchaseInvoiceIdParameter = purchaseInvoiceId.HasValue ?
                new ObjectParameter("PurchaseInvoiceId", purchaseInvoiceId) :
                new ObjectParameter("PurchaseInvoiceId", typeof(long));
    
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(long));
    
            var billReceivedDateParameter = billReceivedDate.HasValue ?
                new ObjectParameter("BillReceivedDate", billReceivedDate) :
                new ObjectParameter("BillReceivedDate", typeof(System.DateTime));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var pymentTermDaysParameter = pymentTermDays.HasValue ?
                new ObjectParameter("PymentTermDays", pymentTermDays) :
                new ObjectParameter("PymentTermDays", typeof(int));
    
            var invoiceAmountParameter = invoiceAmount.HasValue ?
                new ObjectParameter("InvoiceAmount", invoiceAmount) :
                new ObjectParameter("InvoiceAmount", typeof(decimal));
    
            var statusidParameter = statusid != null ?
                new ObjectParameter("Statusid", statusid) :
                new ObjectParameter("Statusid", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var purchaseInvoiceFilePathParameter = purchaseInvoiceFilePath != null ?
                new ObjectParameter("PurchaseInvoiceFilePath", purchaseInvoiceFilePath) :
                new ObjectParameter("PurchaseInvoiceFilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SavePurchaseInvoiceDetails", purchaseInvoiceIdParameter, vendorRegIdParameter, billReceivedDateParameter, invoiceNumberParameter, invoiceDateParameter, pymentTermDaysParameter, invoiceAmountParameter, statusidParameter, createdByParameter, purchaseInvoiceFilePathParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeletePurchaseInvoiceLineItem(Nullable<int> purchaseInvoiceLineID)
        {
            var purchaseInvoiceLineIDParameter = purchaseInvoiceLineID.HasValue ?
                new ObjectParameter("PurchaseInvoiceLineID", purchaseInvoiceLineID) :
                new ObjectParameter("PurchaseInvoiceLineID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeletePurchaseInvoiceLineItem", purchaseInvoiceLineIDParameter);
        }
    
        public virtual int SP_DGC_DeleteUtilityInvoiceLineItem(Nullable<int> utilityInvoiceLineId)
        {
            var utilityInvoiceLineIdParameter = utilityInvoiceLineId.HasValue ?
                new ObjectParameter("UtilityInvoiceLineId", utilityInvoiceLineId) :
                new ObjectParameter("UtilityInvoiceLineId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteUtilityInvoiceLineItem", utilityInvoiceLineIdParameter);
        }
    
        public virtual int SP_DGC_DeleteVendorInvoiceLineItem(Nullable<int> vendorInvoiceLineID)
        {
            var vendorInvoiceLineIDParameter = vendorInvoiceLineID.HasValue ?
                new ObjectParameter("VendorInvoiceLineID", vendorInvoiceLineID) :
                new ObjectParameter("VendorInvoiceLineID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteVendorInvoiceLineItem", vendorInvoiceLineIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUtilityInvoiceDetails_Result> SP_DGC_GetAllUtilityInvoiceDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUtilityInvoiceDetails_Result>("SP_DGC_GetAllUtilityInvoiceDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetPurchaseInVoiceByPInoiceId_Result> SP_DGC_GetPurchaseInVoiceByPInoiceId(Nullable<long> purchaseInvoiceId)
        {
            var purchaseInvoiceIdParameter = purchaseInvoiceId.HasValue ?
                new ObjectParameter("PurchaseInvoiceId", purchaseInvoiceId) :
                new ObjectParameter("PurchaseInvoiceId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetPurchaseInVoiceByPInoiceId_Result>("SP_DGC_GetPurchaseInVoiceByPInoiceId", purchaseInvoiceIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUtilityInVoiceByUInoiceId_Result> SP_DGC_GetUtilityInVoiceByUInoiceId(Nullable<long> utilityInvoiceId)
        {
            var utilityInvoiceIdParameter = utilityInvoiceId.HasValue ?
                new ObjectParameter("UtilityInvoiceId", utilityInvoiceId) :
                new ObjectParameter("UtilityInvoiceId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUtilityInVoiceByUInoiceId_Result>("SP_DGC_GetUtilityInVoiceByUInoiceId", utilityInvoiceIdParameter);
        }
    
        public virtual int SP_DGC_SaveUtilityInvoiceDetails(Nullable<long> utilityInvoiceId, Nullable<int> utilityConfigKey, Nullable<int> utiltityBillId, Nullable<long> utilityRegId, Nullable<System.DateTime> billReceivedDate, string invoiceNumber, Nullable<System.DateTime> invoiceDate, Nullable<int> pymentTermDays, Nullable<decimal> invoiceAmount, string statusid, string createdBy, string utilityInvoiceFilePath, ObjectParameter errorCode)
        {
            var utilityInvoiceIdParameter = utilityInvoiceId.HasValue ?
                new ObjectParameter("UtilityInvoiceId", utilityInvoiceId) :
                new ObjectParameter("UtilityInvoiceId", typeof(long));
    
            var utilityConfigKeyParameter = utilityConfigKey.HasValue ?
                new ObjectParameter("UtilityConfigKey", utilityConfigKey) :
                new ObjectParameter("UtilityConfigKey", typeof(int));
    
            var utiltityBillIdParameter = utiltityBillId.HasValue ?
                new ObjectParameter("UtiltityBillId", utiltityBillId) :
                new ObjectParameter("UtiltityBillId", typeof(int));
    
            var utilityRegIdParameter = utilityRegId.HasValue ?
                new ObjectParameter("UtilityRegId", utilityRegId) :
                new ObjectParameter("UtilityRegId", typeof(long));
    
            var billReceivedDateParameter = billReceivedDate.HasValue ?
                new ObjectParameter("BillReceivedDate", billReceivedDate) :
                new ObjectParameter("BillReceivedDate", typeof(System.DateTime));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var pymentTermDaysParameter = pymentTermDays.HasValue ?
                new ObjectParameter("PymentTermDays", pymentTermDays) :
                new ObjectParameter("PymentTermDays", typeof(int));
    
            var invoiceAmountParameter = invoiceAmount.HasValue ?
                new ObjectParameter("InvoiceAmount", invoiceAmount) :
                new ObjectParameter("InvoiceAmount", typeof(decimal));
    
            var statusidParameter = statusid != null ?
                new ObjectParameter("Statusid", statusid) :
                new ObjectParameter("Statusid", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var utilityInvoiceFilePathParameter = utilityInvoiceFilePath != null ?
                new ObjectParameter("UtilityInvoiceFilePath", utilityInvoiceFilePath) :
                new ObjectParameter("UtilityInvoiceFilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUtilityInvoiceDetails", utilityInvoiceIdParameter, utilityConfigKeyParameter, utiltityBillIdParameter, utilityRegIdParameter, billReceivedDateParameter, invoiceNumberParameter, invoiceDateParameter, pymentTermDaysParameter, invoiceAmountParameter, statusidParameter, createdByParameter, utilityInvoiceFilePathParameter, errorCode);
        }
    
        public virtual int SP_DGC_SavePurchaseInvoicePaymentDetails(Nullable<long> purchaseInvoiceId, Nullable<int> statusId, string paymentInfo, string comments, string additionalReferenceFilePath, Nullable<long> actionTakenByUserId, string updatedBY, ObjectParameter errorCode)
        {
            var purchaseInvoiceIdParameter = purchaseInvoiceId.HasValue ?
                new ObjectParameter("PurchaseInvoiceId", purchaseInvoiceId) :
                new ObjectParameter("PurchaseInvoiceId", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SavePurchaseInvoicePaymentDetails", purchaseInvoiceIdParameter, statusIdParameter, paymentInfoParameter, commentsParameter, additionalReferenceFilePathParameter, actionTakenByUserIdParameter, updatedBYParameter, errorCode);
        }
    
        public virtual int SP_DGC_CancelPurchseInvoice(Nullable<long> purchaseInvoiceId, string cancelReason, Nullable<long> cancelledByUserId, string cancelledBy, ObjectParameter errorCode)
        {
            var purchaseInvoiceIdParameter = purchaseInvoiceId.HasValue ?
                new ObjectParameter("PurchaseInvoiceId", purchaseInvoiceId) :
                new ObjectParameter("PurchaseInvoiceId", typeof(long));
    
            var cancelReasonParameter = cancelReason != null ?
                new ObjectParameter("CancelReason", cancelReason) :
                new ObjectParameter("CancelReason", typeof(string));
    
            var cancelledByUserIdParameter = cancelledByUserId.HasValue ?
                new ObjectParameter("CancelledByUserId", cancelledByUserId) :
                new ObjectParameter("CancelledByUserId", typeof(long));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelPurchseInvoice", purchaseInvoiceIdParameter, cancelReasonParameter, cancelledByUserIdParameter, cancelledByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllLoanPaymentDetails_Result> SP_DGC_GetAllLoanPaymentDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllLoanPaymentDetails_Result>("SP_DGC_GetAllLoanPaymentDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveLoanPaymentDetails(Nullable<int> pILItemLoanID, string paymentInfo, string comments, string additionalReferenceFilePath, Nullable<long> actionTakenByUserId, string updatedBY, ObjectParameter errorCode)
        {
            var pILItemLoanIDParameter = pILItemLoanID.HasValue ?
                new ObjectParameter("PILItemLoanID", pILItemLoanID) :
                new ObjectParameter("PILItemLoanID", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveLoanPaymentDetails", pILItemLoanIDParameter, paymentInfoParameter, commentsParameter, additionalReferenceFilePathParameter, actionTakenByUserIdParameter, updatedBYParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveUnSourceExpensiveDetails(Nullable<long> uSRequestId, Nullable<int> typeOfExpense, string modeOfPayment, Nullable<int> fromCondoBankAccountID, Nullable<int> fromGLAccountItemid, Nullable<int> toCondoBankAccountId, Nullable<int> toGLAccountItemId, Nullable<decimal> trasactionAmount, Nullable<System.DateTime> actualTransactionDate, string transactionReason, Nullable<System.DateTime> chequePostDate, string chequeOrReferenceNumber, string bankName, string createdBy, ObjectParameter errorCode)
        {
            var uSRequestIdParameter = uSRequestId.HasValue ?
                new ObjectParameter("USRequestId", uSRequestId) :
                new ObjectParameter("USRequestId", typeof(long));
    
            var typeOfExpenseParameter = typeOfExpense.HasValue ?
                new ObjectParameter("TypeOfExpense", typeOfExpense) :
                new ObjectParameter("TypeOfExpense", typeof(int));
    
            var modeOfPaymentParameter = modeOfPayment != null ?
                new ObjectParameter("ModeOfPayment", modeOfPayment) :
                new ObjectParameter("ModeOfPayment", typeof(string));
    
            var fromCondoBankAccountIDParameter = fromCondoBankAccountID.HasValue ?
                new ObjectParameter("FromCondoBankAccountID", fromCondoBankAccountID) :
                new ObjectParameter("FromCondoBankAccountID", typeof(int));
    
            var fromGLAccountItemidParameter = fromGLAccountItemid.HasValue ?
                new ObjectParameter("FromGLAccountItemid", fromGLAccountItemid) :
                new ObjectParameter("FromGLAccountItemid", typeof(int));
    
            var toCondoBankAccountIdParameter = toCondoBankAccountId.HasValue ?
                new ObjectParameter("ToCondoBankAccountId", toCondoBankAccountId) :
                new ObjectParameter("ToCondoBankAccountId", typeof(int));
    
            var toGLAccountItemIdParameter = toGLAccountItemId.HasValue ?
                new ObjectParameter("ToGLAccountItemId", toGLAccountItemId) :
                new ObjectParameter("ToGLAccountItemId", typeof(int));
    
            var trasactionAmountParameter = trasactionAmount.HasValue ?
                new ObjectParameter("TrasactionAmount", trasactionAmount) :
                new ObjectParameter("TrasactionAmount", typeof(decimal));
    
            var actualTransactionDateParameter = actualTransactionDate.HasValue ?
                new ObjectParameter("ActualTransactionDate", actualTransactionDate) :
                new ObjectParameter("ActualTransactionDate", typeof(System.DateTime));
    
            var transactionReasonParameter = transactionReason != null ?
                new ObjectParameter("TransactionReason", transactionReason) :
                new ObjectParameter("TransactionReason", typeof(string));
    
            var chequePostDateParameter = chequePostDate.HasValue ?
                new ObjectParameter("ChequePostDate", chequePostDate) :
                new ObjectParameter("ChequePostDate", typeof(System.DateTime));
    
            var chequeOrReferenceNumberParameter = chequeOrReferenceNumber != null ?
                new ObjectParameter("ChequeOrReferenceNumber", chequeOrReferenceNumber) :
                new ObjectParameter("ChequeOrReferenceNumber", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnSourceExpensiveDetails", uSRequestIdParameter, typeOfExpenseParameter, modeOfPaymentParameter, fromCondoBankAccountIDParameter, fromGLAccountItemidParameter, toCondoBankAccountIdParameter, toGLAccountItemIdParameter, trasactionAmountParameter, actualTransactionDateParameter, transactionReasonParameter, chequePostDateParameter, chequeOrReferenceNumberParameter, bankNameParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnSourceExpenseRequest_Result> SP_DGC_GetAllUnSourceExpenseRequest(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnSourceExpenseRequest_Result>("SP_DGC_GetAllUnSourceExpenseRequest", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllStockDispatchDetails_Result> SP_DGC_GetAllStockDispatchDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllStockDispatchDetails_Result>("SP_DGC_GetAllStockDispatchDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveStockDispatchDetails(Nullable<long> stockDeliveryDetailsId, Nullable<long> materialId, Nullable<int> purchaseInvoiceItemId, Nullable<System.DateTime> actualDeliveredDate, Nullable<int> deliveredQuantity, string deliveredToPersonname, string deliveredToPersonContactNumber, string deliveredToEmail, string createdBy, ObjectParameter errorCode)
        {
            var stockDeliveryDetailsIdParameter = stockDeliveryDetailsId.HasValue ?
                new ObjectParameter("StockDeliveryDetailsId", stockDeliveryDetailsId) :
                new ObjectParameter("StockDeliveryDetailsId", typeof(long));
    
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(long));
    
            var purchaseInvoiceItemIdParameter = purchaseInvoiceItemId.HasValue ?
                new ObjectParameter("PurchaseInvoiceItemId", purchaseInvoiceItemId) :
                new ObjectParameter("PurchaseInvoiceItemId", typeof(int));
    
            var actualDeliveredDateParameter = actualDeliveredDate.HasValue ?
                new ObjectParameter("ActualDeliveredDate", actualDeliveredDate) :
                new ObjectParameter("ActualDeliveredDate", typeof(System.DateTime));
    
            var deliveredQuantityParameter = deliveredQuantity.HasValue ?
                new ObjectParameter("DeliveredQuantity", deliveredQuantity) :
                new ObjectParameter("DeliveredQuantity", typeof(int));
    
            var deliveredToPersonnameParameter = deliveredToPersonname != null ?
                new ObjectParameter("DeliveredToPersonname", deliveredToPersonname) :
                new ObjectParameter("DeliveredToPersonname", typeof(string));
    
            var deliveredToPersonContactNumberParameter = deliveredToPersonContactNumber != null ?
                new ObjectParameter("DeliveredToPersonContactNumber", deliveredToPersonContactNumber) :
                new ObjectParameter("DeliveredToPersonContactNumber", typeof(string));
    
            var deliveredToEmailParameter = deliveredToEmail != null ?
                new ObjectParameter("DeliveredToEmail", deliveredToEmail) :
                new ObjectParameter("DeliveredToEmail", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveStockDispatchDetails", stockDeliveryDetailsIdParameter, materialIdParameter, purchaseInvoiceItemIdParameter, actualDeliveredDateParameter, deliveredQuantityParameter, deliveredToPersonnameParameter, deliveredToPersonContactNumberParameter, deliveredToEmailParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_UnitInvoice_SavePaymentDetails(Nullable<long> unitInvoiceId, string isFullPaid, Nullable<decimal> paidAmount, Nullable<decimal> interestAmount, string comments, string paymentMode, string bankName, string chequeNumber, string additionalReferencePath, string paymentReciptPath, Nullable<long> paidByUserId, string paidBy, Nullable<long> recievedByUserId, Nullable<System.DateTime> chequeDate, Nullable<System.DateTime> actualPaymentDate, string recievedBy, Nullable<int> managementAccountId, ObjectParameter errorCode)
        {
            var unitInvoiceIdParameter = unitInvoiceId.HasValue ?
                new ObjectParameter("UnitInvoiceId", unitInvoiceId) :
                new ObjectParameter("UnitInvoiceId", typeof(long));
    
            var isFullPaidParameter = isFullPaid != null ?
                new ObjectParameter("IsFullPaid", isFullPaid) :
                new ObjectParameter("IsFullPaid", typeof(string));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(decimal));
    
            var interestAmountParameter = interestAmount.HasValue ?
                new ObjectParameter("InterestAmount", interestAmount) :
                new ObjectParameter("InterestAmount", typeof(decimal));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var chequeNumberParameter = chequeNumber != null ?
                new ObjectParameter("ChequeNumber", chequeNumber) :
                new ObjectParameter("ChequeNumber", typeof(string));
    
            var additionalReferencePathParameter = additionalReferencePath != null ?
                new ObjectParameter("AdditionalReferencePath", additionalReferencePath) :
                new ObjectParameter("AdditionalReferencePath", typeof(string));
    
            var paymentReciptPathParameter = paymentReciptPath != null ?
                new ObjectParameter("PaymentReciptPath", paymentReciptPath) :
                new ObjectParameter("PaymentReciptPath", typeof(string));
    
            var paidByUserIdParameter = paidByUserId.HasValue ?
                new ObjectParameter("PaidByUserId", paidByUserId) :
                new ObjectParameter("PaidByUserId", typeof(long));
    
            var paidByParameter = paidBy != null ?
                new ObjectParameter("PaidBy", paidBy) :
                new ObjectParameter("PaidBy", typeof(string));
    
            var recievedByUserIdParameter = recievedByUserId.HasValue ?
                new ObjectParameter("RecievedByUserId", recievedByUserId) :
                new ObjectParameter("RecievedByUserId", typeof(long));
    
            var chequeDateParameter = chequeDate.HasValue ?
                new ObjectParameter("ChequeDate", chequeDate) :
                new ObjectParameter("ChequeDate", typeof(System.DateTime));
    
            var actualPaymentDateParameter = actualPaymentDate.HasValue ?
                new ObjectParameter("ActualPaymentDate", actualPaymentDate) :
                new ObjectParameter("ActualPaymentDate", typeof(System.DateTime));
    
            var recievedByParameter = recievedBy != null ?
                new ObjectParameter("RecievedBy", recievedBy) :
                new ObjectParameter("RecievedBy", typeof(string));
    
            var managementAccountIdParameter = managementAccountId.HasValue ?
                new ObjectParameter("ManagementAccountId", managementAccountId) :
                new ObjectParameter("ManagementAccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_UnitInvoice_SavePaymentDetails", unitInvoiceIdParameter, isFullPaidParameter, paidAmountParameter, interestAmountParameter, commentsParameter, paymentModeParameter, bankNameParameter, chequeNumberParameter, additionalReferencePathParameter, paymentReciptPathParameter, paidByUserIdParameter, paidByParameter, recievedByUserIdParameter, chequeDateParameter, actualPaymentDateParameter, recievedByParameter, managementAccountIdParameter, errorCode);
        }
    
        public virtual int SP_DGC_CancelledVehicleParkingRequest(Nullable<long> vehicleParkingRequestID, string cancelledComment, string cancelledBy, ObjectParameter errorCode, Nullable<int> previousStatusId)
        {
            var vehicleParkingRequestIDParameter = vehicleParkingRequestID.HasValue ?
                new ObjectParameter("VehicleParkingRequestID", vehicleParkingRequestID) :
                new ObjectParameter("VehicleParkingRequestID", typeof(long));
    
            var cancelledCommentParameter = cancelledComment != null ?
                new ObjectParameter("CancelledComment", cancelledComment) :
                new ObjectParameter("CancelledComment", typeof(string));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            var previousStatusIdParameter = previousStatusId.HasValue ?
                new ObjectParameter("PreviousStatusId", previousStatusId) :
                new ObjectParameter("PreviousStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelledVehicleParkingRequest", vehicleParkingRequestIDParameter, cancelledCommentParameter, cancelledByParameter, errorCode, previousStatusIdParameter);
        }
    
        public virtual int SP_DGC_DeActivateParkingSlotSetting(Nullable<int> vehicleSlotId, string deletedBy, ObjectParameter errorCode)
        {
            var vehicleSlotIdParameter = vehicleSlotId.HasValue ?
                new ObjectParameter("VehicleSlotId", vehicleSlotId) :
                new ObjectParameter("VehicleSlotId", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeActivateParkingSlotSetting", vehicleSlotIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllHouseRulesDetails_Result> SP_DGC_GetAllHouseRulesDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllHouseRulesDetails_Result>("SP_DGC_GetAllHouseRulesDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveHouseRuleDetails(Nullable<int> houseRuleId, string houseRulesPath, string comment, Nullable<System.DateTime> effectiveFrom, string updatedBy, ObjectParameter errorCode)
        {
            var houseRuleIdParameter = houseRuleId.HasValue ?
                new ObjectParameter("HouseRuleId", houseRuleId) :
                new ObjectParameter("HouseRuleId", typeof(int));
    
            var houseRulesPathParameter = houseRulesPath != null ?
                new ObjectParameter("HouseRulesPath", houseRulesPath) :
                new ObjectParameter("HouseRulesPath", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveHouseRuleDetails", houseRuleIdParameter, houseRulesPathParameter, commentParameter, effectiveFromParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnSourceExpensiveIntraAccountTransfer_Result> SP_DGC_GetAllUnSourceExpensiveIntraAccountTransfer(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnSourceExpensiveIntraAccountTransfer_Result>("SP_DGC_GetAllUnSourceExpensiveIntraAccountTransfer", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnSourceExpensivePayments_Result> SP_DGC_GetAllUnSourceExpensivePayments(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnSourceExpensivePayments_Result>("SP_DGC_GetAllUnSourceExpensivePayments", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnSourceExpensiveReceipts_Result> SP_DGC_GetAllUnSourceExpensiveReceipts(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnSourceExpensiveReceipts_Result>("SP_DGC_GetAllUnSourceExpensiveReceipts", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveHouseRuleDetails_Result> SP_DGC_GetActiveHouseRuleDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveHouseRuleDetails_Result>("SP_DGC_GetActiveHouseRuleDetails");
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveGlAccountItemsByGlId_Result> SP_DGC_GetActiveGlAccountItemsByGlId(Nullable<int> glAccountId)
        {
            var glAccountIdParameter = glAccountId.HasValue ?
                new ObjectParameter("GlAccountId", glAccountId) :
                new ObjectParameter("GlAccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveGlAccountItemsByGlId_Result>("SP_DGC_GetActiveGlAccountItemsByGlId", glAccountIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCondoGlItemMappingDetailsByItemRqid_Result> SP_DGC_GetCondoGlItemMappingDetailsByItemRqid(Nullable<int> itemRequestId, string glMappingRequestType)
        {
            var itemRequestIdParameter = itemRequestId.HasValue ?
                new ObjectParameter("ItemRequestId", itemRequestId) :
                new ObjectParameter("ItemRequestId", typeof(int));
    
            var glMappingRequestTypeParameter = glMappingRequestType != null ?
                new ObjectParameter("GlMappingRequestType", glMappingRequestType) :
                new ObjectParameter("GlMappingRequestType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCondoGlItemMappingDetailsByItemRqid_Result>("SP_DGC_GetCondoGlItemMappingDetailsByItemRqid", itemRequestIdParameter, glMappingRequestTypeParameter);
        }
    
        public virtual int SP_DGC_SaveCondoGlItemMappingDetails(Nullable<long> gLItemMaPId, Nullable<int> gLAccountItemId, Nullable<int> itemRequestId, string glMappingRequestType, string isActive, string comment, string mappedBy, ObjectParameter errorCode)
        {
            var gLItemMaPIdParameter = gLItemMaPId.HasValue ?
                new ObjectParameter("GLItemMaPId", gLItemMaPId) :
                new ObjectParameter("GLItemMaPId", typeof(long));
    
            var gLAccountItemIdParameter = gLAccountItemId.HasValue ?
                new ObjectParameter("GLAccountItemId", gLAccountItemId) :
                new ObjectParameter("GLAccountItemId", typeof(int));
    
            var itemRequestIdParameter = itemRequestId.HasValue ?
                new ObjectParameter("ItemRequestId", itemRequestId) :
                new ObjectParameter("ItemRequestId", typeof(int));
    
            var glMappingRequestTypeParameter = glMappingRequestType != null ?
                new ObjectParameter("GlMappingRequestType", glMappingRequestType) :
                new ObjectParameter("GlMappingRequestType", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var mappedByParameter = mappedBy != null ?
                new ObjectParameter("MappedBy", mappedBy) :
                new ObjectParameter("MappedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCondoGlItemMappingDetails", gLItemMaPIdParameter, gLAccountItemIdParameter, itemRequestIdParameter, glMappingRequestTypeParameter, isActiveParameter, commentParameter, mappedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVendorMappingDetails_Result> SP_DGC_GetAllVendorMappingDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVendorMappingDetails_Result>("SP_DGC_GetAllVendorMappingDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUtilityBillServices_Result> SP_DGC_GetAllUtilityBillServices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUtilityBillServices_Result>("SP_DGC_GetAllUtilityBillServices");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllReconcilationDetailsByMonth_Result> SP_DGC_GetAllReconcilationDetailsByMonth(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, string monthName, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var monthNameParameter = monthName != null ?
                new ObjectParameter("MonthName", monthName) :
                new ObjectParameter("MonthName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllReconcilationDetailsByMonth_Result>("SP_DGC_GetAllReconcilationDetailsByMonth", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, monthNameParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveReconciliationCarryForwardDetails(Nullable<int> carryForwardId, string carryForwardDetails, string carryForwardBy, ObjectParameter errorCode)
        {
            var carryForwardIdParameter = carryForwardId.HasValue ?
                new ObjectParameter("CarryForwardId", carryForwardId) :
                new ObjectParameter("CarryForwardId", typeof(int));
    
            var carryForwardDetailsParameter = carryForwardDetails != null ?
                new ObjectParameter("CarryForwardDetails", carryForwardDetails) :
                new ObjectParameter("CarryForwardDetails", typeof(string));
    
            var carryForwardByParameter = carryForwardBy != null ?
                new ObjectParameter("CarryForwardBy", carryForwardBy) :
                new ObjectParameter("CarryForwardBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveReconciliationCarryForwardDetails", carryForwardIdParameter, carryForwardDetailsParameter, carryForwardByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveReconciliationDetails(Nullable<long> bankReconciliationId, string reconciliationDetails, string reconciliationBy, ObjectParameter errorCode)
        {
            var bankReconciliationIdParameter = bankReconciliationId.HasValue ?
                new ObjectParameter("BankReconciliationId", bankReconciliationId) :
                new ObjectParameter("BankReconciliationId", typeof(long));
    
            var reconciliationDetailsParameter = reconciliationDetails != null ?
                new ObjectParameter("ReconciliationDetails", reconciliationDetails) :
                new ObjectParameter("ReconciliationDetails", typeof(string));
    
            var reconciliationByParameter = reconciliationBy != null ?
                new ObjectParameter("ReconciliationBy", reconciliationBy) :
                new ObjectParameter("ReconciliationBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveReconciliationDetails", bankReconciliationIdParameter, reconciliationDetailsParameter, reconciliationByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllMinutesOfMeetingDetails_Result> SP_DGC_GetAllMinutesOfMeetingDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllMinutesOfMeetingDetails_Result>("SP_DGC_GetAllMinutesOfMeetingDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllNonStockItemDetails_Result> SP_DGC_GetAllNonStockItemDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllNonStockItemDetails_Result>("SP_DGC_GetAllNonStockItemDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetGlAccountMappingByRequestId_Result> SP_DGC_GetGlAccountMappingByRequestId(Nullable<int> itemRequestId, string glItemMapType)
        {
            var itemRequestIdParameter = itemRequestId.HasValue ?
                new ObjectParameter("itemRequestId", itemRequestId) :
                new ObjectParameter("itemRequestId", typeof(int));
    
            var glItemMapTypeParameter = glItemMapType != null ?
                new ObjectParameter("GlItemMapType", glItemMapType) :
                new ObjectParameter("GlItemMapType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetGlAccountMappingByRequestId_Result>("SP_DGC_GetGlAccountMappingByRequestId", itemRequestIdParameter, glItemMapTypeParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitOpenCreditDetails_Result> SP_DGC_GetAllUnitOpenCreditDetails(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitOpenCreditDetails_Result>("SP_DGC_GetAllUnitOpenCreditDetails", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter);
        }
    
        public virtual int SP_DGC_SaveGlAccountItemsMapping(Nullable<int> accountItemId, Nullable<int> typeOfAccount, string itemName, Nullable<int> accountItemNo, string itemCode, Nullable<System.DateTime> startDate, string crOrDb, Nullable<int> itemRequestId, string gLItemMappingType, string createdBy, ObjectParameter errorCode)
        {
            var accountItemIdParameter = accountItemId.HasValue ?
                new ObjectParameter("AccountItemId", accountItemId) :
                new ObjectParameter("AccountItemId", typeof(int));
    
            var typeOfAccountParameter = typeOfAccount.HasValue ?
                new ObjectParameter("TypeOfAccount", typeOfAccount) :
                new ObjectParameter("TypeOfAccount", typeof(int));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var accountItemNoParameter = accountItemNo.HasValue ?
                new ObjectParameter("AccountItemNo", accountItemNo) :
                new ObjectParameter("AccountItemNo", typeof(int));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var crOrDbParameter = crOrDb != null ?
                new ObjectParameter("CrOrDb", crOrDb) :
                new ObjectParameter("CrOrDb", typeof(string));
    
            var itemRequestIdParameter = itemRequestId.HasValue ?
                new ObjectParameter("ItemRequestId", itemRequestId) :
                new ObjectParameter("ItemRequestId", typeof(int));
    
            var gLItemMappingTypeParameter = gLItemMappingType != null ?
                new ObjectParameter("GLItemMappingType", gLItemMappingType) :
                new ObjectParameter("GLItemMappingType", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveGlAccountItemsMapping", accountItemIdParameter, typeOfAccountParameter, itemNameParameter, accountItemNoParameter, itemCodeParameter, startDateParameter, crOrDbParameter, itemRequestIdParameter, gLItemMappingTypeParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllFinancialPeriodDetails_Result> SP_DGC_GetAllFinancialPeriodDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllFinancialPeriodDetails_Result>("SP_DGC_GetAllFinancialPeriodDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetFinancialPeriodDetailsByID_Result> SP_DGC_GetFinancialPeriodDetailsByID(Nullable<int> financialPeriodId)
        {
            var financialPeriodIdParameter = financialPeriodId.HasValue ?
                new ObjectParameter("FinancialPeriodId", financialPeriodId) :
                new ObjectParameter("FinancialPeriodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFinancialPeriodDetailsByID_Result>("SP_DGC_GetFinancialPeriodDetailsByID", financialPeriodIdParameter);
        }
    
        public virtual int SP_DGC_GetInitialWorkOrderDetails(Nullable<int> workOrderID, ObjectParameter workOrederNumber, ObjectParameter currentWorkOrderId)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_GetInitialWorkOrderDetails", workOrderIDParameter, workOrederNumber, currentWorkOrderId);
        }
    
        public virtual int SP_DGC_SaveFinancialPeriodDetails(Nullable<int> financialPeriodId, string periodName, Nullable<System.DateTime> fiscalPeriodStartDate, Nullable<System.DateTime> fiscalPeriodEndDate, string createdBy, ObjectParameter errorCode)
        {
            var financialPeriodIdParameter = financialPeriodId.HasValue ?
                new ObjectParameter("FinancialPeriodId", financialPeriodId) :
                new ObjectParameter("FinancialPeriodId", typeof(int));
    
            var periodNameParameter = periodName != null ?
                new ObjectParameter("PeriodName", periodName) :
                new ObjectParameter("PeriodName", typeof(string));
    
            var fiscalPeriodStartDateParameter = fiscalPeriodStartDate.HasValue ?
                new ObjectParameter("FiscalPeriodStartDate", fiscalPeriodStartDate) :
                new ObjectParameter("FiscalPeriodStartDate", typeof(System.DateTime));
    
            var fiscalPeriodEndDateParameter = fiscalPeriodEndDate.HasValue ?
                new ObjectParameter("FiscalPeriodEndDate", fiscalPeriodEndDate) :
                new ObjectParameter("FiscalPeriodEndDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFinancialPeriodDetails", financialPeriodIdParameter, periodNameParameter, fiscalPeriodStartDateParameter, fiscalPeriodEndDateParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SavePurchaseInvoiceLineItemDetails(Nullable<int> purchaseInvoiceLineID, Nullable<long> purchaseInvoiceId, Nullable<int> glAccountItemID, Nullable<long> materialID, string iSLoanApplicable, string lineNumber, string lineItemDescription, Nullable<int> purchaseQunitity, Nullable<decimal> pricePerUnit, Nullable<decimal> taxPercentageperUnit, Nullable<decimal> taxAmountPerUnit, Nullable<decimal> discountAmount, Nullable<decimal> totalAmountPerUnit, Nullable<decimal> lineTotalAmount, Nullable<int> pILItemLoanID, string bankName, string loanNumber, Nullable<decimal> loanAmount, Nullable<int> loanPeriod, Nullable<int> totalNoOfEMIs, Nullable<decimal> initialDownPaidAmount, Nullable<System.DateTime> loanStartDate, Nullable<int> nonstockItemId, string createdBy, ObjectParameter errorCode)
        {
            var purchaseInvoiceLineIDParameter = purchaseInvoiceLineID.HasValue ?
                new ObjectParameter("PurchaseInvoiceLineID", purchaseInvoiceLineID) :
                new ObjectParameter("PurchaseInvoiceLineID", typeof(int));
    
            var purchaseInvoiceIdParameter = purchaseInvoiceId.HasValue ?
                new ObjectParameter("PurchaseInvoiceId", purchaseInvoiceId) :
                new ObjectParameter("PurchaseInvoiceId", typeof(long));
    
            var glAccountItemIDParameter = glAccountItemID.HasValue ?
                new ObjectParameter("GlAccountItemID", glAccountItemID) :
                new ObjectParameter("GlAccountItemID", typeof(int));
    
            var materialIDParameter = materialID.HasValue ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(long));
    
            var iSLoanApplicableParameter = iSLoanApplicable != null ?
                new ObjectParameter("ISLoanApplicable", iSLoanApplicable) :
                new ObjectParameter("ISLoanApplicable", typeof(string));
    
            var lineNumberParameter = lineNumber != null ?
                new ObjectParameter("LineNumber", lineNumber) :
                new ObjectParameter("LineNumber", typeof(string));
    
            var lineItemDescriptionParameter = lineItemDescription != null ?
                new ObjectParameter("LineItemDescription", lineItemDescription) :
                new ObjectParameter("LineItemDescription", typeof(string));
    
            var purchaseQunitityParameter = purchaseQunitity.HasValue ?
                new ObjectParameter("PurchaseQunitity", purchaseQunitity) :
                new ObjectParameter("PurchaseQunitity", typeof(int));
    
            var pricePerUnitParameter = pricePerUnit.HasValue ?
                new ObjectParameter("PricePerUnit", pricePerUnit) :
                new ObjectParameter("PricePerUnit", typeof(decimal));
    
            var taxPercentageperUnitParameter = taxPercentageperUnit.HasValue ?
                new ObjectParameter("TaxPercentageperUnit", taxPercentageperUnit) :
                new ObjectParameter("TaxPercentageperUnit", typeof(decimal));
    
            var taxAmountPerUnitParameter = taxAmountPerUnit.HasValue ?
                new ObjectParameter("TaxAmountPerUnit", taxAmountPerUnit) :
                new ObjectParameter("TaxAmountPerUnit", typeof(decimal));
    
            var discountAmountParameter = discountAmount.HasValue ?
                new ObjectParameter("DiscountAmount", discountAmount) :
                new ObjectParameter("DiscountAmount", typeof(decimal));
    
            var totalAmountPerUnitParameter = totalAmountPerUnit.HasValue ?
                new ObjectParameter("TotalAmountPerUnit", totalAmountPerUnit) :
                new ObjectParameter("TotalAmountPerUnit", typeof(decimal));
    
            var lineTotalAmountParameter = lineTotalAmount.HasValue ?
                new ObjectParameter("LineTotalAmount", lineTotalAmount) :
                new ObjectParameter("LineTotalAmount", typeof(decimal));
    
            var pILItemLoanIDParameter = pILItemLoanID.HasValue ?
                new ObjectParameter("PILItemLoanID", pILItemLoanID) :
                new ObjectParameter("PILItemLoanID", typeof(int));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var loanNumberParameter = loanNumber != null ?
                new ObjectParameter("LoanNumber", loanNumber) :
                new ObjectParameter("LoanNumber", typeof(string));
    
            var loanAmountParameter = loanAmount.HasValue ?
                new ObjectParameter("LoanAmount", loanAmount) :
                new ObjectParameter("LoanAmount", typeof(decimal));
    
            var loanPeriodParameter = loanPeriod.HasValue ?
                new ObjectParameter("LoanPeriod", loanPeriod) :
                new ObjectParameter("LoanPeriod", typeof(int));
    
            var totalNoOfEMIsParameter = totalNoOfEMIs.HasValue ?
                new ObjectParameter("TotalNoOfEMIs", totalNoOfEMIs) :
                new ObjectParameter("TotalNoOfEMIs", typeof(int));
    
            var initialDownPaidAmountParameter = initialDownPaidAmount.HasValue ?
                new ObjectParameter("InitialDownPaidAmount", initialDownPaidAmount) :
                new ObjectParameter("InitialDownPaidAmount", typeof(decimal));
    
            var loanStartDateParameter = loanStartDate.HasValue ?
                new ObjectParameter("LoanStartDate", loanStartDate) :
                new ObjectParameter("LoanStartDate", typeof(System.DateTime));
    
            var nonstockItemIdParameter = nonstockItemId.HasValue ?
                new ObjectParameter("NonstockItemId", nonstockItemId) :
                new ObjectParameter("NonstockItemId", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SavePurchaseInvoiceLineItemDetails", purchaseInvoiceLineIDParameter, purchaseInvoiceIdParameter, glAccountItemIDParameter, materialIDParameter, iSLoanApplicableParameter, lineNumberParameter, lineItemDescriptionParameter, purchaseQunitityParameter, pricePerUnitParameter, taxPercentageperUnitParameter, taxAmountPerUnitParameter, discountAmountParameter, totalAmountPerUnitParameter, lineTotalAmountParameter, pILItemLoanIDParameter, bankNameParameter, loanNumberParameter, loanAmountParameter, loanPeriodParameter, totalNoOfEMIsParameter, initialDownPaidAmountParameter, loanStartDateParameter, nonstockItemIdParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetPurchaseInvoicelineitemByLineId_Result> SP_DGC_GetPurchaseInvoicelineitemByLineId(Nullable<int> purchaseInvoiceLineID)
        {
            var purchaseInvoiceLineIDParameter = purchaseInvoiceLineID.HasValue ?
                new ObjectParameter("PurchaseInvoiceLineID", purchaseInvoiceLineID) :
                new ObjectParameter("PurchaseInvoiceLineID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetPurchaseInvoicelineitemByLineId_Result>("SP_DGC_GetPurchaseInvoicelineitemByLineId", purchaseInvoiceLineIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllPurchaseInvoiceLineItemDetails_Result> SP_DGC_GetAllPurchaseInvoiceLineItemDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, Nullable<long> purchaseInvoiceID, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var purchaseInvoiceIDParameter = purchaseInvoiceID.HasValue ?
                new ObjectParameter("PurchaseInvoiceID", purchaseInvoiceID) :
                new ObjectParameter("PurchaseInvoiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllPurchaseInvoiceLineItemDetails_Result>("SP_DGC_GetAllPurchaseInvoiceLineItemDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, purchaseInvoiceIDParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUtilityInvoiceLineItemDetails_Result> SP_DGC_GetAllUtilityInvoiceLineItemDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, Nullable<long> utilityInvoiceID, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var utilityInvoiceIDParameter = utilityInvoiceID.HasValue ?
                new ObjectParameter("UtilityInvoiceID", utilityInvoiceID) :
                new ObjectParameter("UtilityInvoiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUtilityInvoiceLineItemDetails_Result>("SP_DGC_GetAllUtilityInvoiceLineItemDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, utilityInvoiceIDParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveCondoMaterials_Result> SP_DGC_GetActiveCondoMaterials()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveCondoMaterials_Result>("SP_DGC_GetActiveCondoMaterials");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllGlAccountItems_Result> SP_DGC_GetAllGlAccountItems(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, Nullable<int> accountId, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllGlAccountItems_Result>("SP_DGC_GetAllGlAccountItems", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, accountIdParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllGlGroup_Result> SP_DGC_GetAllGlGroup(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllGlGroup_Result>("SP_DGC_GetAllGlGroup", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveGlAccountItems(Nullable<int> accountItemId, Nullable<int> typeOfAccount, string itemName, Nullable<int> accountItemNo, string itemCode, Nullable<System.DateTime> startDate, string createdBy, ObjectParameter errorCode)
        {
            var accountItemIdParameter = accountItemId.HasValue ?
                new ObjectParameter("AccountItemId", accountItemId) :
                new ObjectParameter("AccountItemId", typeof(int));
    
            var typeOfAccountParameter = typeOfAccount.HasValue ?
                new ObjectParameter("TypeOfAccount", typeOfAccount) :
                new ObjectParameter("TypeOfAccount", typeof(int));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var accountItemNoParameter = accountItemNo.HasValue ?
                new ObjectParameter("AccountItemNo", accountItemNo) :
                new ObjectParameter("AccountItemNo", typeof(int));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveGlAccountItems", accountItemIdParameter, typeOfAccountParameter, itemNameParameter, accountItemNoParameter, itemCodeParameter, startDateParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveGlGroupDetails(Nullable<int> accountId, string accountName, string accountDescription, string accountCode, string accountDisplayName, Nullable<int> startingAccountNumber, Nullable<int> endingAccountNumber, string prefix, string subscriptionId, string crOrDb, string createdBy, ObjectParameter errorCode)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var accountDescriptionParameter = accountDescription != null ?
                new ObjectParameter("AccountDescription", accountDescription) :
                new ObjectParameter("AccountDescription", typeof(string));
    
            var accountCodeParameter = accountCode != null ?
                new ObjectParameter("AccountCode", accountCode) :
                new ObjectParameter("AccountCode", typeof(string));
    
            var accountDisplayNameParameter = accountDisplayName != null ?
                new ObjectParameter("AccountDisplayName", accountDisplayName) :
                new ObjectParameter("AccountDisplayName", typeof(string));
    
            var startingAccountNumberParameter = startingAccountNumber.HasValue ?
                new ObjectParameter("StartingAccountNumber", startingAccountNumber) :
                new ObjectParameter("StartingAccountNumber", typeof(int));
    
            var endingAccountNumberParameter = endingAccountNumber.HasValue ?
                new ObjectParameter("EndingAccountNumber", endingAccountNumber) :
                new ObjectParameter("EndingAccountNumber", typeof(int));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var subscriptionIdParameter = subscriptionId != null ?
                new ObjectParameter("SubscriptionId", subscriptionId) :
                new ObjectParameter("SubscriptionId", typeof(string));
    
            var crOrDbParameter = crOrDb != null ?
                new ObjectParameter("CrOrDb", crOrDb) :
                new ObjectParameter("CrOrDb", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveGlGroupDetails", accountIdParameter, accountNameParameter, accountDescriptionParameter, accountCodeParameter, accountDisplayNameParameter, startingAccountNumberParameter, endingAccountNumberParameter, prefixParameter, subscriptionIdParameter, crOrDbParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_UnitCumilativeInvoice_PaymentByBill(Nullable<int> unitId, string billPaymentInfo, string isFullPaid, Nullable<decimal> paidAmount, string comments, string paymentMode, string bankName, string chequeNumber, string additionalReferencePath, string paymentReciptPath, Nullable<long> paidByUserId, string paidBy, Nullable<long> recievedByUserId, Nullable<System.DateTime> chequeDate, Nullable<System.DateTime> actualPaymentDate, string recievedBy, Nullable<int> managementAccountId, ObjectParameter errorCode)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var billPaymentInfoParameter = billPaymentInfo != null ?
                new ObjectParameter("BillPaymentInfo", billPaymentInfo) :
                new ObjectParameter("BillPaymentInfo", typeof(string));
    
            var isFullPaidParameter = isFullPaid != null ?
                new ObjectParameter("IsFullPaid", isFullPaid) :
                new ObjectParameter("IsFullPaid", typeof(string));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(decimal));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var chequeNumberParameter = chequeNumber != null ?
                new ObjectParameter("ChequeNumber", chequeNumber) :
                new ObjectParameter("ChequeNumber", typeof(string));
    
            var additionalReferencePathParameter = additionalReferencePath != null ?
                new ObjectParameter("AdditionalReferencePath", additionalReferencePath) :
                new ObjectParameter("AdditionalReferencePath", typeof(string));
    
            var paymentReciptPathParameter = paymentReciptPath != null ?
                new ObjectParameter("PaymentReciptPath", paymentReciptPath) :
                new ObjectParameter("PaymentReciptPath", typeof(string));
    
            var paidByUserIdParameter = paidByUserId.HasValue ?
                new ObjectParameter("PaidByUserId", paidByUserId) :
                new ObjectParameter("PaidByUserId", typeof(long));
    
            var paidByParameter = paidBy != null ?
                new ObjectParameter("PaidBy", paidBy) :
                new ObjectParameter("PaidBy", typeof(string));
    
            var recievedByUserIdParameter = recievedByUserId.HasValue ?
                new ObjectParameter("RecievedByUserId", recievedByUserId) :
                new ObjectParameter("RecievedByUserId", typeof(long));
    
            var chequeDateParameter = chequeDate.HasValue ?
                new ObjectParameter("ChequeDate", chequeDate) :
                new ObjectParameter("ChequeDate", typeof(System.DateTime));
    
            var actualPaymentDateParameter = actualPaymentDate.HasValue ?
                new ObjectParameter("ActualPaymentDate", actualPaymentDate) :
                new ObjectParameter("ActualPaymentDate", typeof(System.DateTime));
    
            var recievedByParameter = recievedBy != null ?
                new ObjectParameter("RecievedBy", recievedBy) :
                new ObjectParameter("RecievedBy", typeof(string));
    
            var managementAccountIdParameter = managementAccountId.HasValue ?
                new ObjectParameter("ManagementAccountId", managementAccountId) :
                new ObjectParameter("ManagementAccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_UnitCumilativeInvoice_PaymentByBill", unitIdParameter, billPaymentInfoParameter, isFullPaidParameter, paidAmountParameter, commentsParameter, paymentModeParameter, bankNameParameter, chequeNumberParameter, additionalReferencePathParameter, paymentReciptPathParameter, paidByUserIdParameter, paidByParameter, recievedByUserIdParameter, chequeDateParameter, actualPaymentDateParameter, recievedByParameter, managementAccountIdParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetUNitBillSummeryByUnitID_Result> SP_DGC_GetUNitBillSummeryByUnitID(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUNitBillSummeryByUnitID_Result>("SP_DGC_GetUNitBillSummeryByUnitID", unitIdParameter);
        }
    
        public virtual int SP_DGC_UnitCumilativeInvoice_PaymentByBalance(Nullable<int> unitId, string isFullPaid, Nullable<decimal> paidAmount, string comments, string paymentMode, string bankName, string chequeNumber, string additionalReferencePath, string paymentReciptPath, Nullable<long> paidByUserId, string paidBy, Nullable<long> recievedByUserId, Nullable<System.DateTime> chequeDate, Nullable<System.DateTime> actualPaymentDate, string recievedBy, Nullable<int> managementAccountId, ObjectParameter errorCode)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var isFullPaidParameter = isFullPaid != null ?
                new ObjectParameter("IsFullPaid", isFullPaid) :
                new ObjectParameter("IsFullPaid", typeof(string));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(decimal));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var chequeNumberParameter = chequeNumber != null ?
                new ObjectParameter("ChequeNumber", chequeNumber) :
                new ObjectParameter("ChequeNumber", typeof(string));
    
            var additionalReferencePathParameter = additionalReferencePath != null ?
                new ObjectParameter("AdditionalReferencePath", additionalReferencePath) :
                new ObjectParameter("AdditionalReferencePath", typeof(string));
    
            var paymentReciptPathParameter = paymentReciptPath != null ?
                new ObjectParameter("PaymentReciptPath", paymentReciptPath) :
                new ObjectParameter("PaymentReciptPath", typeof(string));
    
            var paidByUserIdParameter = paidByUserId.HasValue ?
                new ObjectParameter("PaidByUserId", paidByUserId) :
                new ObjectParameter("PaidByUserId", typeof(long));
    
            var paidByParameter = paidBy != null ?
                new ObjectParameter("PaidBy", paidBy) :
                new ObjectParameter("PaidBy", typeof(string));
    
            var recievedByUserIdParameter = recievedByUserId.HasValue ?
                new ObjectParameter("RecievedByUserId", recievedByUserId) :
                new ObjectParameter("RecievedByUserId", typeof(long));
    
            var chequeDateParameter = chequeDate.HasValue ?
                new ObjectParameter("ChequeDate", chequeDate) :
                new ObjectParameter("ChequeDate", typeof(System.DateTime));
    
            var actualPaymentDateParameter = actualPaymentDate.HasValue ?
                new ObjectParameter("ActualPaymentDate", actualPaymentDate) :
                new ObjectParameter("ActualPaymentDate", typeof(System.DateTime));
    
            var recievedByParameter = recievedBy != null ?
                new ObjectParameter("RecievedBy", recievedBy) :
                new ObjectParameter("RecievedBy", typeof(string));
    
            var managementAccountIdParameter = managementAccountId.HasValue ?
                new ObjectParameter("ManagementAccountId", managementAccountId) :
                new ObjectParameter("ManagementAccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_UnitCumilativeInvoice_PaymentByBalance", unitIdParameter, isFullPaidParameter, paidAmountParameter, commentsParameter, paymentModeParameter, bankNameParameter, chequeNumberParameter, additionalReferencePathParameter, paymentReciptPathParameter, paidByUserIdParameter, paidByParameter, recievedByUserIdParameter, chequeDateParameter, actualPaymentDateParameter, recievedByParameter, managementAccountIdParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveMinutesOfMeeting(Nullable<int> minutesOfMeetingId, Nullable<System.DateTime> meetingDate, string meetingVenue, string uploadDocument, string meetingsubject, string attendies, string importantNotes, string createdBy, ObjectParameter errorCode)
        {
            var minutesOfMeetingIdParameter = minutesOfMeetingId.HasValue ?
                new ObjectParameter("MinutesOfMeetingId", minutesOfMeetingId) :
                new ObjectParameter("MinutesOfMeetingId", typeof(int));
    
            var meetingDateParameter = meetingDate.HasValue ?
                new ObjectParameter("MeetingDate", meetingDate) :
                new ObjectParameter("MeetingDate", typeof(System.DateTime));
    
            var meetingVenueParameter = meetingVenue != null ?
                new ObjectParameter("MeetingVenue", meetingVenue) :
                new ObjectParameter("MeetingVenue", typeof(string));
    
            var uploadDocumentParameter = uploadDocument != null ?
                new ObjectParameter("UploadDocument", uploadDocument) :
                new ObjectParameter("UploadDocument", typeof(string));
    
            var meetingsubjectParameter = meetingsubject != null ?
                new ObjectParameter("Meetingsubject", meetingsubject) :
                new ObjectParameter("Meetingsubject", typeof(string));
    
            var attendiesParameter = attendies != null ?
                new ObjectParameter("Attendies", attendies) :
                new ObjectParameter("Attendies", typeof(string));
    
            var importantNotesParameter = importantNotes != null ?
                new ObjectParameter("ImportantNotes", importantNotes) :
                new ObjectParameter("ImportantNotes", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveMinutesOfMeeting", minutesOfMeetingIdParameter, meetingDateParameter, meetingVenueParameter, uploadDocumentParameter, meetingsubjectParameter, attendiesParameter, importantNotesParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveUtilityInvoiceLineItemDetails(Nullable<int> utilityInvoiceLineID, Nullable<long> utilityInvoiceId, Nullable<int> glAccountItemID, string lineNumber, string lineItemDescription, Nullable<decimal> lineTotalAmount, Nullable<int> nonstockItemId, string createdBy, ObjectParameter errorCode)
        {
            var utilityInvoiceLineIDParameter = utilityInvoiceLineID.HasValue ?
                new ObjectParameter("UtilityInvoiceLineID", utilityInvoiceLineID) :
                new ObjectParameter("UtilityInvoiceLineID", typeof(int));
    
            var utilityInvoiceIdParameter = utilityInvoiceId.HasValue ?
                new ObjectParameter("UtilityInvoiceId", utilityInvoiceId) :
                new ObjectParameter("UtilityInvoiceId", typeof(long));
    
            var glAccountItemIDParameter = glAccountItemID.HasValue ?
                new ObjectParameter("GlAccountItemID", glAccountItemID) :
                new ObjectParameter("GlAccountItemID", typeof(int));
    
            var lineNumberParameter = lineNumber != null ?
                new ObjectParameter("LineNumber", lineNumber) :
                new ObjectParameter("LineNumber", typeof(string));
    
            var lineItemDescriptionParameter = lineItemDescription != null ?
                new ObjectParameter("LineItemDescription", lineItemDescription) :
                new ObjectParameter("LineItemDescription", typeof(string));
    
            var lineTotalAmountParameter = lineTotalAmount.HasValue ?
                new ObjectParameter("LineTotalAmount", lineTotalAmount) :
                new ObjectParameter("LineTotalAmount", typeof(decimal));
    
            var nonstockItemIdParameter = nonstockItemId.HasValue ?
                new ObjectParameter("NonstockItemId", nonstockItemId) :
                new ObjectParameter("NonstockItemId", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUtilityInvoiceLineItemDetails", utilityInvoiceLineIDParameter, utilityInvoiceIdParameter, glAccountItemIDParameter, lineNumberParameter, lineItemDescriptionParameter, lineTotalAmountParameter, nonstockItemIdParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_ApprovalRFQQuotes(Nullable<long> rFQuotesID, Nullable<int> minutesOfMeetingId, string approvedBy, string comment, ObjectParameter errorCode)
        {
            var rFQuotesIDParameter = rFQuotesID.HasValue ?
                new ObjectParameter("RFQuotesID", rFQuotesID) :
                new ObjectParameter("RFQuotesID", typeof(long));
    
            var minutesOfMeetingIdParameter = minutesOfMeetingId.HasValue ?
                new ObjectParameter("MinutesOfMeetingId", minutesOfMeetingId) :
                new ObjectParameter("MinutesOfMeetingId", typeof(int));
    
            var approvedByParameter = approvedBy != null ?
                new ObjectParameter("ApprovedBy", approvedBy) :
                new ObjectParameter("ApprovedBy", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_ApprovalRFQQuotes", rFQuotesIDParameter, minutesOfMeetingIdParameter, approvedByParameter, commentParameter, errorCode);
        }
    
        public virtual int SP_DGC_CancelRFQDetails(Nullable<long> rFQID, string cancelledBy, ObjectParameter errorCode, Nullable<int> previousStatusId)
        {
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(long));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            var previousStatusIdParameter = previousStatusId.HasValue ?
                new ObjectParameter("PreviousStatusId", previousStatusId) :
                new ObjectParameter("PreviousStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelRFQDetails", rFQIDParameter, cancelledByParameter, errorCode, previousStatusIdParameter);
        }
    
        public virtual int SP_DGC_CancelRFQQuotes(Nullable<long> rFQuotesID, string cancelledBy, string comment)
        {
            var rFQuotesIDParameter = rFQuotesID.HasValue ?
                new ObjectParameter("RFQuotesID", rFQuotesID) :
                new ObjectParameter("RFQuotesID", typeof(long));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelRFQQuotes", rFQuotesIDParameter, cancelledByParameter, commentParameter);
        }
    
        public virtual int SP_DGC_DeleteRFQLineItem(Nullable<int> rFQItemID)
        {
            var rFQItemIDParameter = rFQItemID.HasValue ?
                new ObjectParameter("RFQItemID", rFQItemID) :
                new ObjectParameter("RFQItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteRFQLineItem", rFQItemIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveMinutesOfMeetingDates_Result> SP_DGC_GetActiveMinutesOfMeetingDates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveMinutesOfMeetingDates_Result>("SP_DGC_GetActiveMinutesOfMeetingDates");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllRFQItemsDetails_Result> SP_DGC_GetAllRFQItemsDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> rFQID)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllRFQItemsDetails_Result>("SP_DGC_GetAllRFQItemsDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, rFQIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetRFQDetailsbyId_Result> SP_DGC_GetRFQDetailsbyId(Nullable<int> rFQID)
        {
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetRFQDetailsbyId_Result>("SP_DGC_GetRFQDetailsbyId", rFQIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetRFQItemDetailsbyItemId_Result> SP_DGC_GetRFQItemDetailsbyItemId(Nullable<long> rFQItemID)
        {
            var rFQItemIDParameter = rFQItemID.HasValue ?
                new ObjectParameter("RFQItemID", rFQItemID) :
                new ObjectParameter("RFQItemID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetRFQItemDetailsbyItemId_Result>("SP_DGC_GetRFQItemDetailsbyItemId", rFQItemIDParameter);
        }
    
        public virtual int SP_DGC_SaveRequestForQuotationItemDetails(Nullable<long> rFQItemID, Nullable<int> rFQID, string itemDetails, Nullable<decimal> estimateCost, string createdBy, ObjectParameter errorCode)
        {
            var rFQItemIDParameter = rFQItemID.HasValue ?
                new ObjectParameter("RFQItemID", rFQItemID) :
                new ObjectParameter("RFQItemID", typeof(long));
    
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(int));
    
            var itemDetailsParameter = itemDetails != null ?
                new ObjectParameter("ItemDetails", itemDetails) :
                new ObjectParameter("ItemDetails", typeof(string));
    
            var estimateCostParameter = estimateCost.HasValue ?
                new ObjectParameter("EstimateCost", estimateCost) :
                new ObjectParameter("EstimateCost", typeof(decimal));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveRequestForQuotationItemDetails", rFQItemIDParameter, rFQIDParameter, itemDetailsParameter, estimateCostParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveReviseRFQuotesDetails(Nullable<long> rFQReviseId, Nullable<long> rFQuotesID, Nullable<int> rFQID, Nullable<decimal> quotesPrice, Nullable<System.DateTime> reviseDate, string comments, string uploadedReferenceFile, string createdBy, ObjectParameter errorCode)
        {
            var rFQReviseIdParameter = rFQReviseId.HasValue ?
                new ObjectParameter("RFQReviseId", rFQReviseId) :
                new ObjectParameter("RFQReviseId", typeof(long));
    
            var rFQuotesIDParameter = rFQuotesID.HasValue ?
                new ObjectParameter("RFQuotesID", rFQuotesID) :
                new ObjectParameter("RFQuotesID", typeof(long));
    
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(int));
    
            var quotesPriceParameter = quotesPrice.HasValue ?
                new ObjectParameter("QuotesPrice", quotesPrice) :
                new ObjectParameter("QuotesPrice", typeof(decimal));
    
            var reviseDateParameter = reviseDate.HasValue ?
                new ObjectParameter("ReviseDate", reviseDate) :
                new ObjectParameter("ReviseDate", typeof(System.DateTime));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var uploadedReferenceFileParameter = uploadedReferenceFile != null ?
                new ObjectParameter("UploadedReferenceFile", uploadedReferenceFile) :
                new ObjectParameter("UploadedReferenceFile", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveReviseRFQuotesDetails", rFQReviseIdParameter, rFQuotesIDParameter, rFQIDParameter, quotesPriceParameter, reviseDateParameter, commentsParameter, uploadedReferenceFileParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveRFQDetails(Nullable<int> rFQID, Nullable<int> minutesOfMeetingId, string rFQNumber, string rFQReference, string rFQSubject, string orderDescription, string rFQNotes, Nullable<int> statusID, string createdBy, ObjectParameter errorCode)
        {
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(int));
    
            var minutesOfMeetingIdParameter = minutesOfMeetingId.HasValue ?
                new ObjectParameter("MinutesOfMeetingId", minutesOfMeetingId) :
                new ObjectParameter("MinutesOfMeetingId", typeof(int));
    
            var rFQNumberParameter = rFQNumber != null ?
                new ObjectParameter("RFQNumber", rFQNumber) :
                new ObjectParameter("RFQNumber", typeof(string));
    
            var rFQReferenceParameter = rFQReference != null ?
                new ObjectParameter("RFQReference", rFQReference) :
                new ObjectParameter("RFQReference", typeof(string));
    
            var rFQSubjectParameter = rFQSubject != null ?
                new ObjectParameter("RFQSubject", rFQSubject) :
                new ObjectParameter("RFQSubject", typeof(string));
    
            var orderDescriptionParameter = orderDescription != null ?
                new ObjectParameter("OrderDescription", orderDescription) :
                new ObjectParameter("OrderDescription", typeof(string));
    
            var rFQNotesParameter = rFQNotes != null ?
                new ObjectParameter("RFQNotes", rFQNotes) :
                new ObjectParameter("RFQNotes", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveRFQDetails", rFQIDParameter, minutesOfMeetingIdParameter, rFQNumberParameter, rFQReferenceParameter, rFQSubjectParameter, orderDescriptionParameter, rFQNotesParameter, statusIDParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveRFQStatusChange(Nullable<int> rFQID, Nullable<int> statusId, string updatedBy)
        {
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveRFQStatusChange", rFQIDParameter, statusIdParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllWOrkOrderItemsDetails_Result> SP_DGC_GetAllWOrkOrderItemsDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> workOrderID)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllWOrkOrderItemsDetails_Result>("SP_DGC_GetAllWOrkOrderItemsDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, workOrderIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetWorkOrdersItemDetailsbyItemId_Result> SP_DGC_GetWorkOrdersItemDetailsbyItemId(Nullable<long> workOrderItemID)
        {
            var workOrderItemIDParameter = workOrderItemID.HasValue ?
                new ObjectParameter("WorkOrderItemID", workOrderItemID) :
                new ObjectParameter("WorkOrderItemID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetWorkOrdersItemDetailsbyItemId_Result>("SP_DGC_GetWorkOrdersItemDetailsbyItemId", workOrderItemIDParameter);
        }
    
        public virtual int SP_DGC_SaveWorkOrdersDetails(Nullable<int> workOrderID, Nullable<long> rFQApprovedQuotesId, Nullable<int> rFQID, Nullable<int> workOrderCategory, string wPONumber, string workOrderReference, string workOrderSubject, string orderDescription, Nullable<decimal> workOrderAmount, Nullable<int> statusID, Nullable<System.DateTime> workOrderEntryDate, Nullable<System.DateTime> workOrderReleaseDate, string createdBy, ObjectParameter errorCode)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            var rFQApprovedQuotesIdParameter = rFQApprovedQuotesId.HasValue ?
                new ObjectParameter("RFQApprovedQuotesId", rFQApprovedQuotesId) :
                new ObjectParameter("RFQApprovedQuotesId", typeof(long));
    
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(int));
    
            var workOrderCategoryParameter = workOrderCategory.HasValue ?
                new ObjectParameter("WorkOrderCategory", workOrderCategory) :
                new ObjectParameter("WorkOrderCategory", typeof(int));
    
            var wPONumberParameter = wPONumber != null ?
                new ObjectParameter("WPONumber", wPONumber) :
                new ObjectParameter("WPONumber", typeof(string));
    
            var workOrderReferenceParameter = workOrderReference != null ?
                new ObjectParameter("WorkOrderReference", workOrderReference) :
                new ObjectParameter("WorkOrderReference", typeof(string));
    
            var workOrderSubjectParameter = workOrderSubject != null ?
                new ObjectParameter("WorkOrderSubject", workOrderSubject) :
                new ObjectParameter("WorkOrderSubject", typeof(string));
    
            var orderDescriptionParameter = orderDescription != null ?
                new ObjectParameter("OrderDescription", orderDescription) :
                new ObjectParameter("OrderDescription", typeof(string));
    
            var workOrderAmountParameter = workOrderAmount.HasValue ?
                new ObjectParameter("WorkOrderAmount", workOrderAmount) :
                new ObjectParameter("WorkOrderAmount", typeof(decimal));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var workOrderEntryDateParameter = workOrderEntryDate.HasValue ?
                new ObjectParameter("WorkOrderEntryDate", workOrderEntryDate) :
                new ObjectParameter("WorkOrderEntryDate", typeof(System.DateTime));
    
            var workOrderReleaseDateParameter = workOrderReleaseDate.HasValue ?
                new ObjectParameter("WorkOrderReleaseDate", workOrderReleaseDate) :
                new ObjectParameter("WorkOrderReleaseDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveWorkOrdersDetails", workOrderIDParameter, rFQApprovedQuotesIdParameter, rFQIDParameter, workOrderCategoryParameter, wPONumberParameter, workOrderReferenceParameter, workOrderSubjectParameter, orderDescriptionParameter, workOrderAmountParameter, statusIDParameter, workOrderEntryDateParameter, workOrderReleaseDateParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveWorkOrdersItemDetails(Nullable<long> workOrderItemID, Nullable<int> workOrderID, string lineDescription, Nullable<decimal> lineAmount, string createdBy, ObjectParameter errorCode)
        {
            var workOrderItemIDParameter = workOrderItemID.HasValue ?
                new ObjectParameter("WorkOrderItemID", workOrderItemID) :
                new ObjectParameter("WorkOrderItemID", typeof(long));
    
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            var lineDescriptionParameter = lineDescription != null ?
                new ObjectParameter("LineDescription", lineDescription) :
                new ObjectParameter("LineDescription", typeof(string));
    
            var lineAmountParameter = lineAmount.HasValue ?
                new ObjectParameter("LineAmount", lineAmount) :
                new ObjectParameter("LineAmount", typeof(decimal));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveWorkOrdersItemDetails", workOrderItemIDParameter, workOrderIDParameter, lineDescriptionParameter, lineAmountParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_CancelWorkOrdersDetails(Nullable<long> workOrderID, string cancelledBy, ObjectParameter errorCode, Nullable<int> previousStatusId)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(long));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            var previousStatusIdParameter = previousStatusId.HasValue ?
                new ObjectParameter("PreviousStatusId", previousStatusId) :
                new ObjectParameter("PreviousStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelWorkOrdersDetails", workOrderIDParameter, cancelledByParameter, errorCode, previousStatusIdParameter);
        }
    
        public virtual int SP_DGC_DeleteWorkOrdersLineItem(Nullable<int> workOrderItemID)
        {
            var workOrderItemIDParameter = workOrderItemID.HasValue ?
                new ObjectParameter("WorkOrderItemID", workOrderItemID) :
                new ObjectParameter("WorkOrderItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteWorkOrdersLineItem", workOrderItemIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllWOrkOrders_Result> SP_DGC_GetAllWOrkOrders(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllWOrkOrders_Result>("SP_DGC_GetAllWOrkOrders", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveApprovalRFQQuotes_Result> SP_DGC_GetActiveApprovalRFQQuotes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveApprovalRFQQuotes_Result>("SP_DGC_GetActiveApprovalRFQQuotes");
        }
    
        public virtual int SP_DGC_GetVendorInVoiceByVendorInoiceId(Nullable<long> vendorInvoiceId)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_GetVendorInVoiceByVendorInoiceId", vendorInvoiceIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVendorInvoiceDetails_Result> SP_DGC_GetAllVendorInvoiceDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVendorInvoiceDetails_Result>("SP_DGC_GetAllVendorInvoiceDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetVendorInVoiceByVInoiceId_Result> SP_DGC_GetVendorInVoiceByVInoiceId(Nullable<long> vendorInvoiceId)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVendorInVoiceByVInoiceId_Result>("SP_DGC_GetVendorInVoiceByVInoiceId", vendorInvoiceIdParameter);
        }
    
        public virtual int SP_DGC_SaveVendorInvoiceDetails(Nullable<long> vendorInvoiceId, Nullable<long> vendorRegId, string invoiceNumber, Nullable<System.DateTime> invoiceDate, Nullable<System.DateTime> invoiceReceivedDate, Nullable<decimal> invoiceAmount, Nullable<int> workOrderID, string companyInvoiceRefferenceNum, string statusid, string createdBy, string vendorInvoiceFilePath, ObjectParameter errorCode)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(long));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var invoiceDateParameter = invoiceDate.HasValue ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(System.DateTime));
    
            var invoiceReceivedDateParameter = invoiceReceivedDate.HasValue ?
                new ObjectParameter("InvoiceReceivedDate", invoiceReceivedDate) :
                new ObjectParameter("InvoiceReceivedDate", typeof(System.DateTime));
    
            var invoiceAmountParameter = invoiceAmount.HasValue ?
                new ObjectParameter("InvoiceAmount", invoiceAmount) :
                new ObjectParameter("InvoiceAmount", typeof(decimal));
    
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            var companyInvoiceRefferenceNumParameter = companyInvoiceRefferenceNum != null ?
                new ObjectParameter("CompanyInvoiceRefferenceNum", companyInvoiceRefferenceNum) :
                new ObjectParameter("CompanyInvoiceRefferenceNum", typeof(string));
    
            var statusidParameter = statusid != null ?
                new ObjectParameter("Statusid", statusid) :
                new ObjectParameter("Statusid", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var vendorInvoiceFilePathParameter = vendorInvoiceFilePath != null ?
                new ObjectParameter("VendorInvoiceFilePath", vendorInvoiceFilePath) :
                new ObjectParameter("VendorInvoiceFilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVendorInvoiceDetails", vendorInvoiceIdParameter, vendorRegIdParameter, invoiceNumberParameter, invoiceDateParameter, invoiceReceivedDateParameter, invoiceAmountParameter, workOrderIDParameter, companyInvoiceRefferenceNumParameter, statusidParameter, createdByParameter, vendorInvoiceFilePathParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetUtilityInvoicelineitemByLineId_Result> SP_DGC_GetUtilityInvoicelineitemByLineId(Nullable<int> utilityInvoiceLineID)
        {
            var utilityInvoiceLineIDParameter = utilityInvoiceLineID.HasValue ?
                new ObjectParameter("UtilityInvoiceLineID", utilityInvoiceLineID) :
                new ObjectParameter("UtilityInvoiceLineID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUtilityInvoicelineitemByLineId_Result>("SP_DGC_GetUtilityInvoicelineitemByLineId", utilityInvoiceLineIDParameter);
        }
    
        public virtual int SP_DGC_ApprovalVendorInvoice(Nullable<long> vendorInvoiceId, string approvedBy, string invoiceComments, ObjectParameter errorCode)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            var approvedByParameter = approvedBy != null ?
                new ObjectParameter("ApprovedBy", approvedBy) :
                new ObjectParameter("ApprovedBy", typeof(string));
    
            var invoiceCommentsParameter = invoiceComments != null ?
                new ObjectParameter("InvoiceComments", invoiceComments) :
                new ObjectParameter("InvoiceComments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_ApprovalVendorInvoice", vendorInvoiceIdParameter, approvedByParameter, invoiceCommentsParameter, errorCode);
        }
    
        public virtual int SP_DGC_RejectVendorInvoice(Nullable<long> vendorInvoiceId, string rejectedBy, string invoiceComments, ObjectParameter errorCode)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            var rejectedByParameter = rejectedBy != null ?
                new ObjectParameter("RejectedBy", rejectedBy) :
                new ObjectParameter("RejectedBy", typeof(string));
    
            var invoiceCommentsParameter = invoiceComments != null ?
                new ObjectParameter("InvoiceComments", invoiceComments) :
                new ObjectParameter("InvoiceComments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_RejectVendorInvoice", vendorInvoiceIdParameter, rejectedByParameter, invoiceCommentsParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVendorInvoiceLineItemDetails_Result> SP_DGC_GetAllVendorInvoiceLineItemDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, Nullable<long> vendorInvoiceID, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var vendorInvoiceIDParameter = vendorInvoiceID.HasValue ?
                new ObjectParameter("VendorInvoiceID", vendorInvoiceID) :
                new ObjectParameter("VendorInvoiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVendorInvoiceLineItemDetails_Result>("SP_DGC_GetAllVendorInvoiceLineItemDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, vendorInvoiceIDParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetVendorInvoicelineitemByLineId_Result> SP_DGC_GetVendorInvoicelineitemByLineId(Nullable<int> vendorInvoiceLineID)
        {
            var vendorInvoiceLineIDParameter = vendorInvoiceLineID.HasValue ?
                new ObjectParameter("VendorInvoiceLineID", vendorInvoiceLineID) :
                new ObjectParameter("VendorInvoiceLineID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVendorInvoicelineitemByLineId_Result>("SP_DGC_GetVendorInvoicelineitemByLineId", vendorInvoiceLineIDParameter);
        }
    
        public virtual int SP_DGC_SaveVendorInvoiceLineItemDetails(Nullable<int> vendorInvoiceLineID, Nullable<long> vendorInvoiceId, Nullable<int> glAccountItemID, string lineNumber, string lineItemDescription, Nullable<int> purchaseQunitity, Nullable<decimal> pricePerUnit, Nullable<decimal> taxPercentageperUnit, Nullable<decimal> taxAmountPerUnit, Nullable<decimal> discountAmount, Nullable<decimal> totalAmountPerUnit, Nullable<decimal> lineTotalAmount, Nullable<int> nonstockItemId, Nullable<int> lineItemCategoryConfigKey, Nullable<int> unitOfMeasureId, string createdBy, ObjectParameter errorCode)
        {
            var vendorInvoiceLineIDParameter = vendorInvoiceLineID.HasValue ?
                new ObjectParameter("VendorInvoiceLineID", vendorInvoiceLineID) :
                new ObjectParameter("VendorInvoiceLineID", typeof(int));
    
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            var glAccountItemIDParameter = glAccountItemID.HasValue ?
                new ObjectParameter("GlAccountItemID", glAccountItemID) :
                new ObjectParameter("GlAccountItemID", typeof(int));
    
            var lineNumberParameter = lineNumber != null ?
                new ObjectParameter("LineNumber", lineNumber) :
                new ObjectParameter("LineNumber", typeof(string));
    
            var lineItemDescriptionParameter = lineItemDescription != null ?
                new ObjectParameter("LineItemDescription", lineItemDescription) :
                new ObjectParameter("LineItemDescription", typeof(string));
    
            var purchaseQunitityParameter = purchaseQunitity.HasValue ?
                new ObjectParameter("PurchaseQunitity", purchaseQunitity) :
                new ObjectParameter("PurchaseQunitity", typeof(int));
    
            var pricePerUnitParameter = pricePerUnit.HasValue ?
                new ObjectParameter("PricePerUnit", pricePerUnit) :
                new ObjectParameter("PricePerUnit", typeof(decimal));
    
            var taxPercentageperUnitParameter = taxPercentageperUnit.HasValue ?
                new ObjectParameter("TaxPercentageperUnit", taxPercentageperUnit) :
                new ObjectParameter("TaxPercentageperUnit", typeof(decimal));
    
            var taxAmountPerUnitParameter = taxAmountPerUnit.HasValue ?
                new ObjectParameter("TaxAmountPerUnit", taxAmountPerUnit) :
                new ObjectParameter("TaxAmountPerUnit", typeof(decimal));
    
            var discountAmountParameter = discountAmount.HasValue ?
                new ObjectParameter("DiscountAmount", discountAmount) :
                new ObjectParameter("DiscountAmount", typeof(decimal));
    
            var totalAmountPerUnitParameter = totalAmountPerUnit.HasValue ?
                new ObjectParameter("TotalAmountPerUnit", totalAmountPerUnit) :
                new ObjectParameter("TotalAmountPerUnit", typeof(decimal));
    
            var lineTotalAmountParameter = lineTotalAmount.HasValue ?
                new ObjectParameter("LineTotalAmount", lineTotalAmount) :
                new ObjectParameter("LineTotalAmount", typeof(decimal));
    
            var nonstockItemIdParameter = nonstockItemId.HasValue ?
                new ObjectParameter("NonstockItemId", nonstockItemId) :
                new ObjectParameter("NonstockItemId", typeof(int));
    
            var lineItemCategoryConfigKeyParameter = lineItemCategoryConfigKey.HasValue ?
                new ObjectParameter("LineItemCategoryConfigKey", lineItemCategoryConfigKey) :
                new ObjectParameter("LineItemCategoryConfigKey", typeof(int));
    
            var unitOfMeasureIdParameter = unitOfMeasureId.HasValue ?
                new ObjectParameter("UnitOfMeasureId", unitOfMeasureId) :
                new ObjectParameter("UnitOfMeasureId", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVendorInvoiceLineItemDetails", vendorInvoiceLineIDParameter, vendorInvoiceIdParameter, glAccountItemIDParameter, lineNumberParameter, lineItemDescriptionParameter, purchaseQunitityParameter, pricePerUnitParameter, taxPercentageperUnitParameter, taxAmountPerUnitParameter, discountAmountParameter, totalAmountPerUnitParameter, lineTotalAmountParameter, nonstockItemIdParameter, lineItemCategoryConfigKeyParameter, unitOfMeasureIdParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveUnitInvoiceByUnitId_Result> SP_DGC_GetActiveUnitInvoiceByUnitId(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveUnitInvoiceByUnitId_Result>("SP_DGC_GetActiveUnitInvoiceByUnitId", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveVendorInvoiceByVendorID_Result> SP_DGC_GetActiveVendorInvoiceByVendorID(Nullable<long> vendorRegId)
        {
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveVendorInvoiceByVendorID_Result>("SP_DGC_GetActiveVendorInvoiceByVendorID", vendorRegIdParameter);
        }
    
        public virtual int SP_DGC_SaveCondomiumSettings(Nullable<int> condomiumId, string title, string condoDescription, string condoAddress, Nullable<int> noOfBlocks, string logoPath, string backGroundImagePath, Nullable<int> unitDisplayFormatId, string updatedBy, string registrationNo, string telephoneNo, string faxNo, string addressLine1, string addressLine2, string addressLine3, string city, string addressState, string postalCode, ObjectParameter errorCode)
        {
            var condomiumIdParameter = condomiumId.HasValue ?
                new ObjectParameter("CondomiumId", condomiumId) :
                new ObjectParameter("CondomiumId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var condoDescriptionParameter = condoDescription != null ?
                new ObjectParameter("CondoDescription", condoDescription) :
                new ObjectParameter("CondoDescription", typeof(string));
    
            var condoAddressParameter = condoAddress != null ?
                new ObjectParameter("CondoAddress", condoAddress) :
                new ObjectParameter("CondoAddress", typeof(string));
    
            var noOfBlocksParameter = noOfBlocks.HasValue ?
                new ObjectParameter("NoOfBlocks", noOfBlocks) :
                new ObjectParameter("NoOfBlocks", typeof(int));
    
            var logoPathParameter = logoPath != null ?
                new ObjectParameter("LogoPath", logoPath) :
                new ObjectParameter("LogoPath", typeof(string));
    
            var backGroundImagePathParameter = backGroundImagePath != null ?
                new ObjectParameter("BackGroundImagePath", backGroundImagePath) :
                new ObjectParameter("BackGroundImagePath", typeof(string));
    
            var unitDisplayFormatIdParameter = unitDisplayFormatId.HasValue ?
                new ObjectParameter("UnitDisplayFormatId", unitDisplayFormatId) :
                new ObjectParameter("UnitDisplayFormatId", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var registrationNoParameter = registrationNo != null ?
                new ObjectParameter("RegistrationNo", registrationNo) :
                new ObjectParameter("RegistrationNo", typeof(string));
    
            var telephoneNoParameter = telephoneNo != null ?
                new ObjectParameter("TelephoneNo", telephoneNo) :
                new ObjectParameter("TelephoneNo", typeof(string));
    
            var faxNoParameter = faxNo != null ?
                new ObjectParameter("FaxNo", faxNo) :
                new ObjectParameter("FaxNo", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("AddressLine2", addressLine2) :
                new ObjectParameter("AddressLine2", typeof(string));
    
            var addressLine3Parameter = addressLine3 != null ?
                new ObjectParameter("AddressLine3", addressLine3) :
                new ObjectParameter("AddressLine3", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var addressStateParameter = addressState != null ?
                new ObjectParameter("AddressState", addressState) :
                new ObjectParameter("AddressState", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCondomiumSettings", condomiumIdParameter, titleParameter, condoDescriptionParameter, condoAddressParameter, noOfBlocksParameter, logoPathParameter, backGroundImagePathParameter, unitDisplayFormatIdParameter, updatedByParameter, registrationNoParameter, telephoneNoParameter, faxNoParameter, addressLine1Parameter, addressLine2Parameter, addressLine3Parameter, cityParameter, addressStateParameter, postalCodeParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetCondomiumSettings_Result> SP_DGC_GetCondomiumSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCondomiumSettings_Result>("SP_DGC_GetCondomiumSettings");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllCreditNotes_Result> SP_DGC_GetAllCreditNotes(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllCreditNotes_Result>("SP_DGC_GetAllCreditNotes", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllCreditNoteUnitInvoiceLineItemDetails_Result> SP_DGC_GetAllCreditNoteUnitInvoiceLineItemDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, Nullable<long> unitInvoiceID, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitInvoiceIDParameter = unitInvoiceID.HasValue ?
                new ObjectParameter("UnitInvoiceID", unitInvoiceID) :
                new ObjectParameter("UnitInvoiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllCreditNoteUnitInvoiceLineItemDetails_Result>("SP_DGC_GetAllCreditNoteUnitInvoiceLineItemDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, unitInvoiceIDParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllCreditNoteVendorInvoiceLineItemDetails_Result> SP_DGC_GetAllCreditNoteVendorInvoiceLineItemDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, Nullable<long> vendorInvoiceID, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var vendorInvoiceIDParameter = vendorInvoiceID.HasValue ?
                new ObjectParameter("VendorInvoiceID", vendorInvoiceID) :
                new ObjectParameter("VendorInvoiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllCreditNoteVendorInvoiceLineItemDetails_Result>("SP_DGC_GetAllCreditNoteVendorInvoiceLineItemDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, vendorInvoiceIDParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitPurchaseDetailsByUnitIds_Result> SP_DGC_GetAllUnitPurchaseDetailsByUnitIds(string unitIds, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var unitIdsParameter = unitIds != null ?
                new ObjectParameter("UnitIds", unitIds) :
                new ObjectParameter("UnitIds", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitPurchaseDetailsByUnitIds_Result>("SP_DGC_GetAllUnitPurchaseDetailsByUnitIds", unitIdsParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveCreditNote(Nullable<long> creditNoteID, Nullable<int> issueForID, Nullable<int> issueToID, string creditNumber, string creditSubject, string vendor_DebitNoteReferenceNumber, Nullable<decimal> creditAmount, string issueToAddress, Nullable<System.DateTime> issueDate, Nullable<long> invoiceId, string acknowledgementFilePath, Nullable<int> statusId, string createdBy, ObjectParameter errorCode)
        {
            var creditNoteIDParameter = creditNoteID.HasValue ?
                new ObjectParameter("CreditNoteID", creditNoteID) :
                new ObjectParameter("CreditNoteID", typeof(long));
    
            var issueForIDParameter = issueForID.HasValue ?
                new ObjectParameter("IssueForID", issueForID) :
                new ObjectParameter("IssueForID", typeof(int));
    
            var issueToIDParameter = issueToID.HasValue ?
                new ObjectParameter("IssueToID", issueToID) :
                new ObjectParameter("IssueToID", typeof(int));
    
            var creditNumberParameter = creditNumber != null ?
                new ObjectParameter("CreditNumber", creditNumber) :
                new ObjectParameter("CreditNumber", typeof(string));
    
            var creditSubjectParameter = creditSubject != null ?
                new ObjectParameter("CreditSubject", creditSubject) :
                new ObjectParameter("CreditSubject", typeof(string));
    
            var vendor_DebitNoteReferenceNumberParameter = vendor_DebitNoteReferenceNumber != null ?
                new ObjectParameter("Vendor_DebitNoteReferenceNumber", vendor_DebitNoteReferenceNumber) :
                new ObjectParameter("Vendor_DebitNoteReferenceNumber", typeof(string));
    
            var creditAmountParameter = creditAmount.HasValue ?
                new ObjectParameter("CreditAmount", creditAmount) :
                new ObjectParameter("CreditAmount", typeof(decimal));
    
            var issueToAddressParameter = issueToAddress != null ?
                new ObjectParameter("IssueToAddress", issueToAddress) :
                new ObjectParameter("IssueToAddress", typeof(string));
    
            var issueDateParameter = issueDate.HasValue ?
                new ObjectParameter("IssueDate", issueDate) :
                new ObjectParameter("IssueDate", typeof(System.DateTime));
    
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(long));
    
            var acknowledgementFilePathParameter = acknowledgementFilePath != null ?
                new ObjectParameter("AcknowledgementFilePath", acknowledgementFilePath) :
                new ObjectParameter("AcknowledgementFilePath", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCreditNote", creditNoteIDParameter, issueForIDParameter, issueToIDParameter, creditNumberParameter, creditSubjectParameter, vendor_DebitNoteReferenceNumberParameter, creditAmountParameter, issueToAddressParameter, issueDateParameter, invoiceIdParameter, acknowledgementFilePathParameter, statusIdParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveCreditNoteLineItemDetails(Nullable<long> creditNoteID, Nullable<int> issueForId, Nullable<int> issueForTo, Nullable<long> invoiceId, string invoiceLineItems, string createdBy, ObjectParameter errorCode)
        {
            var creditNoteIDParameter = creditNoteID.HasValue ?
                new ObjectParameter("CreditNoteID", creditNoteID) :
                new ObjectParameter("CreditNoteID", typeof(long));
    
            var issueForIdParameter = issueForId.HasValue ?
                new ObjectParameter("IssueForId", issueForId) :
                new ObjectParameter("IssueForId", typeof(int));
    
            var issueForToParameter = issueForTo.HasValue ?
                new ObjectParameter("IssueForTo", issueForTo) :
                new ObjectParameter("IssueForTo", typeof(int));
    
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(long));
    
            var invoiceLineItemsParameter = invoiceLineItems != null ?
                new ObjectParameter("InvoiceLineItems", invoiceLineItems) :
                new ObjectParameter("InvoiceLineItems", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCreditNoteLineItemDetails", creditNoteIDParameter, issueForIdParameter, issueForToParameter, invoiceIdParameter, invoiceLineItemsParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitPurchaseDetailsById_Result> SP_DGC_GetUnitPurchaseDetailsById(Nullable<long> purchaseRequestId)
        {
            var purchaseRequestIdParameter = purchaseRequestId.HasValue ?
                new ObjectParameter("PurchaseRequestId", purchaseRequestId) :
                new ObjectParameter("PurchaseRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitPurchaseDetailsById_Result>("SP_DGC_GetUnitPurchaseDetailsById", purchaseRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllDebitNotes_Result> SP_DGC_GetAllDebitNotes(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllDebitNotes_Result>("SP_DGC_GetAllDebitNotes", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllDebitNoteUnitInvoiceLineItemDetails_Result> SP_DGC_GetAllDebitNoteUnitInvoiceLineItemDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, Nullable<long> unitInvoiceID, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitInvoiceIDParameter = unitInvoiceID.HasValue ?
                new ObjectParameter("UnitInvoiceID", unitInvoiceID) :
                new ObjectParameter("UnitInvoiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllDebitNoteUnitInvoiceLineItemDetails_Result>("SP_DGC_GetAllDebitNoteUnitInvoiceLineItemDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, unitInvoiceIDParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllDebitNoteVendorInvoiceLineItemDetails_Result> SP_DGC_GetAllDebitNoteVendorInvoiceLineItemDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, Nullable<long> vendorInvoiceID, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var vendorInvoiceIDParameter = vendorInvoiceID.HasValue ?
                new ObjectParameter("VendorInvoiceID", vendorInvoiceID) :
                new ObjectParameter("VendorInvoiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllDebitNoteVendorInvoiceLineItemDetails_Result>("SP_DGC_GetAllDebitNoteVendorInvoiceLineItemDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, vendorInvoiceIDParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveDebitNote(Nullable<long> debitNoteID, Nullable<int> issueForID, Nullable<int> issueToID, string debitNumber, string debitSubject, string vendorCreditNoteReferenceNumber, Nullable<decimal> debitAmount, string issueToAddress, Nullable<System.DateTime> issueDate, Nullable<long> invoiceId, string acknowledgementFilePath, Nullable<int> statusId, string createdBy, ObjectParameter errorCode)
        {
            var debitNoteIDParameter = debitNoteID.HasValue ?
                new ObjectParameter("DebitNoteID", debitNoteID) :
                new ObjectParameter("DebitNoteID", typeof(long));
    
            var issueForIDParameter = issueForID.HasValue ?
                new ObjectParameter("IssueForID", issueForID) :
                new ObjectParameter("IssueForID", typeof(int));
    
            var issueToIDParameter = issueToID.HasValue ?
                new ObjectParameter("IssueToID", issueToID) :
                new ObjectParameter("IssueToID", typeof(int));
    
            var debitNumberParameter = debitNumber != null ?
                new ObjectParameter("DebitNumber", debitNumber) :
                new ObjectParameter("DebitNumber", typeof(string));
    
            var debitSubjectParameter = debitSubject != null ?
                new ObjectParameter("DebitSubject", debitSubject) :
                new ObjectParameter("DebitSubject", typeof(string));
    
            var vendorCreditNoteReferenceNumberParameter = vendorCreditNoteReferenceNumber != null ?
                new ObjectParameter("VendorCreditNoteReferenceNumber", vendorCreditNoteReferenceNumber) :
                new ObjectParameter("VendorCreditNoteReferenceNumber", typeof(string));
    
            var debitAmountParameter = debitAmount.HasValue ?
                new ObjectParameter("DebitAmount", debitAmount) :
                new ObjectParameter("DebitAmount", typeof(decimal));
    
            var issueToAddressParameter = issueToAddress != null ?
                new ObjectParameter("IssueToAddress", issueToAddress) :
                new ObjectParameter("IssueToAddress", typeof(string));
    
            var issueDateParameter = issueDate.HasValue ?
                new ObjectParameter("IssueDate", issueDate) :
                new ObjectParameter("IssueDate", typeof(System.DateTime));
    
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(long));
    
            var acknowledgementFilePathParameter = acknowledgementFilePath != null ?
                new ObjectParameter("AcknowledgementFilePath", acknowledgementFilePath) :
                new ObjectParameter("AcknowledgementFilePath", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveDebitNote", debitNoteIDParameter, issueForIDParameter, issueToIDParameter, debitNumberParameter, debitSubjectParameter, vendorCreditNoteReferenceNumberParameter, debitAmountParameter, issueToAddressParameter, issueDateParameter, invoiceIdParameter, acknowledgementFilePathParameter, statusIdParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveDebitNoteLineItemDetails(Nullable<long> debitNoteID, Nullable<int> issueForId, Nullable<int> issueForTo, Nullable<long> invoiceId, string invoiceLineItems, string createdBy, ObjectParameter errorCode)
        {
            var debitNoteIDParameter = debitNoteID.HasValue ?
                new ObjectParameter("DebitNoteID", debitNoteID) :
                new ObjectParameter("DebitNoteID", typeof(long));
    
            var issueForIdParameter = issueForId.HasValue ?
                new ObjectParameter("IssueForId", issueForId) :
                new ObjectParameter("IssueForId", typeof(int));
    
            var issueForToParameter = issueForTo.HasValue ?
                new ObjectParameter("IssueForTo", issueForTo) :
                new ObjectParameter("IssueForTo", typeof(int));
    
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(long));
    
            var invoiceLineItemsParameter = invoiceLineItems != null ?
                new ObjectParameter("InvoiceLineItems", invoiceLineItems) :
                new ObjectParameter("InvoiceLineItems", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveDebitNoteLineItemDetails", debitNoteIDParameter, issueForIdParameter, issueForToParameter, invoiceIdParameter, invoiceLineItemsParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllRFQQuotesDetails_Result> SP_DGC_GetAllRFQQuotesDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> rFQID)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllRFQQuotesDetails_Result>("SP_DGC_GetAllRFQQuotesDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, rFQIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUserDetails_Result> SP_DGC_GetAllUserDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUserDetails_Result>("SP_DGC_GetAllUserDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetRFQQuotesDetailsbyId_Result> SP_DGC_GetRFQQuotesDetailsbyId(Nullable<long> rFQuotesID)
        {
            var rFQuotesIDParameter = rFQuotesID.HasValue ?
                new ObjectParameter("RFQuotesID", rFQuotesID) :
                new ObjectParameter("RFQuotesID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetRFQQuotesDetailsbyId_Result>("SP_DGC_GetRFQQuotesDetailsbyId", rFQuotesIDParameter);
        }
    
        public virtual int SP_DGC_SaveRFQQuotesDetails(Nullable<long> rFQuotesID, Nullable<int> rFQID, string quotesReference, string quotesSubject, Nullable<decimal> quotesPrice, Nullable<System.DateTime> estimatecompletionTime, Nullable<int> statusID, Nullable<System.DateTime> quotesReceivedDate, string companyName, string companyAddress, string companyPhoneNumber, string companyFaxNumber, string companyEmail, string companyContactPersonName, string contactPersonMobilenumber, string contactPersonEmail, string uploadedReferenceFile, string addressLine1, string addressLine2, string addressLine3, string city, string addressState, string postalCode, string createdBy, ObjectParameter errorCode)
        {
            var rFQuotesIDParameter = rFQuotesID.HasValue ?
                new ObjectParameter("RFQuotesID", rFQuotesID) :
                new ObjectParameter("RFQuotesID", typeof(long));
    
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(int));
    
            var quotesReferenceParameter = quotesReference != null ?
                new ObjectParameter("QuotesReference", quotesReference) :
                new ObjectParameter("QuotesReference", typeof(string));
    
            var quotesSubjectParameter = quotesSubject != null ?
                new ObjectParameter("QuotesSubject", quotesSubject) :
                new ObjectParameter("QuotesSubject", typeof(string));
    
            var quotesPriceParameter = quotesPrice.HasValue ?
                new ObjectParameter("QuotesPrice", quotesPrice) :
                new ObjectParameter("QuotesPrice", typeof(decimal));
    
            var estimatecompletionTimeParameter = estimatecompletionTime.HasValue ?
                new ObjectParameter("EstimatecompletionTime", estimatecompletionTime) :
                new ObjectParameter("EstimatecompletionTime", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var quotesReceivedDateParameter = quotesReceivedDate.HasValue ?
                new ObjectParameter("QuotesReceivedDate", quotesReceivedDate) :
                new ObjectParameter("QuotesReceivedDate", typeof(System.DateTime));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyAddressParameter = companyAddress != null ?
                new ObjectParameter("CompanyAddress", companyAddress) :
                new ObjectParameter("CompanyAddress", typeof(string));
    
            var companyPhoneNumberParameter = companyPhoneNumber != null ?
                new ObjectParameter("CompanyPhoneNumber", companyPhoneNumber) :
                new ObjectParameter("CompanyPhoneNumber", typeof(string));
    
            var companyFaxNumberParameter = companyFaxNumber != null ?
                new ObjectParameter("CompanyFaxNumber", companyFaxNumber) :
                new ObjectParameter("CompanyFaxNumber", typeof(string));
    
            var companyEmailParameter = companyEmail != null ?
                new ObjectParameter("CompanyEmail", companyEmail) :
                new ObjectParameter("CompanyEmail", typeof(string));
    
            var companyContactPersonNameParameter = companyContactPersonName != null ?
                new ObjectParameter("CompanyContactPersonName", companyContactPersonName) :
                new ObjectParameter("CompanyContactPersonName", typeof(string));
    
            var contactPersonMobilenumberParameter = contactPersonMobilenumber != null ?
                new ObjectParameter("ContactPersonMobilenumber", contactPersonMobilenumber) :
                new ObjectParameter("ContactPersonMobilenumber", typeof(string));
    
            var contactPersonEmailParameter = contactPersonEmail != null ?
                new ObjectParameter("ContactPersonEmail", contactPersonEmail) :
                new ObjectParameter("ContactPersonEmail", typeof(string));
    
            var uploadedReferenceFileParameter = uploadedReferenceFile != null ?
                new ObjectParameter("UploadedReferenceFile", uploadedReferenceFile) :
                new ObjectParameter("UploadedReferenceFile", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("AddressLine2", addressLine2) :
                new ObjectParameter("AddressLine2", typeof(string));
    
            var addressLine3Parameter = addressLine3 != null ?
                new ObjectParameter("AddressLine3", addressLine3) :
                new ObjectParameter("AddressLine3", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var addressStateParameter = addressState != null ?
                new ObjectParameter("AddressState", addressState) :
                new ObjectParameter("AddressState", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveRFQQuotesDetails", rFQuotesIDParameter, rFQIDParameter, quotesReferenceParameter, quotesSubjectParameter, quotesPriceParameter, estimatecompletionTimeParameter, statusIDParameter, quotesReceivedDateParameter, companyNameParameter, companyAddressParameter, companyPhoneNumberParameter, companyFaxNumberParameter, companyEmailParameter, companyContactPersonNameParameter, contactPersonMobilenumberParameter, contactPersonEmailParameter, uploadedReferenceFileParameter, addressLine1Parameter, addressLine2Parameter, addressLine3Parameter, cityParameter, addressStateParameter, postalCodeParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_CancelTaxSetUp(Nullable<int> taxSetUpId, string cancelledBy, string comment)
        {
            var taxSetUpIdParameter = taxSetUpId.HasValue ?
                new ObjectParameter("TaxSetUpId", taxSetUpId) :
                new ObjectParameter("TaxSetUpId", typeof(int));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelTaxSetUp", taxSetUpIdParameter, cancelledByParameter, commentParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllTaxSetUp_Result> SP_DGC_GetAllTaxSetUp(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllTaxSetUp_Result>("SP_DGC_GetAllTaxSetUp", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetTaxSetUpByTaxId_Result> SP_DGC_GetTaxSetUpByTaxId(Nullable<int> taxSetUpId)
        {
            var taxSetUpIdParameter = taxSetUpId.HasValue ?
                new ObjectParameter("TaxSetUpId", taxSetUpId) :
                new ObjectParameter("TaxSetUpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetTaxSetUpByTaxId_Result>("SP_DGC_GetTaxSetUpByTaxId", taxSetUpIdParameter);
        }
    
        public virtual int SP_DGC_SaveTaxAmount(Nullable<int> taxSetUpId, string taxCode, string taxDescription, string isActive, Nullable<System.DateTime> effectiveFrom, string createdBy, ObjectParameter errorCode)
        {
            var taxSetUpIdParameter = taxSetUpId.HasValue ?
                new ObjectParameter("TaxSetUpId", taxSetUpId) :
                new ObjectParameter("TaxSetUpId", typeof(int));
    
            var taxCodeParameter = taxCode != null ?
                new ObjectParameter("TaxCode", taxCode) :
                new ObjectParameter("TaxCode", typeof(string));
    
            var taxDescriptionParameter = taxDescription != null ?
                new ObjectParameter("TaxDescription", taxDescription) :
                new ObjectParameter("TaxDescription", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveTaxAmount", taxSetUpIdParameter, taxCodeParameter, taxDescriptionParameter, isActiveParameter, effectiveFromParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_CancelDiscountSetUp(Nullable<int> discountSetUpId, string cancelledBy, string comment)
        {
            var discountSetUpIdParameter = discountSetUpId.HasValue ?
                new ObjectParameter("DiscountSetUpId", discountSetUpId) :
                new ObjectParameter("DiscountSetUpId", typeof(int));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelDiscountSetUp", discountSetUpIdParameter, cancelledByParameter, commentParameter);
        }
    
        public virtual int SP_DGC_CancelStockCategory(Nullable<int> stockCategoryId, string cancelledBy, string comment)
        {
            var stockCategoryIdParameter = stockCategoryId.HasValue ?
                new ObjectParameter("StockCategoryId", stockCategoryId) :
                new ObjectParameter("StockCategoryId", typeof(int));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CancelStockCategory", stockCategoryIdParameter, cancelledByParameter, commentParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllDiscountSetUp_Result> SP_DGC_GetAllDiscountSetUp(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllDiscountSetUp_Result>("SP_DGC_GetAllDiscountSetUp", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllStockCategory_Result> SP_DGC_GetAllStockCategory(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllStockCategory_Result>("SP_DGC_GetAllStockCategory", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetDiscountSetUpById_Result> SP_DGC_GetDiscountSetUpById(Nullable<int> discountSetUpId)
        {
            var discountSetUpIdParameter = discountSetUpId.HasValue ?
                new ObjectParameter("DiscountSetUpId", discountSetUpId) :
                new ObjectParameter("DiscountSetUpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetDiscountSetUpById_Result>("SP_DGC_GetDiscountSetUpById", discountSetUpIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetStockCategoryById_Result> SP_DGC_GetStockCategoryById(Nullable<int> stockCategoryId)
        {
            var stockCategoryIdParameter = stockCategoryId.HasValue ?
                new ObjectParameter("StockCategoryId", stockCategoryId) :
                new ObjectParameter("StockCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetStockCategoryById_Result>("SP_DGC_GetStockCategoryById", stockCategoryIdParameter);
        }
    
        public virtual int SP_DGC_SaveDiscountSetUp(Nullable<int> discountSetUpId, string discountCode, string discountDescription, string isActive, Nullable<System.DateTime> effectiveFrom, string createdBy, ObjectParameter errorCode)
        {
            var discountSetUpIdParameter = discountSetUpId.HasValue ?
                new ObjectParameter("DiscountSetUpId", discountSetUpId) :
                new ObjectParameter("DiscountSetUpId", typeof(int));
    
            var discountCodeParameter = discountCode != null ?
                new ObjectParameter("DiscountCode", discountCode) :
                new ObjectParameter("DiscountCode", typeof(string));
    
            var discountDescriptionParameter = discountDescription != null ?
                new ObjectParameter("DiscountDescription", discountDescription) :
                new ObjectParameter("DiscountDescription", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveDiscountSetUp", discountSetUpIdParameter, discountCodeParameter, discountDescriptionParameter, isActiveParameter, effectiveFromParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveStockCategory(Nullable<int> stockCategoryId, string isProvalleyAdmin, string categoryName, string categoryDescription, string isActive, Nullable<System.DateTime> effectiveFrom, string createdBy, ObjectParameter errorCode)
        {
            var stockCategoryIdParameter = stockCategoryId.HasValue ?
                new ObjectParameter("StockCategoryId", stockCategoryId) :
                new ObjectParameter("StockCategoryId", typeof(int));
    
            var isProvalleyAdminParameter = isProvalleyAdmin != null ?
                new ObjectParameter("IsProvalleyAdmin", isProvalleyAdmin) :
                new ObjectParameter("IsProvalleyAdmin", typeof(string));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var categoryDescriptionParameter = categoryDescription != null ?
                new ObjectParameter("CategoryDescription", categoryDescription) :
                new ObjectParameter("CategoryDescription", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveStockCategory", stockCategoryIdParameter, isProvalleyAdminParameter, categoryNameParameter, categoryDescriptionParameter, isActiveParameter, effectiveFromParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveUnitRequestPaymentPriceConfiguration(Nullable<int> uRItemFeeConfigId, Nullable<int> unitRequestItemId, Nullable<decimal> itemFee, Nullable<System.DateTime> effectiveFrom, string updatedBy, Nullable<System.DateTime> updatedOn, ObjectParameter errorCode)
        {
            var uRItemFeeConfigIdParameter = uRItemFeeConfigId.HasValue ?
                new ObjectParameter("URItemFeeConfigId", uRItemFeeConfigId) :
                new ObjectParameter("URItemFeeConfigId", typeof(int));
    
            var unitRequestItemIdParameter = unitRequestItemId.HasValue ?
                new ObjectParameter("UnitRequestItemId", unitRequestItemId) :
                new ObjectParameter("UnitRequestItemId", typeof(int));
    
            var itemFeeParameter = itemFee.HasValue ?
                new ObjectParameter("ItemFee", itemFee) :
                new ObjectParameter("ItemFee", typeof(decimal));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var updatedOnParameter = updatedOn.HasValue ?
                new ObjectParameter("UpdatedOn", updatedOn) :
                new ObjectParameter("UpdatedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitRequestPaymentPriceConfiguration", uRItemFeeConfigIdParameter, unitRequestItemIdParameter, itemFeeParameter, effectiveFromParameter, updatedByParameter, updatedOnParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitRequestItemsByRequestType_Result> SP_DGC_GetUnitRequestItemsByRequestType(Nullable<int> unitRequestTypeId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var unitRequestTypeIdParameter = unitRequestTypeId.HasValue ?
                new ObjectParameter("UnitRequestTypeId", unitRequestTypeId) :
                new ObjectParameter("UnitRequestTypeId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitRequestItemsByRequestType_Result>("SP_DGC_GetUnitRequestItemsByRequestType", unitRequestTypeIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetHallPriceDetails_V1_Result> SP_DGC_GetHallPriceDetails_V1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetHallPriceDetails_V1_Result>("SP_DGC_GetHallPriceDetails_V1");
        }
    
        public virtual int SP_DGC_SaveAllUnitRequest_Payments_LedgerDetails(string requestType, Nullable<long> requestId, Nullable<int> requestStatusId, Nullable<long> requestActionId, string receivedByUser, ObjectParameter errorCode)
        {
            var requestTypeParameter = requestType != null ?
                new ObjectParameter("RequestType", requestType) :
                new ObjectParameter("RequestType", typeof(string));
    
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var requestActionIdParameter = requestActionId.HasValue ?
                new ObjectParameter("RequestActionId", requestActionId) :
                new ObjectParameter("RequestActionId", typeof(long));
    
            var receivedByUserParameter = receivedByUser != null ?
                new ObjectParameter("ReceivedByUser", receivedByUser) :
                new ObjectParameter("ReceivedByUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveAllUnitRequest_Payments_LedgerDetails", requestTypeParameter, requestIdParameter, requestStatusIdParameter, requestActionIdParameter, receivedByUserParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetHallBookFeeRefundItemDetails_Result> SP_DGC_GetHallBookFeeRefundItemDetails(Nullable<long> hallBookingRequestId, Nullable<int> currentStatusId)
        {
            var hallBookingRequestIdParameter = hallBookingRequestId.HasValue ?
                new ObjectParameter("HallBookingRequestId", hallBookingRequestId) :
                new ObjectParameter("HallBookingRequestId", typeof(long));
    
            var currentStatusIdParameter = currentStatusId.HasValue ?
                new ObjectParameter("CurrentStatusId", currentStatusId) :
                new ObjectParameter("CurrentStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetHallBookFeeRefundItemDetails_Result>("SP_DGC_GetHallBookFeeRefundItemDetails", hallBookingRequestIdParameter, currentStatusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetHallBookFeePayItemDetails_Result> SP_DGC_GetHallBookFeePayItemDetails(Nullable<long> hallBookingRequestId, Nullable<int> currentStatusId)
        {
            var hallBookingRequestIdParameter = hallBookingRequestId.HasValue ?
                new ObjectParameter("HallBookingRequestId", hallBookingRequestId) :
                new ObjectParameter("HallBookingRequestId", typeof(long));
    
            var currentStatusIdParameter = currentStatusId.HasValue ?
                new ObjectParameter("CurrentStatusId", currentStatusId) :
                new ObjectParameter("CurrentStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetHallBookFeePayItemDetails_Result>("SP_DGC_GetHallBookFeePayItemDetails", hallBookingRequestIdParameter, currentStatusIdParameter);
        }
    
        public virtual int SP_DGC_SaveHallFeeDetails(string hallBookPriceInfo, string updatedBy, ObjectParameter errorCode)
        {
            var hallBookPriceInfoParameter = hallBookPriceInfo != null ?
                new ObjectParameter("HallBookPriceInfo", hallBookPriceInfo) :
                new ObjectParameter("HallBookPriceInfo", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveHallFeeDetails", hallBookPriceInfoParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetInvoiceBillSummeryByUnitId_Result> SP_DGC_GetInvoiceBillSummeryByUnitId(Nullable<int> unitID, string billCode)
        {
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(int));
    
            var billCodeParameter = billCode != null ?
                new ObjectParameter("BillCode", billCode) :
                new ObjectParameter("BillCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetInvoiceBillSummeryByUnitId_Result>("SP_DGC_GetInvoiceBillSummeryByUnitId", unitIDParameter, billCodeParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveFinancialPeriods_Result> SP_DGC_GetActiveFinancialPeriods()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveFinancialPeriods_Result>("SP_DGC_GetActiveFinancialPeriods");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllSinkFundByFiscalPeriod_Result> SP_DGC_GetAllSinkFundByFiscalPeriod(Nullable<int> financialPeriodId)
        {
            var financialPeriodIdParameter = financialPeriodId.HasValue ?
                new ObjectParameter("FinancialPeriodId", financialPeriodId) :
                new ObjectParameter("FinancialPeriodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllSinkFundByFiscalPeriod_Result>("SP_DGC_GetAllSinkFundByFiscalPeriod", financialPeriodIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetSinkFundDetails_Result> SP_DGC_GetSinkFundDetails(Nullable<int> financialPeriodId, Nullable<int> sinkFundPlanId)
        {
            var financialPeriodIdParameter = financialPeriodId.HasValue ?
                new ObjectParameter("FinancialPeriodId", financialPeriodId) :
                new ObjectParameter("FinancialPeriodId", typeof(int));
    
            var sinkFundPlanIdParameter = sinkFundPlanId.HasValue ?
                new ObjectParameter("SinkFundPlanId", sinkFundPlanId) :
                new ObjectParameter("SinkFundPlanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetSinkFundDetails_Result>("SP_DGC_GetSinkFundDetails", financialPeriodIdParameter, sinkFundPlanIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetClampPriceDetails_V1_Result> SP_DGC_GetClampPriceDetails_V1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetClampPriceDetails_V1_Result>("SP_DGC_GetClampPriceDetails_V1");
        }
    
        public virtual ObjectResult<SP_DGC_GetRennovationRequestDepositItemDetails_Result> SP_DGC_GetRennovationRequestDepositItemDetails(Nullable<long> rennovationRequestId, ObjectParameter errorCode)
        {
            var rennovationRequestIdParameter = rennovationRequestId.HasValue ?
                new ObjectParameter("RennovationRequestId", rennovationRequestId) :
                new ObjectParameter("RennovationRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetRennovationRequestDepositItemDetails_Result>("SP_DGC_GetRennovationRequestDepositItemDetails", rennovationRequestIdParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveClampFeeDetails(string hallBookPriceInfo, string updatedBy, ObjectParameter errorCode)
        {
            var hallBookPriceInfoParameter = hallBookPriceInfo != null ?
                new ObjectParameter("HallBookPriceInfo", hallBookPriceInfo) :
                new ObjectParameter("HallBookPriceInfo", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveClampFeeDetails", hallBookPriceInfoParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveVehicleParkFeeDetails(string hallBookPriceInfo, string updatedBy, ObjectParameter errorCode)
        {
            var hallBookPriceInfoParameter = hallBookPriceInfo != null ?
                new ObjectParameter("HallBookPriceInfo", hallBookPriceInfo) :
                new ObjectParameter("HallBookPriceInfo", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVehicleParkFeeDetails", hallBookPriceInfoParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetRennovationRefundItemDetails_Result> SP_DGC_GetRennovationRefundItemDetails(Nullable<long> rennovationRequestId)
        {
            var rennovationRequestIdParameter = rennovationRequestId.HasValue ?
                new ObjectParameter("RennovationRequestId", rennovationRequestId) :
                new ObjectParameter("RennovationRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetRennovationRefundItemDetails_Result>("SP_DGC_GetRennovationRefundItemDetails", rennovationRequestIdParameter);
        }
    
        public virtual int SP_DGC_SaveVehicleParkingSlotSetting(Nullable<int> vehicleSlotId, string slotName, Nullable<int> allowdVehicleId, string isVisitorParking, string createdBy, ObjectParameter errorCode)
        {
            var vehicleSlotIdParameter = vehicleSlotId.HasValue ?
                new ObjectParameter("VehicleSlotId", vehicleSlotId) :
                new ObjectParameter("VehicleSlotId", typeof(int));
    
            var slotNameParameter = slotName != null ?
                new ObjectParameter("SlotName", slotName) :
                new ObjectParameter("SlotName", typeof(string));
    
            var allowdVehicleIdParameter = allowdVehicleId.HasValue ?
                new ObjectParameter("AllowdVehicleId", allowdVehicleId) :
                new ObjectParameter("AllowdVehicleId", typeof(int));
    
            var isVisitorParkingParameter = isVisitorParking != null ?
                new ObjectParameter("IsVisitorParking", isVisitorParking) :
                new ObjectParameter("IsVisitorParking", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVehicleParkingSlotSetting", vehicleSlotIdParameter, slotNameParameter, allowdVehicleIdParameter, isVisitorParkingParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetClampFeePayItemDetails_Result> SP_DGC_GetClampFeePayItemDetails(Nullable<long> clampRequestId, Nullable<int> currentStatusId)
        {
            var clampRequestIdParameter = clampRequestId.HasValue ?
                new ObjectParameter("ClampRequestId", clampRequestId) :
                new ObjectParameter("ClampRequestId", typeof(long));
    
            var currentStatusIdParameter = currentStatusId.HasValue ?
                new ObjectParameter("CurrentStatusId", currentStatusId) :
                new ObjectParameter("CurrentStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetClampFeePayItemDetails_Result>("SP_DGC_GetClampFeePayItemDetails", clampRequestIdParameter, currentStatusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetVehicleParkDepositPayItemDetails_Result> SP_DGC_GetVehicleParkDepositPayItemDetails(Nullable<long> vPRequestId, Nullable<int> currentStatusId)
        {
            var vPRequestIdParameter = vPRequestId.HasValue ?
                new ObjectParameter("VPRequestId", vPRequestId) :
                new ObjectParameter("VPRequestId", typeof(long));
    
            var currentStatusIdParameter = currentStatusId.HasValue ?
                new ObjectParameter("CurrentStatusId", currentStatusId) :
                new ObjectParameter("CurrentStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVehicleParkDepositPayItemDetails_Result>("SP_DGC_GetVehicleParkDepositPayItemDetails", vPRequestIdParameter, currentStatusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetStockSellingPriceByStockId_Result> SP_DGC_GetStockSellingPriceByStockId(Nullable<int> stockID)
        {
            var stockIDParameter = stockID.HasValue ?
                new ObjectParameter("StockID", stockID) :
                new ObjectParameter("StockID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetStockSellingPriceByStockId_Result>("SP_DGC_GetStockSellingPriceByStockId", stockIDParameter);
        }
    
        public virtual int SP_DGC_SaveSinkFundDetails(string sinkFundXML, ObjectParameter errorCode)
        {
            var sinkFundXMLParameter = sinkFundXML != null ?
                new ObjectParameter("SinkFundXML", sinkFundXML) :
                new ObjectParameter("SinkFundXML", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveSinkFundDetails", sinkFundXMLParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveStockCategories_Result> SP_DGC_GetActiveStockCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveStockCategories_Result>("SP_DGC_GetActiveStockCategories");
        }
    
        public virtual int SP_DGC_SaveStockSellingPrice(Nullable<int> stockSellingPriceId, Nullable<long> stockID, Nullable<decimal> sellingPrice, Nullable<System.DateTime> effectivefrom, string createdBy, ObjectParameter errorCode)
        {
            var stockSellingPriceIdParameter = stockSellingPriceId.HasValue ?
                new ObjectParameter("StockSellingPriceId", stockSellingPriceId) :
                new ObjectParameter("StockSellingPriceId", typeof(int));
    
            var stockIDParameter = stockID.HasValue ?
                new ObjectParameter("StockID", stockID) :
                new ObjectParameter("StockID", typeof(long));
    
            var sellingPriceParameter = sellingPrice.HasValue ?
                new ObjectParameter("SellingPrice", sellingPrice) :
                new ObjectParameter("SellingPrice", typeof(decimal));
    
            var effectivefromParameter = effectivefrom.HasValue ?
                new ObjectParameter("Effectivefrom", effectivefrom) :
                new ObjectParameter("Effectivefrom", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveStockSellingPrice", stockSellingPriceIdParameter, stockIDParameter, sellingPriceParameter, effectivefromParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetVehicleParkDepositRefundItemDetails_Result> SP_DGC_GetVehicleParkDepositRefundItemDetails(Nullable<long> vPRequestId, Nullable<int> currentStatusId)
        {
            var vPRequestIdParameter = vPRequestId.HasValue ?
                new ObjectParameter("VPRequestId", vPRequestId) :
                new ObjectParameter("VPRequestId", typeof(long));
    
            var currentStatusIdParameter = currentStatusId.HasValue ?
                new ObjectParameter("CurrentStatusId", currentStatusId) :
                new ObjectParameter("CurrentStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVehicleParkDepositRefundItemDetails_Result>("SP_DGC_GetVehicleParkDepositRefundItemDetails", vPRequestIdParameter, currentStatusIdParameter);
        }
    
        public virtual int SP_DGC_SaveCondoMaterials(Nullable<long> materialID, string materialName, string stackTrakingRequired, Nullable<int> stockCategoryId, Nullable<int> unitOfMeasureId, string createdBy, ObjectParameter errorCode)
        {
            var materialIDParameter = materialID.HasValue ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(long));
    
            var materialNameParameter = materialName != null ?
                new ObjectParameter("MaterialName", materialName) :
                new ObjectParameter("MaterialName", typeof(string));
    
            var stackTrakingRequiredParameter = stackTrakingRequired != null ?
                new ObjectParameter("StackTrakingRequired", stackTrakingRequired) :
                new ObjectParameter("StackTrakingRequired", typeof(string));
    
            var stockCategoryIdParameter = stockCategoryId.HasValue ?
                new ObjectParameter("StockCategoryId", stockCategoryId) :
                new ObjectParameter("StockCategoryId", typeof(int));
    
            var unitOfMeasureIdParameter = unitOfMeasureId.HasValue ?
                new ObjectParameter("UnitOfMeasureId", unitOfMeasureId) :
                new ObjectParameter("UnitOfMeasureId", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCondoMaterials", materialIDParameter, materialNameParameter, stackTrakingRequiredParameter, stockCategoryIdParameter, unitOfMeasureIdParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllCondoMeterials_Result> SP_DGC_GetAllCondoMeterials(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllCondoMeterials_Result>("SP_DGC_GetAllCondoMeterials", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityDetailsById_Result> SP_DGC_GetFacilityDetailsById(Nullable<int> facilityId)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityDetailsById_Result>("SP_DGC_GetFacilityDetailsById", facilityIdParameter);
        }
    
        public virtual int SP_DGC_SaveFacilityDetails(Nullable<int> facilityId, string facilityName, string facilityDescription, Nullable<int> facilityCategoryConfigKey, string allowedPackageConfigKeys, string isPaid, Nullable<System.DateTime> effectiveFrom, string isActive, string gallaryImages, string updatedBy, ObjectParameter errorCode)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            var facilityNameParameter = facilityName != null ?
                new ObjectParameter("FacilityName", facilityName) :
                new ObjectParameter("FacilityName", typeof(string));
    
            var facilityDescriptionParameter = facilityDescription != null ?
                new ObjectParameter("FacilityDescription", facilityDescription) :
                new ObjectParameter("FacilityDescription", typeof(string));
    
            var facilityCategoryConfigKeyParameter = facilityCategoryConfigKey.HasValue ?
                new ObjectParameter("FacilityCategoryConfigKey", facilityCategoryConfigKey) :
                new ObjectParameter("FacilityCategoryConfigKey", typeof(int));
    
            var allowedPackageConfigKeysParameter = allowedPackageConfigKeys != null ?
                new ObjectParameter("AllowedPackageConfigKeys", allowedPackageConfigKeys) :
                new ObjectParameter("AllowedPackageConfigKeys", typeof(string));
    
            var isPaidParameter = isPaid != null ?
                new ObjectParameter("IsPaid", isPaid) :
                new ObjectParameter("IsPaid", typeof(string));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var gallaryImagesParameter = gallaryImages != null ?
                new ObjectParameter("GallaryImages", gallaryImages) :
                new ObjectParameter("GallaryImages", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFacilityDetails", facilityIdParameter, facilityNameParameter, facilityDescriptionParameter, facilityCategoryConfigKeyParameter, allowedPackageConfigKeysParameter, isPaidParameter, effectiveFromParameter, isActiveParameter, gallaryImagesParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilitiesDetialsById_Result> SP_DGC_GetFacilitiesDetialsById(Nullable<int> condoFacilityBookingId)
        {
            var condoFacilityBookingIdParameter = condoFacilityBookingId.HasValue ?
                new ObjectParameter("CondoFacilityBookingId", condoFacilityBookingId) :
                new ObjectParameter("CondoFacilityBookingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilitiesDetialsById_Result>("SP_DGC_GetFacilitiesDetialsById", condoFacilityBookingIdParameter);
        }
    
        public virtual int SP_DGC_DeleteCondoFacilities(Nullable<int> facilitiesId, string deletedBy, ObjectParameter errorCode)
        {
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteCondoFacilities", facilitiesIdParameter, deletedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteCourt(Nullable<int> courtID, string deletedBy, ObjectParameter errorCode)
        {
            var courtIDParameter = courtID.HasValue ?
                new ObjectParameter("CourtID", courtID) :
                new ObjectParameter("CourtID", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteCourt", courtIDParameter, deletedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveCourtsorTrainersByFacilityId_Result> SP_DGC_GetActiveCourtsorTrainersByFacilityId(Nullable<int> facilityId, Nullable<int> facilityCategoryKey)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            var facilityCategoryKeyParameter = facilityCategoryKey.HasValue ?
                new ObjectParameter("FacilityCategoryKey", facilityCategoryKey) :
                new ObjectParameter("FacilityCategoryKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveCourtsorTrainersByFacilityId_Result>("SP_DGC_GetActiveCourtsorTrainersByFacilityId", facilityIdParameter, facilityCategoryKeyParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCourtsByFacilityId_Result> SP_DGC_GetCourtsByFacilityId(Nullable<int> facilityId)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCourtsByFacilityId_Result>("SP_DGC_GetCourtsByFacilityId", facilityIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCourtShutDownDatesById_Result> SP_DGC_GetCourtShutDownDatesById(Nullable<int> courtID)
        {
            var courtIDParameter = courtID.HasValue ?
                new ObjectParameter("CourtID", courtID) :
                new ObjectParameter("CourtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCourtShutDownDatesById_Result>("SP_DGC_GetCourtShutDownDatesById", courtIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCourtWorkingHoursByCourtId_Result> SP_DGC_GetCourtWorkingHoursByCourtId(Nullable<int> courtID)
        {
            var courtIDParameter = courtID.HasValue ?
                new ObjectParameter("CourtID", courtID) :
                new ObjectParameter("CourtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCourtWorkingHoursByCourtId_Result>("SP_DGC_GetCourtWorkingHoursByCourtId", courtIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveAccessGoodsByStockCatagoryId_Result> SP_DGC_GetActiveAccessGoodsByStockCatagoryId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveAccessGoodsByStockCatagoryId_Result>("SP_DGC_GetActiveAccessGoodsByStockCatagoryId");
        }
    
        public virtual ObjectResult<SP_DGC_GetAccessGoodsRequest_PayLines_Result> SP_DGC_GetAccessGoodsRequest_PayLines(Nullable<long> accessGoodsRequestId)
        {
            var accessGoodsRequestIdParameter = accessGoodsRequestId.HasValue ?
                new ObjectParameter("AccessGoodsRequestId", accessGoodsRequestId) :
                new ObjectParameter("AccessGoodsRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAccessGoodsRequest_PayLines_Result>("SP_DGC_GetAccessGoodsRequest_PayLines", accessGoodsRequestIdParameter);
        }
    
        public virtual int SP_DGC_DeleteFacilityLocation(Nullable<int> locationID, string deletedBy, ObjectParameter errorCode)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var deletedByParameter = deletedBy != null ?
                new ObjectParameter("DeletedBy", deletedBy) :
                new ObjectParameter("DeletedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteFacilityLocation", locationIDParameter, deletedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetLocationShutDownDatesById_Result> SP_DGC_GetLocationShutDownDatesById(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLocationShutDownDatesById_Result>("SP_DGC_GetLocationShutDownDatesById", locationIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActivePaidFacilities_Result> SP_DGC_GetActivePaidFacilities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActivePaidFacilities_Result>("SP_DGC_GetActivePaidFacilities");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllCondoItem_GLItem_MappingDetails_Result> SP_DGC_GetAllCondoItem_GLItem_MappingDetails(string gLItemType, Nullable<int> showMapOrUnMap, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var gLItemTypeParameter = gLItemType != null ?
                new ObjectParameter("GLItemType", gLItemType) :
                new ObjectParameter("GLItemType", typeof(string));
    
            var showMapOrUnMapParameter = showMapOrUnMap.HasValue ?
                new ObjectParameter("ShowMapOrUnMap", showMapOrUnMap) :
                new ObjectParameter("ShowMapOrUnMap", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllCondoItem_GLItem_MappingDetails_Result>("SP_DGC_GetAllCondoItem_GLItem_MappingDetails", gLItemTypeParameter, showMapOrUnMapParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveVendorCreditNoteSubmitGLPostDetails(Nullable<long> creditNoteId, string updatedBy, ObjectParameter errorCode)
        {
            var creditNoteIdParameter = creditNoteId.HasValue ?
                new ObjectParameter("CreditNoteId", creditNoteId) :
                new ObjectParameter("CreditNoteId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVendorCreditNoteSubmitGLPostDetails", creditNoteIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveVendorDebitNoteSubmitGLPostDetails(Nullable<long> debitNoteId, string updatedBy, ObjectParameter errorCode)
        {
            var debitNoteIdParameter = debitNoteId.HasValue ?
                new ObjectParameter("DebitNoteId", debitNoteId) :
                new ObjectParameter("DebitNoteId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVendorDebitNoteSubmitGLPostDetails", debitNoteIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityLineDetailsByFacilityId_Result> SP_DGC_GetFacilityLineDetailsByFacilityId(Nullable<int> facilityId)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityLineDetailsByFacilityId_Result>("SP_DGC_GetFacilityLineDetailsByFacilityId", facilityIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCreditNoteDetailsbyId_Result> SP_DGC_GetCreditNoteDetailsbyId(Nullable<long> creditNoteID, string createdBy, ObjectParameter currentCreditNumber, ObjectParameter currentCreditNoteId)
        {
            var creditNoteIDParameter = creditNoteID.HasValue ?
                new ObjectParameter("CreditNoteID", creditNoteID) :
                new ObjectParameter("CreditNoteID", typeof(long));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCreditNoteDetailsbyId_Result>("SP_DGC_GetCreditNoteDetailsbyId", creditNoteIDParameter, createdByParameter, currentCreditNumber, currentCreditNoteId);
        }
    
        public virtual ObjectResult<SP_DGC_GetDebitNoteDetailsbyId_Result> SP_DGC_GetDebitNoteDetailsbyId(Nullable<long> debitNoteID, string createdBy, ObjectParameter currentDebitNumber, ObjectParameter currentDebitNoteId)
        {
            var debitNoteIDParameter = debitNoteID.HasValue ?
                new ObjectParameter("DebitNoteID", debitNoteID) :
                new ObjectParameter("DebitNoteID", typeof(long));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetDebitNoteDetailsbyId_Result>("SP_DGC_GetDebitNoteDetailsbyId", debitNoteIDParameter, createdByParameter, currentDebitNumber, currentDebitNoteId);
        }
    
        public virtual ObjectResult<SP_DGC_GetVendorInvoicePayableLines_Result> SP_DGC_GetVendorInvoicePayableLines(Nullable<long> vendorInvoiceId)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVendorInvoicePayableLines_Result>("SP_DGC_GetVendorInvoicePayableLines", vendorInvoiceIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityLinePackagePriceDetailsByFacilityId_Result> SP_DGC_GetFacilityLinePackagePriceDetailsByFacilityId(Nullable<int> facilityId)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityLinePackagePriceDetailsByFacilityId_Result>("SP_DGC_GetFacilityLinePackagePriceDetailsByFacilityId", facilityIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveWorkOrders_Result> SP_DGC_GetActiveWorkOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveWorkOrders_Result>("SP_DGC_GetActiveWorkOrders");
        }
    
        public virtual int SP_DGC_SaveVendorInvoiceActionDetails(Nullable<long> vendorInvoiceId, string comments, Nullable<int> requestStatusId, string paymentInfo, string additionalReferenceFilePath, string actionTakenBy, Nullable<long> actionTakenByUserId, Nullable<int> previousStatusId, ObjectParameter errorCode, ObjectParameter vendorInvoiceActionId)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByParameter = actionTakenBy != null ?
                new ObjectParameter("ActionTakenBy", actionTakenBy) :
                new ObjectParameter("ActionTakenBy", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var previousStatusIdParameter = previousStatusId.HasValue ?
                new ObjectParameter("PreviousStatusId", previousStatusId) :
                new ObjectParameter("PreviousStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVendorInvoiceActionDetails", vendorInvoiceIdParameter, commentsParameter, requestStatusIdParameter, paymentInfoParameter, additionalReferenceFilePathParameter, actionTakenByParameter, actionTakenByUserIdParameter, previousStatusIdParameter, errorCode, vendorInvoiceActionId);
        }
    
        public virtual int SP_DGC_SaveVendorinvoiceAction_LedgerDetails(Nullable<long> vendorInvoiceId, Nullable<long> vendorInvoiceActionId, Nullable<int> statusId, string updatedBy, ObjectParameter errorCode)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            var vendorInvoiceActionIdParameter = vendorInvoiceActionId.HasValue ?
                new ObjectParameter("VendorInvoiceActionId", vendorInvoiceActionId) :
                new ObjectParameter("VendorInvoiceActionId", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVendorinvoiceAction_LedgerDetails", vendorInvoiceIdParameter, vendorInvoiceActionIdParameter, statusIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetPaymentItemDetailsBySourceRequestID_Result> SP_DGC_GetPaymentItemDetailsBySourceRequestID(Nullable<int> paymentSourceRequestId, Nullable<int> paymentSourceRequestType)
        {
            var paymentSourceRequestIdParameter = paymentSourceRequestId.HasValue ?
                new ObjectParameter("PaymentSourceRequestId", paymentSourceRequestId) :
                new ObjectParameter("PaymentSourceRequestId", typeof(int));
    
            var paymentSourceRequestTypeParameter = paymentSourceRequestType.HasValue ?
                new ObjectParameter("PaymentSourceRequestType", paymentSourceRequestType) :
                new ObjectParameter("PaymentSourceRequestType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetPaymentItemDetailsBySourceRequestID_Result>("SP_DGC_GetPaymentItemDetailsBySourceRequestID", paymentSourceRequestIdParameter, paymentSourceRequestTypeParameter);
        }
    
        public virtual int SP_DGC_TransposeVendorInvoicePaymentbyVIActionId(Nullable<long> transposedVendorInvoiceActionId, Nullable<long> vendorInvoiceId, string transposedBy, Nullable<long> transposedByUserId, string comments, ObjectParameter errorCode)
        {
            var transposedVendorInvoiceActionIdParameter = transposedVendorInvoiceActionId.HasValue ?
                new ObjectParameter("TransposedVendorInvoiceActionId", transposedVendorInvoiceActionId) :
                new ObjectParameter("TransposedVendorInvoiceActionId", typeof(long));
    
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            var transposedByParameter = transposedBy != null ?
                new ObjectParameter("TransposedBy", transposedBy) :
                new ObjectParameter("TransposedBy", typeof(string));
    
            var transposedByUserIdParameter = transposedByUserId.HasValue ?
                new ObjectParameter("TransposedByUserId", transposedByUserId) :
                new ObjectParameter("TransposedByUserId", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_TransposeVendorInvoicePaymentbyVIActionId", transposedVendorInvoiceActionIdParameter, vendorInvoiceIdParameter, transposedByParameter, transposedByUserIdParameter, commentsParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_RptCommon_CondominiumAddress_Result> SP_DGC_RptCommon_CondominiumAddress()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_RptCommon_CondominiumAddress_Result>("SP_DGC_RptCommon_CondominiumAddress");
        }
    
        public virtual ObjectResult<SP_DGC_GetEligibileVendorInvociesForDNFwd_Result> SP_DGC_GetEligibileVendorInvociesForDNFwd(Nullable<long> debitNoteId, Nullable<long> vendorRegistrationId)
        {
            var debitNoteIdParameter = debitNoteId.HasValue ?
                new ObjectParameter("DebitNoteId", debitNoteId) :
                new ObjectParameter("DebitNoteId", typeof(long));
    
            var vendorRegistrationIdParameter = vendorRegistrationId.HasValue ?
                new ObjectParameter("VendorRegistrationId", vendorRegistrationId) :
                new ObjectParameter("VendorRegistrationId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetEligibileVendorInvociesForDNFwd_Result>("SP_DGC_GetEligibileVendorInvociesForDNFwd", debitNoteIdParameter, vendorRegistrationIdParameter);
        }
    
        public virtual int SP_DGC_SaveCreditNoteTransposeDetails(Nullable<long> creditNoteId, Nullable<long> transposedByUserId, string transposedBy, string transposeComments, ObjectParameter errorCode)
        {
            var creditNoteIdParameter = creditNoteId.HasValue ?
                new ObjectParameter("CreditNoteId", creditNoteId) :
                new ObjectParameter("CreditNoteId", typeof(long));
    
            var transposedByUserIdParameter = transposedByUserId.HasValue ?
                new ObjectParameter("TransposedByUserId", transposedByUserId) :
                new ObjectParameter("TransposedByUserId", typeof(long));
    
            var transposedByParameter = transposedBy != null ?
                new ObjectParameter("TransposedBy", transposedBy) :
                new ObjectParameter("TransposedBy", typeof(string));
    
            var transposeCommentsParameter = transposeComments != null ?
                new ObjectParameter("TransposeComments", transposeComments) :
                new ObjectParameter("TransposeComments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCreditNoteTransposeDetails", creditNoteIdParameter, transposedByUserIdParameter, transposedByParameter, transposeCommentsParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveDebitNoteTransposeDetails(Nullable<long> debitNoteId, Nullable<long> transposedByUserId, string transposedBy, string transposeComments, ObjectParameter errorCode)
        {
            var debitNoteIdParameter = debitNoteId.HasValue ?
                new ObjectParameter("DebitNoteId", debitNoteId) :
                new ObjectParameter("DebitNoteId", typeof(long));
    
            var transposedByUserIdParameter = transposedByUserId.HasValue ?
                new ObjectParameter("TransposedByUserId", transposedByUserId) :
                new ObjectParameter("TransposedByUserId", typeof(long));
    
            var transposedByParameter = transposedBy != null ?
                new ObjectParameter("TransposedBy", transposedBy) :
                new ObjectParameter("TransposedBy", typeof(string));
    
            var transposeCommentsParameter = transposeComments != null ?
                new ObjectParameter("TransposeComments", transposeComments) :
                new ObjectParameter("TransposeComments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveDebitNoteTransposeDetails", debitNoteIdParameter, transposedByUserIdParameter, transposedByParameter, transposeCommentsParameter, errorCode);
        }
    
        public virtual int SP_DGC_TransferDebitNoteBalanceToInvoice(Nullable<long> debitNoteId, Nullable<long> transferToVendorInvoiceId, Nullable<decimal> transferAmount, string transferBy, Nullable<long> transferByUserId, string transferComments, ObjectParameter errorCode)
        {
            var debitNoteIdParameter = debitNoteId.HasValue ?
                new ObjectParameter("DebitNoteId", debitNoteId) :
                new ObjectParameter("DebitNoteId", typeof(long));
    
            var transferToVendorInvoiceIdParameter = transferToVendorInvoiceId.HasValue ?
                new ObjectParameter("TransferToVendorInvoiceId", transferToVendorInvoiceId) :
                new ObjectParameter("TransferToVendorInvoiceId", typeof(long));
    
            var transferAmountParameter = transferAmount.HasValue ?
                new ObjectParameter("TransferAmount", transferAmount) :
                new ObjectParameter("TransferAmount", typeof(decimal));
    
            var transferByParameter = transferBy != null ?
                new ObjectParameter("TransferBy", transferBy) :
                new ObjectParameter("TransferBy", typeof(string));
    
            var transferByUserIdParameter = transferByUserId.HasValue ?
                new ObjectParameter("TransferByUserId", transferByUserId) :
                new ObjectParameter("TransferByUserId", typeof(long));
    
            var transferCommentsParameter = transferComments != null ?
                new ObjectParameter("TransferComments", transferComments) :
                new ObjectParameter("TransferComments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_TransferDebitNoteBalanceToInvoice", debitNoteIdParameter, transferToVendorInvoiceIdParameter, transferAmountParameter, transferByParameter, transferByUserIdParameter, transferCommentsParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitInvoiceBillDetails_Result> SP_DGC_GetAllUnitInvoiceBillDetails(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitInvoiceBillDetails_Result>("SP_DGC_GetAllUnitInvoiceBillDetails", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUNitBillSummaryByInvoiceID_Result> SP_DGC_GetUNitBillSummaryByInvoiceID(Nullable<long> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUNitBillSummaryByInvoiceID_Result>("SP_DGC_GetUNitBillSummaryByInvoiceID", invoiceIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVendorInvoiceActionDetails_Result> SP_DGC_GetAllVendorInvoiceActionDetails(Nullable<long> vendorInvoiceId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var vendorInvoiceIdParameter = vendorInvoiceId.HasValue ?
                new ObjectParameter("VendorInvoiceId", vendorInvoiceId) :
                new ObjectParameter("VendorInvoiceId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVendorInvoiceActionDetails_Result>("SP_DGC_GetAllVendorInvoiceActionDetails", vendorInvoiceIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveUnitRequestPaymentLinesForGL(Nullable<int> unitRequestItemId, Nullable<int> unitRequestTypeConfigKey, string unitRequestItem, string unitRequestLineCode, Nullable<int> linePaymentTypeConfigKey, Nullable<int> isRefundableConfigKey, string isDeposit, string isActive, Nullable<int> facilityId, Nullable<int> commercialUnitId, string updatedBy, ObjectParameter errorCode)
        {
            var unitRequestItemIdParameter = unitRequestItemId.HasValue ?
                new ObjectParameter("UnitRequestItemId", unitRequestItemId) :
                new ObjectParameter("UnitRequestItemId", typeof(int));
    
            var unitRequestTypeConfigKeyParameter = unitRequestTypeConfigKey.HasValue ?
                new ObjectParameter("UnitRequestTypeConfigKey", unitRequestTypeConfigKey) :
                new ObjectParameter("UnitRequestTypeConfigKey", typeof(int));
    
            var unitRequestItemParameter = unitRequestItem != null ?
                new ObjectParameter("UnitRequestItem", unitRequestItem) :
                new ObjectParameter("UnitRequestItem", typeof(string));
    
            var unitRequestLineCodeParameter = unitRequestLineCode != null ?
                new ObjectParameter("UnitRequestLineCode", unitRequestLineCode) :
                new ObjectParameter("UnitRequestLineCode", typeof(string));
    
            var linePaymentTypeConfigKeyParameter = linePaymentTypeConfigKey.HasValue ?
                new ObjectParameter("LinePaymentTypeConfigKey", linePaymentTypeConfigKey) :
                new ObjectParameter("LinePaymentTypeConfigKey", typeof(int));
    
            var isRefundableConfigKeyParameter = isRefundableConfigKey.HasValue ?
                new ObjectParameter("IsRefundableConfigKey", isRefundableConfigKey) :
                new ObjectParameter("IsRefundableConfigKey", typeof(int));
    
            var isDepositParameter = isDeposit != null ?
                new ObjectParameter("IsDeposit", isDeposit) :
                new ObjectParameter("IsDeposit", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            var commercialUnitIdParameter = commercialUnitId.HasValue ?
                new ObjectParameter("CommercialUnitId", commercialUnitId) :
                new ObjectParameter("CommercialUnitId", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitRequestPaymentLinesForGL", unitRequestItemIdParameter, unitRequestTypeConfigKeyParameter, unitRequestItemParameter, unitRequestLineCodeParameter, linePaymentTypeConfigKeyParameter, isRefundableConfigKeyParameter, isDepositParameter, isActiveParameter, facilityIdParameter, commercialUnitIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveUnitOpenCreditDetails(Nullable<long> unitOpenCreditId, Nullable<int> creditUnitId, Nullable<long> ownerORTenantUserID, Nullable<int> managementAccountId, Nullable<decimal> creditAmount, Nullable<System.DateTime> creditOn, Nullable<System.DateTime> actuvalCreditOn, string paymentMode, string cHEQUENUMBER, string cHEQUEIssueBankName, Nullable<System.DateTime> chequeDate, string reason, string recievedByUserName, Nullable<long> recievedByUserId, ObjectParameter errorCode, string additionalReferenceFile, Nullable<int> intialSetupId)
        {
            var unitOpenCreditIdParameter = unitOpenCreditId.HasValue ?
                new ObjectParameter("UnitOpenCreditId", unitOpenCreditId) :
                new ObjectParameter("UnitOpenCreditId", typeof(long));
    
            var creditUnitIdParameter = creditUnitId.HasValue ?
                new ObjectParameter("CreditUnitId", creditUnitId) :
                new ObjectParameter("CreditUnitId", typeof(int));
    
            var ownerORTenantUserIDParameter = ownerORTenantUserID.HasValue ?
                new ObjectParameter("OwnerORTenantUserID", ownerORTenantUserID) :
                new ObjectParameter("OwnerORTenantUserID", typeof(long));
    
            var managementAccountIdParameter = managementAccountId.HasValue ?
                new ObjectParameter("ManagementAccountId", managementAccountId) :
                new ObjectParameter("ManagementAccountId", typeof(int));
    
            var creditAmountParameter = creditAmount.HasValue ?
                new ObjectParameter("CreditAmount", creditAmount) :
                new ObjectParameter("CreditAmount", typeof(decimal));
    
            var creditOnParameter = creditOn.HasValue ?
                new ObjectParameter("CreditOn", creditOn) :
                new ObjectParameter("CreditOn", typeof(System.DateTime));
    
            var actuvalCreditOnParameter = actuvalCreditOn.HasValue ?
                new ObjectParameter("ActuvalCreditOn", actuvalCreditOn) :
                new ObjectParameter("ActuvalCreditOn", typeof(System.DateTime));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var cHEQUENUMBERParameter = cHEQUENUMBER != null ?
                new ObjectParameter("CHEQUENUMBER", cHEQUENUMBER) :
                new ObjectParameter("CHEQUENUMBER", typeof(string));
    
            var cHEQUEIssueBankNameParameter = cHEQUEIssueBankName != null ?
                new ObjectParameter("CHEQUEIssueBankName", cHEQUEIssueBankName) :
                new ObjectParameter("CHEQUEIssueBankName", typeof(string));
    
            var chequeDateParameter = chequeDate.HasValue ?
                new ObjectParameter("ChequeDate", chequeDate) :
                new ObjectParameter("ChequeDate", typeof(System.DateTime));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var recievedByUserNameParameter = recievedByUserName != null ?
                new ObjectParameter("RecievedByUserName", recievedByUserName) :
                new ObjectParameter("RecievedByUserName", typeof(string));
    
            var recievedByUserIdParameter = recievedByUserId.HasValue ?
                new ObjectParameter("RecievedByUserId", recievedByUserId) :
                new ObjectParameter("RecievedByUserId", typeof(long));
    
            var additionalReferenceFileParameter = additionalReferenceFile != null ?
                new ObjectParameter("AdditionalReferenceFile", additionalReferenceFile) :
                new ObjectParameter("AdditionalReferenceFile", typeof(string));
    
            var intialSetupIdParameter = intialSetupId.HasValue ?
                new ObjectParameter("IntialSetupId", intialSetupId) :
                new ObjectParameter("IntialSetupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitOpenCreditDetails", unitOpenCreditIdParameter, creditUnitIdParameter, ownerORTenantUserIDParameter, managementAccountIdParameter, creditAmountParameter, creditOnParameter, actuvalCreditOnParameter, paymentModeParameter, cHEQUENUMBERParameter, cHEQUEIssueBankNameParameter, chequeDateParameter, reasonParameter, recievedByUserNameParameter, recievedByUserIdParameter, errorCode, additionalReferenceFileParameter, intialSetupIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCommercialUnitLineDetailsByCommercialUnitId_Result> SP_DGC_GetCommercialUnitLineDetailsByCommercialUnitId(Nullable<int> commercialUnitId)
        {
            var commercialUnitIdParameter = commercialUnitId.HasValue ?
                new ObjectParameter("CommercialUnitId", commercialUnitId) :
                new ObjectParameter("CommercialUnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCommercialUnitLineDetailsByCommercialUnitId_Result>("SP_DGC_GetCommercialUnitLineDetailsByCommercialUnitId", commercialUnitIdParameter);
        }
    
        public virtual int SP_DGC_SaveCommercialUnitLineFeeDetails(Nullable<int> commercialUnitId, Nullable<int> shopRegId, string commercialUnitPriceInfo, string updatedBy, ObjectParameter errorCode)
        {
            var commercialUnitIdParameter = commercialUnitId.HasValue ?
                new ObjectParameter("CommercialUnitId", commercialUnitId) :
                new ObjectParameter("CommercialUnitId", typeof(int));
    
            var shopRegIdParameter = shopRegId.HasValue ?
                new ObjectParameter("ShopRegId", shopRegId) :
                new ObjectParameter("ShopRegId", typeof(int));
    
            var commercialUnitPriceInfoParameter = commercialUnitPriceInfo != null ?
                new ObjectParameter("CommercialUnitPriceInfo", commercialUnitPriceInfo) :
                new ObjectParameter("CommercialUnitPriceInfo", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCommercialUnitLineFeeDetails", commercialUnitIdParameter, shopRegIdParameter, commercialUnitPriceInfoParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetShopDepositPayItemDetails_Result> SP_DGC_GetShopDepositPayItemDetails(Nullable<long> shopRegistrationId, Nullable<int> currentStatusId)
        {
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(long));
    
            var currentStatusIdParameter = currentStatusId.HasValue ?
                new ObjectParameter("CurrentStatusId", currentStatusId) :
                new ObjectParameter("CurrentStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetShopDepositPayItemDetails_Result>("SP_DGC_GetShopDepositPayItemDetails", shopRegistrationIdParameter, currentStatusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVehicleParkingSlotSetting_Result> SP_DGC_GetAllVehicleParkingSlotSetting(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVehicleParkingSlotSetting_Result>("SP_DGC_GetAllVehicleParkingSlotSetting", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetVehicleParkingSlotBySlotID_Result> SP_DGC_GetVehicleParkingSlotBySlotID(Nullable<int> vehicleSlotId)
        {
            var vehicleSlotIdParameter = vehicleSlotId.HasValue ?
                new ObjectParameter("VehicleSlotId", vehicleSlotId) :
                new ObjectParameter("VehicleSlotId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVehicleParkingSlotBySlotID_Result>("SP_DGC_GetVehicleParkingSlotBySlotID", vehicleSlotIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveShops_Result> SP_DGC_GetActiveShops()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveShops_Result>("SP_DGC_GetActiveShops");
        }
    
        public virtual ObjectResult<SP_DGC_GetShopRegistrationById_Result> SP_DGC_GetShopRegistrationById(Nullable<int> shopRegistrationId)
        {
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetShopRegistrationById_Result>("SP_DGC_GetShopRegistrationById", shopRegistrationIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVendorRegistrationDetails_Result> SP_DGC_GetAllVendorRegistrationDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVendorRegistrationDetails_Result>("SP_DGC_GetAllVendorRegistrationDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveShopActionDetails(Nullable<int> commercialUnitId, Nullable<int> shopRegistrationId, Nullable<int> requestStatusId, string paymentInfo, string comments, string additionalReferenceFilePath, Nullable<long> actionTakenByUserId, string updatedBY, ObjectParameter errorCode, Nullable<int> previousStatusID, Nullable<System.DateTime> finalStopBillDate, ObjectParameter shopRequestActionId)
        {
            var commercialUnitIdParameter = commercialUnitId.HasValue ?
                new ObjectParameter("CommercialUnitId", commercialUnitId) :
                new ObjectParameter("CommercialUnitId", typeof(int));
    
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var finalStopBillDateParameter = finalStopBillDate.HasValue ?
                new ObjectParameter("FinalStopBillDate", finalStopBillDate) :
                new ObjectParameter("FinalStopBillDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveShopActionDetails", commercialUnitIdParameter, shopRegistrationIdParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, additionalReferenceFilePathParameter, actionTakenByUserIdParameter, updatedBYParameter, errorCode, previousStatusIDParameter, finalStopBillDateParameter, shopRequestActionId);
        }
    
        public virtual int SP_DGC_SaveShopRegistration_Payment_LedgerDetails(Nullable<int> shopRegistrationId, Nullable<long> sRActionId, string receivedByUser, ObjectParameter errorCode)
        {
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            var sRActionIdParameter = sRActionId.HasValue ?
                new ObjectParameter("SRActionId", sRActionId) :
                new ObjectParameter("SRActionId", typeof(long));
    
            var receivedByUserParameter = receivedByUser != null ?
                new ObjectParameter("ReceivedByUser", receivedByUser) :
                new ObjectParameter("ReceivedByUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveShopRegistration_Payment_LedgerDetails", shopRegistrationIdParameter, sRActionIdParameter, receivedByUserParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveShopRegistration_PaymentRefund_LedgerDetails(Nullable<int> shopRegistrationId, Nullable<long> requestActionId, string receivedByUser, ObjectParameter errorCode)
        {
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            var requestActionIdParameter = requestActionId.HasValue ?
                new ObjectParameter("RequestActionId", requestActionId) :
                new ObjectParameter("RequestActionId", typeof(long));
    
            var receivedByUserParameter = receivedByUser != null ?
                new ObjectParameter("ReceivedByUser", receivedByUser) :
                new ObjectParameter("ReceivedByUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveShopRegistration_PaymentRefund_LedgerDetails", shopRegistrationIdParameter, requestActionIdParameter, receivedByUserParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetVendorRegistrationDetailsById_Result> SP_DGC_GetVendorRegistrationDetailsById(Nullable<long> vendorRegId)
        {
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVendorRegistrationDetailsById_Result>("SP_DGC_GetVendorRegistrationDetailsById", vendorRegIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetShopDepositRefundItemDetails_Result> SP_DGC_GetShopDepositRefundItemDetails(Nullable<long> shopRegistrationId, Nullable<int> currentStatusId)
        {
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(long));
    
            var currentStatusIdParameter = currentStatusId.HasValue ?
                new ObjectParameter("CurrentStatusId", currentStatusId) :
                new ObjectParameter("CurrentStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetShopDepositRefundItemDetails_Result>("SP_DGC_GetShopDepositRefundItemDetails", shopRegistrationIdParameter, currentStatusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_UnitInvoiceDuesummerybyBillcode_Result> SP_DGC_UnitInvoiceDuesummerybyBillcode(Nullable<int> unitId, string billCode)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var billCodeParameter = billCode != null ?
                new ObjectParameter("BillCode", billCode) :
                new ObjectParameter("BillCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_UnitInvoiceDuesummerybyBillcode_Result>("SP_DGC_UnitInvoiceDuesummerybyBillcode", unitIdParameter, billCodeParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveNonStockItems_Result> SP_DGC_GetActiveNonStockItems()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveNonStockItems_Result>("SP_DGC_GetActiveNonStockItems");
        }
    
        public virtual int SP_DGC_SaveVoucherPayment_LedgerDetails(Nullable<long> voucherPaymentId, string paidByUser, ObjectParameter errorCode)
        {
            var voucherPaymentIdParameter = voucherPaymentId.HasValue ?
                new ObjectParameter("VoucherPaymentId", voucherPaymentId) :
                new ObjectParameter("VoucherPaymentId", typeof(long));
    
            var paidByUserParameter = paidByUser != null ?
                new ObjectParameter("PaidByUser", paidByUser) :
                new ObjectParameter("PaidByUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVoucherPayment_LedgerDetails", voucherPaymentIdParameter, paidByUserParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveVoucherPaymentDetails(string voucherNumber, Nullable<System.DateTime> voucherPaymentDate, Nullable<decimal> voucherPaidAmount, string voucherIssueToCatagory, Nullable<long> voucherIssueToRequestId, string voucherIssueToOtherName, string paymentInfo, string voucherComments, Nullable<long> voucherPaidByUserId, string updatedBY, ObjectParameter errorCode, ObjectParameter voucherPaymentId)
        {
            var voucherNumberParameter = voucherNumber != null ?
                new ObjectParameter("VoucherNumber", voucherNumber) :
                new ObjectParameter("VoucherNumber", typeof(string));
    
            var voucherPaymentDateParameter = voucherPaymentDate.HasValue ?
                new ObjectParameter("VoucherPaymentDate", voucherPaymentDate) :
                new ObjectParameter("VoucherPaymentDate", typeof(System.DateTime));
    
            var voucherPaidAmountParameter = voucherPaidAmount.HasValue ?
                new ObjectParameter("VoucherPaidAmount", voucherPaidAmount) :
                new ObjectParameter("VoucherPaidAmount", typeof(decimal));
    
            var voucherIssueToCatagoryParameter = voucherIssueToCatagory != null ?
                new ObjectParameter("VoucherIssueToCatagory", voucherIssueToCatagory) :
                new ObjectParameter("VoucherIssueToCatagory", typeof(string));
    
            var voucherIssueToRequestIdParameter = voucherIssueToRequestId.HasValue ?
                new ObjectParameter("VoucherIssueToRequestId", voucherIssueToRequestId) :
                new ObjectParameter("VoucherIssueToRequestId", typeof(long));
    
            var voucherIssueToOtherNameParameter = voucherIssueToOtherName != null ?
                new ObjectParameter("VoucherIssueToOtherName", voucherIssueToOtherName) :
                new ObjectParameter("VoucherIssueToOtherName", typeof(string));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var voucherCommentsParameter = voucherComments != null ?
                new ObjectParameter("VoucherComments", voucherComments) :
                new ObjectParameter("VoucherComments", typeof(string));
    
            var voucherPaidByUserIdParameter = voucherPaidByUserId.HasValue ?
                new ObjectParameter("VoucherPaidByUserId", voucherPaidByUserId) :
                new ObjectParameter("VoucherPaidByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVoucherPaymentDetails", voucherNumberParameter, voucherPaymentDateParameter, voucherPaidAmountParameter, voucherIssueToCatagoryParameter, voucherIssueToRequestIdParameter, voucherIssueToOtherNameParameter, paymentInfoParameter, voucherCommentsParameter, voucherPaidByUserIdParameter, updatedBYParameter, errorCode, voucherPaymentId);
        }
    
        public virtual int SP_DGC_TransposeVoucherPayment(Nullable<long> voucherPaymentId, string transposedBy, Nullable<long> transposedByUserId, string comments, ObjectParameter errorCode)
        {
            var voucherPaymentIdParameter = voucherPaymentId.HasValue ?
                new ObjectParameter("VoucherPaymentId", voucherPaymentId) :
                new ObjectParameter("VoucherPaymentId", typeof(long));
    
            var transposedByParameter = transposedBy != null ?
                new ObjectParameter("TransposedBy", transposedBy) :
                new ObjectParameter("TransposedBy", typeof(string));
    
            var transposedByUserIdParameter = transposedByUserId.HasValue ?
                new ObjectParameter("TransposedByUserId", transposedByUserId) :
                new ObjectParameter("TransposedByUserId", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_TransposeVoucherPayment", voucherPaymentIdParameter, transposedByParameter, transposedByUserIdParameter, commentsParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVoucherPaymentDetails_Result> SP_DGC_GetAllVoucherPaymentDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVoucherPaymentDetails_Result>("SP_DGC_GetAllVoucherPaymentDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveGeneralLedgerEntryDetails(Nullable<long> generalLedgerId, Nullable<int> fromGLAccountItemid, Nullable<int> toGLAccountItemId, Nullable<System.DateTime> transactionDate, string transactionReason, Nullable<decimal> glAmount, string createdBy, ObjectParameter errorCode)
        {
            var generalLedgerIdParameter = generalLedgerId.HasValue ?
                new ObjectParameter("GeneralLedgerId", generalLedgerId) :
                new ObjectParameter("GeneralLedgerId", typeof(long));
    
            var fromGLAccountItemidParameter = fromGLAccountItemid.HasValue ?
                new ObjectParameter("FromGLAccountItemid", fromGLAccountItemid) :
                new ObjectParameter("FromGLAccountItemid", typeof(int));
    
            var toGLAccountItemIdParameter = toGLAccountItemId.HasValue ?
                new ObjectParameter("ToGLAccountItemId", toGLAccountItemId) :
                new ObjectParameter("ToGLAccountItemId", typeof(int));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var transactionReasonParameter = transactionReason != null ?
                new ObjectParameter("TransactionReason", transactionReason) :
                new ObjectParameter("TransactionReason", typeof(string));
    
            var glAmountParameter = glAmount.HasValue ?
                new ObjectParameter("GlAmount", glAmount) :
                new ObjectParameter("GlAmount", typeof(decimal));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveGeneralLedgerEntryDetails", generalLedgerIdParameter, fromGLAccountItemidParameter, toGLAccountItemIdParameter, transactionDateParameter, transactionReasonParameter, glAmountParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllGeneralLedgerEntryDetails_Result> SP_DGC_GetAllGeneralLedgerEntryDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllGeneralLedgerEntryDetails_Result>("SP_DGC_GetAllGeneralLedgerEntryDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveTaxCodes_Result> SP_DGC_GetActiveTaxCodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveTaxCodes_Result>("SP_DGC_GetActiveTaxCodes");
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveCourtsAndTrainersByFacilitiesId_Result> SP_DGC_GetActiveCourtsAndTrainersByFacilitiesId(Nullable<int> facilitiesId, string facilityCategory)
        {
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(int));
    
            var facilityCategoryParameter = facilityCategory != null ?
                new ObjectParameter("FacilityCategory", facilityCategory) :
                new ObjectParameter("FacilityCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveCourtsAndTrainersByFacilitiesId_Result>("SP_DGC_GetActiveCourtsAndTrainersByFacilitiesId", facilitiesIdParameter, facilityCategoryParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveCondoFacilities_Result> SP_DGC_GetActiveCondoFacilities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveCondoFacilities_Result>("SP_DGC_GetActiveCondoFacilities");
        }
    
        public virtual ObjectResult<SP_DGC_GetVoucherPaymentDetailsByPaymentId_Result> SP_DGC_GetVoucherPaymentDetailsByPaymentId(Nullable<long> voucherPaymentId)
        {
            var voucherPaymentIdParameter = voucherPaymentId.HasValue ?
                new ObjectParameter("VoucherPaymentId", voucherPaymentId) :
                new ObjectParameter("VoucherPaymentId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVoucherPaymentDetailsByPaymentId_Result>("SP_DGC_GetVoucherPaymentDetailsByPaymentId", voucherPaymentIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveFacilityLineDetailsByFacilityId_Result> SP_DGC_GetActiveFacilityLineDetailsByFacilityId(Nullable<int> facilityId)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveFacilityLineDetailsByFacilityId_Result>("SP_DGC_GetActiveFacilityLineDetailsByFacilityId", facilityIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityBookFeePayItemDetails_Result> SP_DGC_GetFacilityBookFeePayItemDetails(Nullable<long> facilityBookingRequestId, Nullable<int> currentStatusId)
        {
            var facilityBookingRequestIdParameter = facilityBookingRequestId.HasValue ?
                new ObjectParameter("FacilityBookingRequestId", facilityBookingRequestId) :
                new ObjectParameter("FacilityBookingRequestId", typeof(long));
    
            var currentStatusIdParameter = currentStatusId.HasValue ?
                new ObjectParameter("CurrentStatusId", currentStatusId) :
                new ObjectParameter("CurrentStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityBookFeePayItemDetails_Result>("SP_DGC_GetFacilityBookFeePayItemDetails", facilityBookingRequestIdParameter, currentStatusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityBookingFeeRefundItemDetails_Result> SP_DGC_GetFacilityBookingFeeRefundItemDetails(Nullable<long> condoFacilityBookingId, Nullable<int> currentStatusId)
        {
            var condoFacilityBookingIdParameter = condoFacilityBookingId.HasValue ?
                new ObjectParameter("CondoFacilityBookingId", condoFacilityBookingId) :
                new ObjectParameter("CondoFacilityBookingId", typeof(long));
    
            var currentStatusIdParameter = currentStatusId.HasValue ?
                new ObjectParameter("CurrentStatusId", currentStatusId) :
                new ObjectParameter("CurrentStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityBookingFeeRefundItemDetails_Result>("SP_DGC_GetFacilityBookingFeeRefundItemDetails", condoFacilityBookingIdParameter, currentStatusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUNitInvoiceBillSummeryByUnitID_Result> SP_DGC_GetUNitInvoiceBillSummeryByUnitID(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUNitInvoiceBillSummeryByUnitID_Result>("SP_DGC_GetUNitInvoiceBillSummeryByUnitID", unitIdParameter);
        }
    
        public virtual int SP_DGC_SaveUnitDueRemainder_MailsentList(Nullable<int> dueRemainderId, Nullable<int> unitId, string notificationType, Nullable<long> notifiedByUserId, Nullable<long> notifiedToReceiptance, string notifiedByUser, Nullable<System.DateTime> notifiedOn, ObjectParameter errorCode)
        {
            var dueRemainderIdParameter = dueRemainderId.HasValue ?
                new ObjectParameter("DueRemainderId", dueRemainderId) :
                new ObjectParameter("DueRemainderId", typeof(int));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var notificationTypeParameter = notificationType != null ?
                new ObjectParameter("NotificationType", notificationType) :
                new ObjectParameter("NotificationType", typeof(string));
    
            var notifiedByUserIdParameter = notifiedByUserId.HasValue ?
                new ObjectParameter("NotifiedByUserId", notifiedByUserId) :
                new ObjectParameter("NotifiedByUserId", typeof(long));
    
            var notifiedToReceiptanceParameter = notifiedToReceiptance.HasValue ?
                new ObjectParameter("NotifiedToReceiptance", notifiedToReceiptance) :
                new ObjectParameter("NotifiedToReceiptance", typeof(long));
    
            var notifiedByUserParameter = notifiedByUser != null ?
                new ObjectParameter("NotifiedByUser", notifiedByUser) :
                new ObjectParameter("NotifiedByUser", typeof(string));
    
            var notifiedOnParameter = notifiedOn.HasValue ?
                new ObjectParameter("NotifiedOn", notifiedOn) :
                new ObjectParameter("NotifiedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitDueRemainder_MailsentList", dueRemainderIdParameter, unitIdParameter, notificationTypeParameter, notifiedByUserIdParameter, notifiedToReceiptanceParameter, notifiedByUserParameter, notifiedOnParameter, errorCode);
        }
    
        public virtual int SP_DGC_CommercialUnitInvoice_PaymentByBalance(Nullable<int> unitId, Nullable<int> shopRegistrationId, string isFullPaid, Nullable<decimal> paidAmount, string comments, string paymentMode, string bankName, string chequeNumber, string additionalReferencePath, string paymentReciptPath, Nullable<long> paidByUserId, string paidBy, Nullable<long> recievedByUserId, Nullable<System.DateTime> chequeDate, Nullable<System.DateTime> actualPaymentDate, string recievedBy, Nullable<int> managementAccountId, ObjectParameter errorCode)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            var isFullPaidParameter = isFullPaid != null ?
                new ObjectParameter("IsFullPaid", isFullPaid) :
                new ObjectParameter("IsFullPaid", typeof(string));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(decimal));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var chequeNumberParameter = chequeNumber != null ?
                new ObjectParameter("ChequeNumber", chequeNumber) :
                new ObjectParameter("ChequeNumber", typeof(string));
    
            var additionalReferencePathParameter = additionalReferencePath != null ?
                new ObjectParameter("AdditionalReferencePath", additionalReferencePath) :
                new ObjectParameter("AdditionalReferencePath", typeof(string));
    
            var paymentReciptPathParameter = paymentReciptPath != null ?
                new ObjectParameter("PaymentReciptPath", paymentReciptPath) :
                new ObjectParameter("PaymentReciptPath", typeof(string));
    
            var paidByUserIdParameter = paidByUserId.HasValue ?
                new ObjectParameter("PaidByUserId", paidByUserId) :
                new ObjectParameter("PaidByUserId", typeof(long));
    
            var paidByParameter = paidBy != null ?
                new ObjectParameter("PaidBy", paidBy) :
                new ObjectParameter("PaidBy", typeof(string));
    
            var recievedByUserIdParameter = recievedByUserId.HasValue ?
                new ObjectParameter("RecievedByUserId", recievedByUserId) :
                new ObjectParameter("RecievedByUserId", typeof(long));
    
            var chequeDateParameter = chequeDate.HasValue ?
                new ObjectParameter("ChequeDate", chequeDate) :
                new ObjectParameter("ChequeDate", typeof(System.DateTime));
    
            var actualPaymentDateParameter = actualPaymentDate.HasValue ?
                new ObjectParameter("ActualPaymentDate", actualPaymentDate) :
                new ObjectParameter("ActualPaymentDate", typeof(System.DateTime));
    
            var recievedByParameter = recievedBy != null ?
                new ObjectParameter("RecievedBy", recievedBy) :
                new ObjectParameter("RecievedBy", typeof(string));
    
            var managementAccountIdParameter = managementAccountId.HasValue ?
                new ObjectParameter("ManagementAccountId", managementAccountId) :
                new ObjectParameter("ManagementAccountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_CommercialUnitInvoice_PaymentByBalance", unitIdParameter, shopRegistrationIdParameter, isFullPaidParameter, paidAmountParameter, commentsParameter, paymentModeParameter, bankNameParameter, chequeNumberParameter, additionalReferencePathParameter, paymentReciptPathParameter, paidByUserIdParameter, paidByParameter, recievedByUserIdParameter, chequeDateParameter, actualPaymentDateParameter, recievedByParameter, managementAccountIdParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetCommercialUNitInvoiceBillSummeryByUnitID_Result> SP_DGC_GetCommercialUNitInvoiceBillSummeryByUnitID(Nullable<int> unitId, Nullable<int> shopregistrationid)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var shopregistrationidParameter = shopregistrationid.HasValue ?
                new ObjectParameter("shopregistrationid", shopregistrationid) :
                new ObjectParameter("shopregistrationid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCommercialUNitInvoiceBillSummeryByUnitID_Result>("SP_DGC_GetCommercialUNitInvoiceBillSummeryByUnitID", unitIdParameter, shopregistrationidParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllRequestForQuotation_Result> SP_DGC_GetAllRequestForQuotation(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllRequestForQuotation_Result>("SP_DGC_GetAllRequestForQuotation", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_GetInitialRFQDetails(Nullable<int> rFQID, string createdBy, ObjectParameter rFQNumber, ObjectParameter currentRFQId)
        {
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_GetInitialRFQDetails", rFQIDParameter, createdByParameter, rFQNumber, currentRFQId);
        }
    
        public virtual ObjectResult<SP_DGC_GetWorkOrdersDetailsbyId_Result> SP_DGC_GetWorkOrdersDetailsbyId(Nullable<int> rFQID, Nullable<long> rFQApprovedQuotesId, string createdBy, ObjectParameter currentWorkOrderId, ObjectParameter currentWPONumber)
        {
            var rFQIDParameter = rFQID.HasValue ?
                new ObjectParameter("RFQID", rFQID) :
                new ObjectParameter("RFQID", typeof(int));
    
            var rFQApprovedQuotesIdParameter = rFQApprovedQuotesId.HasValue ?
                new ObjectParameter("RFQApprovedQuotesId", rFQApprovedQuotesId) :
                new ObjectParameter("RFQApprovedQuotesId", typeof(long));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetWorkOrdersDetailsbyId_Result>("SP_DGC_GetWorkOrdersDetailsbyId", rFQIDParameter, rFQApprovedQuotesIdParameter, createdByParameter, currentWorkOrderId, currentWPONumber);
        }
    
        public virtual ObjectResult<SP_DGC_GetLastInvoicePaymentDetailsByUnitId_Result> SP_DGC_GetLastInvoicePaymentDetailsByUnitId(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLastInvoicePaymentDetailsByUnitId_Result>("SP_DGC_GetLastInvoicePaymentDetailsByUnitId", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_CommercialUnitInvoiceDuesummerybyBillcode_Result> SP_DGC_CommercialUnitInvoiceDuesummerybyBillcode(Nullable<int> unitId, string billCode)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var billCodeParameter = billCode != null ?
                new ObjectParameter("BillCode", billCode) :
                new ObjectParameter("BillCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_CommercialUnitInvoiceDuesummerybyBillcode_Result>("SP_DGC_CommercialUnitInvoiceDuesummerybyBillcode", unitIdParameter, billCodeParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCommercialUnitLinePackagePriceDetailsByUnitId_Result> SP_DGC_GetCommercialUnitLinePackagePriceDetailsByUnitId(Nullable<int> commercialUnitId, string isShowAllFuturePrice)
        {
            var commercialUnitIdParameter = commercialUnitId.HasValue ?
                new ObjectParameter("CommercialUnitId", commercialUnitId) :
                new ObjectParameter("CommercialUnitId", typeof(int));
    
            var isShowAllFuturePriceParameter = isShowAllFuturePrice != null ?
                new ObjectParameter("IsShowAllFuturePrice", isShowAllFuturePrice) :
                new ObjectParameter("IsShowAllFuturePrice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCommercialUnitLinePackagePriceDetailsByUnitId_Result>("SP_DGC_GetCommercialUnitLinePackagePriceDetailsByUnitId", commercialUnitIdParameter, isShowAllFuturePriceParameter);
        }
    
        public virtual int SP_DGC_SaveUnitRequestItemFeeDetails(string unitRequestItemPriceInfo, string updatedBy, ObjectParameter errorCode)
        {
            var unitRequestItemPriceInfoParameter = unitRequestItemPriceInfo != null ?
                new ObjectParameter("UnitRequestItemPriceInfo", unitRequestItemPriceInfo) :
                new ObjectParameter("UnitRequestItemPriceInfo", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitRequestItemFeeDetails", unitRequestItemPriceInfoParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetClampFeeDetails_Result> SP_DGC_GetClampFeeDetails(string isShowAllFuturePrice)
        {
            var isShowAllFuturePriceParameter = isShowAllFuturePrice != null ?
                new ObjectParameter("IsShowAllFuturePrice", isShowAllFuturePrice) :
                new ObjectParameter("IsShowAllFuturePrice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetClampFeeDetails_Result>("SP_DGC_GetClampFeeDetails", isShowAllFuturePriceParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveNonVisitorSlots_Result> SP_DGC_GetActiveNonVisitorSlots(Nullable<System.DateTime> bookingRequestDate)
        {
            var bookingRequestDateParameter = bookingRequestDate.HasValue ?
                new ObjectParameter("BookingRequestDate", bookingRequestDate) :
                new ObjectParameter("BookingRequestDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveNonVisitorSlots_Result>("SP_DGC_GetActiveNonVisitorSlots", bookingRequestDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllShopRegistrationDetails_Result> SP_DGC_GetAllShopRegistrationDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllShopRegistrationDetails_Result>("SP_DGC_GetAllShopRegistrationDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveShopRegistrationDetails(Nullable<int> shopRegistrationId, Nullable<int> unitId, Nullable<decimal> rentalAmount, Nullable<decimal> depositAmount, string companyName, string companyAddress, string companyPhoneNumber, string companyFaxNumber, string companyEmail, Nullable<System.DateTime> contractFrom, Nullable<System.DateTime> contractTo, string rentalAgreementDocumentPath, string shopType, string remarks, Nullable<int> vacationNoticePeriodInDays, string updatedBy, ObjectParameter errorCode, Nullable<int> shopSetupId)
        {
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var rentalAmountParameter = rentalAmount.HasValue ?
                new ObjectParameter("RentalAmount", rentalAmount) :
                new ObjectParameter("RentalAmount", typeof(decimal));
    
            var depositAmountParameter = depositAmount.HasValue ?
                new ObjectParameter("DepositAmount", depositAmount) :
                new ObjectParameter("DepositAmount", typeof(decimal));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyAddressParameter = companyAddress != null ?
                new ObjectParameter("CompanyAddress", companyAddress) :
                new ObjectParameter("CompanyAddress", typeof(string));
    
            var companyPhoneNumberParameter = companyPhoneNumber != null ?
                new ObjectParameter("CompanyPhoneNumber", companyPhoneNumber) :
                new ObjectParameter("CompanyPhoneNumber", typeof(string));
    
            var companyFaxNumberParameter = companyFaxNumber != null ?
                new ObjectParameter("CompanyFaxNumber", companyFaxNumber) :
                new ObjectParameter("CompanyFaxNumber", typeof(string));
    
            var companyEmailParameter = companyEmail != null ?
                new ObjectParameter("CompanyEmail", companyEmail) :
                new ObjectParameter("CompanyEmail", typeof(string));
    
            var contractFromParameter = contractFrom.HasValue ?
                new ObjectParameter("ContractFrom", contractFrom) :
                new ObjectParameter("ContractFrom", typeof(System.DateTime));
    
            var contractToParameter = contractTo.HasValue ?
                new ObjectParameter("ContractTo", contractTo) :
                new ObjectParameter("ContractTo", typeof(System.DateTime));
    
            var rentalAgreementDocumentPathParameter = rentalAgreementDocumentPath != null ?
                new ObjectParameter("RentalAgreementDocumentPath", rentalAgreementDocumentPath) :
                new ObjectParameter("RentalAgreementDocumentPath", typeof(string));
    
            var shopTypeParameter = shopType != null ?
                new ObjectParameter("ShopType", shopType) :
                new ObjectParameter("ShopType", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var vacationNoticePeriodInDaysParameter = vacationNoticePeriodInDays.HasValue ?
                new ObjectParameter("VacationNoticePeriodInDays", vacationNoticePeriodInDays) :
                new ObjectParameter("VacationNoticePeriodInDays", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var shopSetupIdParameter = shopSetupId.HasValue ?
                new ObjectParameter("shopSetupId", shopSetupId) :
                new ObjectParameter("shopSetupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveShopRegistrationDetails", shopRegistrationIdParameter, unitIdParameter, rentalAmountParameter, depositAmountParameter, companyNameParameter, companyAddressParameter, companyPhoneNumberParameter, companyFaxNumberParameter, companyEmailParameter, contractFromParameter, contractToParameter, rentalAgreementDocumentPathParameter, shopTypeParameter, remarksParameter, vacationNoticePeriodInDaysParameter, updatedByParameter, errorCode, shopSetupIdParameter);
        }
    
        public virtual int SP_DGC_ApprovalWorkOrder(Nullable<int> workOrderId, Nullable<int> minutesOfMeetingId, Nullable<int> statusID, string actionTakenBy, Nullable<long> actionTakenByUserid, string comment, ObjectParameter errorCode)
        {
            var workOrderIdParameter = workOrderId.HasValue ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(int));
    
            var minutesOfMeetingIdParameter = minutesOfMeetingId.HasValue ?
                new ObjectParameter("MinutesOfMeetingId", minutesOfMeetingId) :
                new ObjectParameter("MinutesOfMeetingId", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var actionTakenByParameter = actionTakenBy != null ?
                new ObjectParameter("ActionTakenBy", actionTakenBy) :
                new ObjectParameter("ActionTakenBy", typeof(string));
    
            var actionTakenByUseridParameter = actionTakenByUserid.HasValue ?
                new ObjectParameter("ActionTakenByUserid", actionTakenByUserid) :
                new ObjectParameter("ActionTakenByUserid", typeof(long));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_ApprovalWorkOrder", workOrderIdParameter, minutesOfMeetingIdParameter, statusIDParameter, actionTakenByParameter, actionTakenByUseridParameter, commentParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetUserDetailsByCentralUserId_Result> SP_DGC_GetUserDetailsByCentralUserId(Nullable<long> centralUserId)
        {
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUserDetailsByCentralUserId_Result>("SP_DGC_GetUserDetailsByCentralUserId", centralUserIdParameter);
        }
    
        public virtual int SP_DGC_SaveVendorPICDetails(Nullable<int> vendorPICId, Nullable<int> vendorRegId, Nullable<long> picUserID, Nullable<int> vDepartmentId, Nullable<long> picCentralisedUserId, string pICName, string pICEmail, string pICMobileNumber, string isActive, string createdBy, ObjectParameter errorCode, string countryCode)
        {
            var vendorPICIdParameter = vendorPICId.HasValue ?
                new ObjectParameter("VendorPICId", vendorPICId) :
                new ObjectParameter("VendorPICId", typeof(int));
    
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(int));
    
            var picUserIDParameter = picUserID.HasValue ?
                new ObjectParameter("PicUserID", picUserID) :
                new ObjectParameter("PicUserID", typeof(long));
    
            var vDepartmentIdParameter = vDepartmentId.HasValue ?
                new ObjectParameter("VDepartmentId", vDepartmentId) :
                new ObjectParameter("VDepartmentId", typeof(int));
    
            var picCentralisedUserIdParameter = picCentralisedUserId.HasValue ?
                new ObjectParameter("PicCentralisedUserId", picCentralisedUserId) :
                new ObjectParameter("PicCentralisedUserId", typeof(long));
    
            var pICNameParameter = pICName != null ?
                new ObjectParameter("PICName", pICName) :
                new ObjectParameter("PICName", typeof(string));
    
            var pICEmailParameter = pICEmail != null ?
                new ObjectParameter("PICEmail", pICEmail) :
                new ObjectParameter("PICEmail", typeof(string));
    
            var pICMobileNumberParameter = pICMobileNumber != null ?
                new ObjectParameter("PICMobileNumber", pICMobileNumber) :
                new ObjectParameter("PICMobileNumber", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVendorPICDetails", vendorPICIdParameter, vendorRegIdParameter, picUserIDParameter, vDepartmentIdParameter, picCentralisedUserIdParameter, pICNameParameter, pICEmailParameter, pICMobileNumberParameter, isActiveParameter, createdByParameter, errorCode, countryCodeParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUserDetailsById_Result> SP_DGC_GetUserDetailsById(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUserDetailsById_Result>("SP_DGC_GetUserDetailsById", userIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetHallDetailsForNext60Days_Result> SP_DGC_GetHallDetailsForNext60Days(Nullable<System.DateTime> todaysClientDate)
        {
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetHallDetailsForNext60Days_Result>("SP_DGC_GetHallDetailsForNext60Days", todaysClientDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetMonthWiseHallBookingDates_Result> SP_DGC_GetMonthWiseHallBookingDates(string bookingMonth, Nullable<System.DateTime> todaysClientDate)
        {
            var bookingMonthParameter = bookingMonth != null ?
                new ObjectParameter("BookingMonth", bookingMonth) :
                new ObjectParameter("BookingMonth", typeof(string));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetMonthWiseHallBookingDates_Result>("SP_DGC_GetMonthWiseHallBookingDates", bookingMonthParameter, todaysClientDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCurrentActiveCommiteeMembers_Result> SP_DGC_GetCurrentActiveCommiteeMembers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCurrentActiveCommiteeMembers_Result>("SP_DGC_GetCurrentActiveCommiteeMembers");
        }
    
        public virtual ObjectResult<SP_DGC_GetVisitorParkingSlots_Result> SP_DGC_GetVisitorParkingSlots()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVisitorParkingSlots_Result>("SP_DGC_GetVisitorParkingSlots");
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityBookingDetailsForNext60Days_Result> SP_DGC_GetFacilityBookingDetailsForNext60Days(Nullable<System.DateTime> todaysClientDate, Nullable<int> facilityId)
        {
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityBookingDetailsForNext60Days_Result>("SP_DGC_GetFacilityBookingDetailsForNext60Days", todaysClientDateParameter, facilityIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetMonthWiseFacilityBookingDates_Result> SP_DGC_GetMonthWiseFacilityBookingDates(string bookingMonth, Nullable<System.DateTime> todaysClientDate, Nullable<int> facilityId)
        {
            var bookingMonthParameter = bookingMonth != null ?
                new ObjectParameter("BookingMonth", bookingMonth) :
                new ObjectParameter("BookingMonth", typeof(string));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetMonthWiseFacilityBookingDates_Result>("SP_DGC_GetMonthWiseFacilityBookingDates", bookingMonthParameter, todaysClientDateParameter, facilityIdParameter);
        }
    
        public virtual int SP_DGC_SaveUserDetails(Nullable<long> userId, string userName, string isMalaysian, string iCorPassportNumber, string userVisaExpirity, Nullable<int> roleId, string userAddress, string userEmail, string userMobileNumber, Nullable<int> userCountryId, string userProfilePath, string currentPassword, string isActive, string isLoginRequired, Nullable<long> centralUserId, string addressLine1, string addressLine2, string addressLine3, string city, string addressState, string postalCode, string updatedBy, ObjectParameter errorCode, string countryMobileCode)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isMalaysianParameter = isMalaysian != null ?
                new ObjectParameter("IsMalaysian", isMalaysian) :
                new ObjectParameter("IsMalaysian", typeof(string));
    
            var iCorPassportNumberParameter = iCorPassportNumber != null ?
                new ObjectParameter("ICorPassportNumber", iCorPassportNumber) :
                new ObjectParameter("ICorPassportNumber", typeof(string));
    
            var userVisaExpirityParameter = userVisaExpirity != null ?
                new ObjectParameter("UserVisaExpirity", userVisaExpirity) :
                new ObjectParameter("UserVisaExpirity", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var userAddressParameter = userAddress != null ?
                new ObjectParameter("UserAddress", userAddress) :
                new ObjectParameter("UserAddress", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var userMobileNumberParameter = userMobileNumber != null ?
                new ObjectParameter("UserMobileNumber", userMobileNumber) :
                new ObjectParameter("UserMobileNumber", typeof(string));
    
            var userCountryIdParameter = userCountryId.HasValue ?
                new ObjectParameter("UserCountryId", userCountryId) :
                new ObjectParameter("UserCountryId", typeof(int));
    
            var userProfilePathParameter = userProfilePath != null ?
                new ObjectParameter("UserProfilePath", userProfilePath) :
                new ObjectParameter("UserProfilePath", typeof(string));
    
            var currentPasswordParameter = currentPassword != null ?
                new ObjectParameter("CurrentPassword", currentPassword) :
                new ObjectParameter("CurrentPassword", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var isLoginRequiredParameter = isLoginRequired != null ?
                new ObjectParameter("IsLoginRequired", isLoginRequired) :
                new ObjectParameter("IsLoginRequired", typeof(string));
    
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("AddressLine2", addressLine2) :
                new ObjectParameter("AddressLine2", typeof(string));
    
            var addressLine3Parameter = addressLine3 != null ?
                new ObjectParameter("AddressLine3", addressLine3) :
                new ObjectParameter("AddressLine3", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var addressStateParameter = addressState != null ?
                new ObjectParameter("AddressState", addressState) :
                new ObjectParameter("AddressState", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var countryMobileCodeParameter = countryMobileCode != null ?
                new ObjectParameter("CountryMobileCode", countryMobileCode) :
                new ObjectParameter("CountryMobileCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUserDetails", userIdParameter, userNameParameter, isMalaysianParameter, iCorPassportNumberParameter, userVisaExpirityParameter, roleIdParameter, userAddressParameter, userEmailParameter, userMobileNumberParameter, userCountryIdParameter, userProfilePathParameter, currentPasswordParameter, isActiveParameter, isLoginRequiredParameter, centralUserIdParameter, addressLine1Parameter, addressLine2Parameter, addressLine3Parameter, cityParameter, addressStateParameter, postalCodeParameter, updatedByParameter, errorCode, countryMobileCodeParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetNonStockItemCollectionByNonstockId_Result> SP_DGC_GetNonStockItemCollectionByNonstockId(Nullable<int> nonStockItemId)
        {
            var nonStockItemIdParameter = nonStockItemId.HasValue ?
                new ObjectParameter("NonStockItemId", nonStockItemId) :
                new ObjectParameter("NonStockItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetNonStockItemCollectionByNonstockId_Result>("SP_DGC_GetNonStockItemCollectionByNonstockId", nonStockItemIdParameter);
        }
    
        public virtual int SP_DGC_SaveNonStockItemCollectionDetails(Nullable<int> nonStockItemId, string isCollection, Nullable<int> bIllTypeId, string createdBy, ObjectParameter errorCode)
        {
            var nonStockItemIdParameter = nonStockItemId.HasValue ?
                new ObjectParameter("NonStockItemId", nonStockItemId) :
                new ObjectParameter("NonStockItemId", typeof(int));
    
            var isCollectionParameter = isCollection != null ?
                new ObjectParameter("IsCollection", isCollection) :
                new ObjectParameter("IsCollection", typeof(string));
    
            var bIllTypeIdParameter = bIllTypeId.HasValue ?
                new ObjectParameter("BIllTypeId", bIllTypeId) :
                new ObjectParameter("BIllTypeId", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveNonStockItemCollectionDetails", nonStockItemIdParameter, isCollectionParameter, bIllTypeIdParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_UnitDueReminder_Result> SP_DGC_UnitDueReminder(Nullable<decimal> dueRangeFrom, Nullable<decimal> dueRangeTo)
        {
            var dueRangeFromParameter = dueRangeFrom.HasValue ?
                new ObjectParameter("DueRangeFrom", dueRangeFrom) :
                new ObjectParameter("DueRangeFrom", typeof(decimal));
    
            var dueRangeToParameter = dueRangeTo.HasValue ?
                new ObjectParameter("DueRangeTo", dueRangeTo) :
                new ObjectParameter("DueRangeTo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_UnitDueReminder_Result>("SP_DGC_UnitDueReminder", dueRangeFromParameter, dueRangeToParameter);
        }
    
        public virtual int SP_DGC_IntialSetup_SaveExpenseProcessDetails(string expenseDetails, string createdBy, ObjectParameter errorCode)
        {
            var expenseDetailsParameter = expenseDetails != null ?
                new ObjectParameter("ExpenseDetails", expenseDetails) :
                new ObjectParameter("ExpenseDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_SaveExpenseProcessDetails", expenseDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_IntialSetup_SaveUnitInvoiceBillDueProcessDetails(string unitInvoiceDueDetails, string createdBy, ObjectParameter errorCode)
        {
            var unitInvoiceDueDetailsParameter = unitInvoiceDueDetails != null ?
                new ObjectParameter("UnitInvoiceDueDetails", unitInvoiceDueDetails) :
                new ObjectParameter("UnitInvoiceDueDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_SaveUnitInvoiceBillDueProcessDetails", unitInvoiceDueDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_IntialSetup_GetAllLedgerProcessDetails_Result> SP_DGC_IntialSetup_GetAllLedgerProcessDetails(ObjectParameter actualTotalRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_IntialSetup_GetAllLedgerProcessDetails_Result>("SP_DGC_IntialSetup_GetAllLedgerProcessDetails", actualTotalRecords);
        }
    
        public virtual int SP_DGC_IntialSetup_SaveLedgerProcessDetails(string ledgerDetails, string createdBy, ObjectParameter errorCode)
        {
            var ledgerDetailsParameter = ledgerDetails != null ?
                new ObjectParameter("LedgerDetails", ledgerDetails) :
                new ObjectParameter("LedgerDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_SaveLedgerProcessDetails", ledgerDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_IntialSetup_GetAllShopProcessDetails_Result> SP_DGC_IntialSetup_GetAllShopProcessDetails(ObjectParameter actualTotalRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_IntialSetup_GetAllShopProcessDetails_Result>("SP_DGC_IntialSetup_GetAllShopProcessDetails", actualTotalRecords);
        }
    
        public virtual int SP_DGC_IntialSetup_SaveShopProcessDetails(string shopDetails, string createdBy, ObjectParameter errorCode)
        {
            var shopDetailsParameter = shopDetails != null ?
                new ObjectParameter("ShopDetails", shopDetails) :
                new ObjectParameter("ShopDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_SaveShopProcessDetails", shopDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_IntialSetup_SaveVendorCompanyProcessDetails(string vendoeCompanyDetails, string createdBy, ObjectParameter errorCode)
        {
            var vendoeCompanyDetailsParameter = vendoeCompanyDetails != null ?
                new ObjectParameter("VendoeCompanyDetails", vendoeCompanyDetails) :
                new ObjectParameter("VendoeCompanyDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_SaveVendorCompanyProcessDetails", vendoeCompanyDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_Setup_SaveHallBookingDetails(string hallBookingDetails, string createdBy, ObjectParameter errorCode)
        {
            var hallBookingDetailsParameter = hallBookingDetails != null ?
                new ObjectParameter("HallBookingDetails", hallBookingDetails) :
                new ObjectParameter("HallBookingDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Setup_SaveHallBookingDetails", hallBookingDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_InitialSetUp_ShopProcess(Nullable<int> shopSetUpId, string processedBy, ObjectParameter errorCode)
        {
            var shopSetUpIdParameter = shopSetUpId.HasValue ?
                new ObjectParameter("ShopSetUpId", shopSetUpId) :
                new ObjectParameter("ShopSetUpId", typeof(int));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_ShopProcess", shopSetUpIdParameter, processedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_InitialSetUp_UnitDueProcess(Nullable<int> dueSetupId, Nullable<long> processeUserByUserId, string processedBy, Nullable<int> waterBillDuemapid, Nullable<int> maintananceBillDuemapid, Nullable<int> landAssesmentBillDuemapid, Nullable<int> insuranceBillDuemapid, Nullable<int> sinkingFundBillDuemapid, ObjectParameter errorCode)
        {
            var dueSetupIdParameter = dueSetupId.HasValue ?
                new ObjectParameter("DueSetupId", dueSetupId) :
                new ObjectParameter("DueSetupId", typeof(int));
    
            var processeUserByUserIdParameter = processeUserByUserId.HasValue ?
                new ObjectParameter("ProcesseUserByUserId", processeUserByUserId) :
                new ObjectParameter("ProcesseUserByUserId", typeof(long));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            var waterBillDuemapidParameter = waterBillDuemapid.HasValue ?
                new ObjectParameter("waterBillDuemapid", waterBillDuemapid) :
                new ObjectParameter("waterBillDuemapid", typeof(int));
    
            var maintananceBillDuemapidParameter = maintananceBillDuemapid.HasValue ?
                new ObjectParameter("MaintananceBillDuemapid", maintananceBillDuemapid) :
                new ObjectParameter("MaintananceBillDuemapid", typeof(int));
    
            var landAssesmentBillDuemapidParameter = landAssesmentBillDuemapid.HasValue ?
                new ObjectParameter("LandAssesmentBillDuemapid", landAssesmentBillDuemapid) :
                new ObjectParameter("LandAssesmentBillDuemapid", typeof(int));
    
            var insuranceBillDuemapidParameter = insuranceBillDuemapid.HasValue ?
                new ObjectParameter("InsuranceBillDuemapid", insuranceBillDuemapid) :
                new ObjectParameter("InsuranceBillDuemapid", typeof(int));
    
            var sinkingFundBillDuemapidParameter = sinkingFundBillDuemapid.HasValue ?
                new ObjectParameter("SinkingFundBillDuemapid", sinkingFundBillDuemapid) :
                new ObjectParameter("SinkingFundBillDuemapid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_UnitDueProcess", dueSetupIdParameter, processeUserByUserIdParameter, processedByParameter, waterBillDuemapidParameter, maintananceBillDuemapidParameter, landAssesmentBillDuemapidParameter, insuranceBillDuemapidParameter, sinkingFundBillDuemapidParameter, errorCode);
        }
    
        public virtual int SP_DGC_IntialSetup_GetUnitBillDueGlMapIds(ObjectParameter waterBillDuemapid, ObjectParameter maintananceBillDuemapid, ObjectParameter landAssesmentBillDuemapid, ObjectParameter insuranceBillDuemapid, ObjectParameter sinkingFundBillDuemapid)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_GetUnitBillDueGlMapIds", waterBillDuemapid, maintananceBillDuemapid, landAssesmentBillDuemapid, insuranceBillDuemapid, sinkingFundBillDuemapid);
        }
    
        public virtual ObjectResult<SP_DGC_InitialSetUp_GetAllShopPaymentSetupDetails_Result> SP_DGC_InitialSetUp_GetAllShopPaymentSetupDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_InitialSetUp_GetAllShopPaymentSetupDetails_Result>("SP_DGC_InitialSetUp_GetAllShopPaymentSetupDetails");
        }
    
        public virtual int SP_DGC_InitialSetUp_SaveShopPaymentSetupDetails(string shopDetails, string createdBy, ObjectParameter errorCode)
        {
            var shopDetailsParameter = shopDetails != null ?
                new ObjectParameter("ShopDetails", shopDetails) :
                new ObjectParameter("ShopDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_SaveShopPaymentSetupDetails", shopDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_InitialSetUp_ShopPaymentProcessByShopSetupid(Nullable<int> shopSetupId, string processedBy, Nullable<long> processedByUserid, ObjectParameter errorCode)
        {
            var shopSetupIdParameter = shopSetupId.HasValue ?
                new ObjectParameter("ShopSetupId", shopSetupId) :
                new ObjectParameter("ShopSetupId", typeof(int));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            var processedByUseridParameter = processedByUserid.HasValue ?
                new ObjectParameter("ProcessedByUserid", processedByUserid) :
                new ObjectParameter("ProcessedByUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_ShopPaymentProcessByShopSetupid", shopSetupIdParameter, processedByParameter, processedByUseridParameter, errorCode);
        }
    
        public virtual int SP_DGC_InitialSetUp_TenantReqeustProcessBySetupId(Nullable<int> tenantSetupId, string processedBy, Nullable<long> processedByUserid, ObjectParameter errorCode)
        {
            var tenantSetupIdParameter = tenantSetupId.HasValue ?
                new ObjectParameter("TenantSetupId", tenantSetupId) :
                new ObjectParameter("TenantSetupId", typeof(int));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            var processedByUseridParameter = processedByUserid.HasValue ?
                new ObjectParameter("ProcessedByUserid", processedByUserid) :
                new ObjectParameter("ProcessedByUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_TenantReqeustProcessBySetupId", tenantSetupIdParameter, processedByParameter, processedByUseridParameter, errorCode);
        }
    
        public virtual int SP_DGC_IntialSetup_SaveTenantProcessDetails(string tenantDetails, string createdBy, ObjectParameter errorCode)
        {
            var tenantDetailsParameter = tenantDetails != null ?
                new ObjectParameter("TenantDetails", tenantDetails) :
                new ObjectParameter("TenantDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_SaveTenantProcessDetails", tenantDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_InitialSetUp_VendorCompanyRegistrationProcess(Nullable<int> vendorSetUpId, string processedBy, ObjectParameter errorCode, string processStage)
        {
            var vendorSetUpIdParameter = vendorSetUpId.HasValue ?
                new ObjectParameter("VendorSetUpId", vendorSetUpId) :
                new ObjectParameter("VendorSetUpId", typeof(int));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            var processStageParameter = processStage != null ?
                new ObjectParameter("processStage", processStage) :
                new ObjectParameter("processStage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_VendorCompanyRegistrationProcess", vendorSetUpIdParameter, processedByParameter, errorCode, processStageParameter);
        }
    
        public virtual ObjectResult<SP_DGC_IntialSetup_GetAllUnitInvoiceBillDueProcessDetails_Result> SP_DGC_IntialSetup_GetAllUnitInvoiceBillDueProcessDetails(ObjectParameter actualTotalRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_IntialSetup_GetAllUnitInvoiceBillDueProcessDetails_Result>("SP_DGC_IntialSetup_GetAllUnitInvoiceBillDueProcessDetails", actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveVendorRegistrationDetails(Nullable<long> vendorRegId, Nullable<int> departmentId, string companyName, string companyAddress, string companyPhoneNumber, string companyFaxNumber, string companyEMail, Nullable<long> pICUserId, Nullable<System.DateTime> vendorContractFrom, Nullable<System.DateTime> vendorContractTo, Nullable<int> suppliedNoOfPeople, string vendorAgreementFilePath, string isActive, string companyGstNo, Nullable<int> vendorServiceTypeId, Nullable<int> utilityTypeId, string otherUtilityName, string addressLine1, string addressLine2, string addressLine3, string city, string addressState, string postalCode, Nullable<int> companyAccountNo, string updatedBy, ObjectParameter errorCode, Nullable<int> setUpId)
        {
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(long));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyAddressParameter = companyAddress != null ?
                new ObjectParameter("CompanyAddress", companyAddress) :
                new ObjectParameter("CompanyAddress", typeof(string));
    
            var companyPhoneNumberParameter = companyPhoneNumber != null ?
                new ObjectParameter("CompanyPhoneNumber", companyPhoneNumber) :
                new ObjectParameter("CompanyPhoneNumber", typeof(string));
    
            var companyFaxNumberParameter = companyFaxNumber != null ?
                new ObjectParameter("CompanyFaxNumber", companyFaxNumber) :
                new ObjectParameter("CompanyFaxNumber", typeof(string));
    
            var companyEMailParameter = companyEMail != null ?
                new ObjectParameter("CompanyEMail", companyEMail) :
                new ObjectParameter("CompanyEMail", typeof(string));
    
            var pICUserIdParameter = pICUserId.HasValue ?
                new ObjectParameter("PICUserId", pICUserId) :
                new ObjectParameter("PICUserId", typeof(long));
    
            var vendorContractFromParameter = vendorContractFrom.HasValue ?
                new ObjectParameter("VendorContractFrom", vendorContractFrom) :
                new ObjectParameter("VendorContractFrom", typeof(System.DateTime));
    
            var vendorContractToParameter = vendorContractTo.HasValue ?
                new ObjectParameter("VendorContractTo", vendorContractTo) :
                new ObjectParameter("VendorContractTo", typeof(System.DateTime));
    
            var suppliedNoOfPeopleParameter = suppliedNoOfPeople.HasValue ?
                new ObjectParameter("SuppliedNoOfPeople", suppliedNoOfPeople) :
                new ObjectParameter("SuppliedNoOfPeople", typeof(int));
    
            var vendorAgreementFilePathParameter = vendorAgreementFilePath != null ?
                new ObjectParameter("VendorAgreementFilePath", vendorAgreementFilePath) :
                new ObjectParameter("VendorAgreementFilePath", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var companyGstNoParameter = companyGstNo != null ?
                new ObjectParameter("CompanyGstNo", companyGstNo) :
                new ObjectParameter("CompanyGstNo", typeof(string));
    
            var vendorServiceTypeIdParameter = vendorServiceTypeId.HasValue ?
                new ObjectParameter("VendorServiceTypeId", vendorServiceTypeId) :
                new ObjectParameter("VendorServiceTypeId", typeof(int));
    
            var utilityTypeIdParameter = utilityTypeId.HasValue ?
                new ObjectParameter("UtilityTypeId", utilityTypeId) :
                new ObjectParameter("UtilityTypeId", typeof(int));
    
            var otherUtilityNameParameter = otherUtilityName != null ?
                new ObjectParameter("OtherUtilityName", otherUtilityName) :
                new ObjectParameter("OtherUtilityName", typeof(string));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("AddressLine2", addressLine2) :
                new ObjectParameter("AddressLine2", typeof(string));
    
            var addressLine3Parameter = addressLine3 != null ?
                new ObjectParameter("AddressLine3", addressLine3) :
                new ObjectParameter("AddressLine3", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var addressStateParameter = addressState != null ?
                new ObjectParameter("AddressState", addressState) :
                new ObjectParameter("AddressState", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var companyAccountNoParameter = companyAccountNo.HasValue ?
                new ObjectParameter("CompanyAccountNo", companyAccountNo) :
                new ObjectParameter("CompanyAccountNo", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var setUpIdParameter = setUpId.HasValue ?
                new ObjectParameter("SetUpId", setUpId) :
                new ObjectParameter("SetUpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVendorRegistrationDetails", vendorRegIdParameter, departmentIdParameter, companyNameParameter, companyAddressParameter, companyPhoneNumberParameter, companyFaxNumberParameter, companyEMailParameter, pICUserIdParameter, vendorContractFromParameter, vendorContractToParameter, suppliedNoOfPeopleParameter, vendorAgreementFilePathParameter, isActiveParameter, companyGstNoParameter, vendorServiceTypeIdParameter, utilityTypeIdParameter, otherUtilityNameParameter, addressLine1Parameter, addressLine2Parameter, addressLine3Parameter, cityParameter, addressStateParameter, postalCodeParameter, companyAccountNoParameter, updatedByParameter, errorCode, setUpIdParameter);
        }
    
        public virtual int SP_DGC_InitialSetUp_ExpensesetUpProcess(Nullable<int> expenseSetUpId, string processedBy, ObjectParameter errorCode)
        {
            var expenseSetUpIdParameter = expenseSetUpId.HasValue ?
                new ObjectParameter("ExpenseSetUpId", expenseSetUpId) :
                new ObjectParameter("ExpenseSetUpId", typeof(int));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_ExpensesetUpProcess", expenseSetUpIdParameter, processedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_IntialSetup_GetAllExpenseProcessDetails_Result> SP_DGC_IntialSetup_GetAllExpenseProcessDetails(ObjectParameter actualTotalRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_IntialSetup_GetAllExpenseProcessDetails_Result>("SP_DGC_IntialSetup_GetAllExpenseProcessDetails", actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveNonStockItemDetails(Nullable<int> nonStockItemId, string nonstockItemName, string itemDescription, string isActive, string createdBy, ObjectParameter errorCode, Nullable<int> expenseSetUpId)
        {
            var nonStockItemIdParameter = nonStockItemId.HasValue ?
                new ObjectParameter("NonStockItemId", nonStockItemId) :
                new ObjectParameter("NonStockItemId", typeof(int));
    
            var nonstockItemNameParameter = nonstockItemName != null ?
                new ObjectParameter("NonstockItemName", nonstockItemName) :
                new ObjectParameter("NonstockItemName", typeof(string));
    
            var itemDescriptionParameter = itemDescription != null ?
                new ObjectParameter("ItemDescription", itemDescription) :
                new ObjectParameter("ItemDescription", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            var expenseSetUpIdParameter = expenseSetUpId.HasValue ?
                new ObjectParameter("ExpenseSetUpId", expenseSetUpId) :
                new ObjectParameter("ExpenseSetUpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveNonStockItemDetails", nonStockItemIdParameter, nonstockItemNameParameter, itemDescriptionParameter, isActiveParameter, createdByParameter, errorCode, expenseSetUpIdParameter);
        }
    
        public virtual int SP_DGC_InitialSetUp_FacilityBookingRequestProcessBySetupID(Nullable<int> facilityRequestSetupID, string facilityPriceIds, string processedBy, Nullable<long> paymentReceviedByUserid, ObjectParameter errorCode)
        {
            var facilityRequestSetupIDParameter = facilityRequestSetupID.HasValue ?
                new ObjectParameter("FacilityRequestSetupID", facilityRequestSetupID) :
                new ObjectParameter("FacilityRequestSetupID", typeof(int));
    
            var facilityPriceIdsParameter = facilityPriceIds != null ?
                new ObjectParameter("FacilityPriceIds", facilityPriceIds) :
                new ObjectParameter("FacilityPriceIds", typeof(string));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            var paymentReceviedByUseridParameter = paymentReceviedByUserid.HasValue ?
                new ObjectParameter("PaymentReceviedByUserid", paymentReceviedByUserid) :
                new ObjectParameter("PaymentReceviedByUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_FacilityBookingRequestProcessBySetupID", facilityRequestSetupIDParameter, facilityPriceIdsParameter, processedByParameter, paymentReceviedByUseridParameter, errorCode);
        }
    
        public virtual int SP_DGC_InitialSetUp_ParkingRequestProcessBySetupID(Nullable<int> parkingRequestSetupID, string vehicleParkPriceIds, string processedBy, Nullable<long> paymentReceviedByUserid, ObjectParameter errorCode)
        {
            var parkingRequestSetupIDParameter = parkingRequestSetupID.HasValue ?
                new ObjectParameter("ParkingRequestSetupID", parkingRequestSetupID) :
                new ObjectParameter("ParkingRequestSetupID", typeof(int));
    
            var vehicleParkPriceIdsParameter = vehicleParkPriceIds != null ?
                new ObjectParameter("VehicleParkPriceIds", vehicleParkPriceIds) :
                new ObjectParameter("VehicleParkPriceIds", typeof(string));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            var paymentReceviedByUseridParameter = paymentReceviedByUserid.HasValue ?
                new ObjectParameter("PaymentReceviedByUserid", paymentReceviedByUserid) :
                new ObjectParameter("PaymentReceviedByUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_ParkingRequestProcessBySetupID", parkingRequestSetupIDParameter, vehicleParkPriceIdsParameter, processedByParameter, paymentReceviedByUseridParameter, errorCode);
        }
    
        public virtual int SP_DGC_IntialSetup_SaveFacilityRequestSetupDetails(string fBRequestDetails, string createdBy, ObjectParameter errorCode)
        {
            var fBRequestDetailsParameter = fBRequestDetails != null ?
                new ObjectParameter("FBRequestDetails", fBRequestDetails) :
                new ObjectParameter("FBRequestDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_SaveFacilityRequestSetupDetails", fBRequestDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_IntialSetup_SavePaidPrkingRequestSetupDetails(string parkingRequestDetails, string createdBy, ObjectParameter errorCode)
        {
            var parkingRequestDetailsParameter = parkingRequestDetails != null ?
                new ObjectParameter("ParkingRequestDetails", parkingRequestDetails) :
                new ObjectParameter("ParkingRequestDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_SavePaidPrkingRequestSetupDetails", parkingRequestDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_InitialSetUp_GetAllTenantSetupDetails_Result> SP_DGC_InitialSetUp_GetAllTenantSetupDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_InitialSetUp_GetAllTenantSetupDetails_Result>("SP_DGC_InitialSetUp_GetAllTenantSetupDetails");
        }
    
        public virtual int SP_DGC_SaveUnitPurchaseRequestDetails(Nullable<long> unitPurchaseRequestId, Nullable<int> unitId, Nullable<long> ownerUserId, string isSelfOccupied, string ownerAddress, Nullable<System.DateTime> unitPurchaseDate, string sPAFilePath, string ownerUserName, string ownerMobileNumber, string ownerEmail, string ownerIsMalaysian, string ownerICorPassportNumber, string ownerVisaExpirity, Nullable<int> ownerCountryId, string ownerProfilePath, string currentPassword, string isActive, Nullable<System.DateTime> occupiedFrom, Nullable<System.DateTime> vacatingDate, Nullable<long> ownerCentralUserId, string addressLine1, string addressLine2, string addressLine3, string city, string addressState, string postalCode, string updatedBy, ObjectParameter errorCode, ObjectParameter isNewUser, ObjectParameter condomiumName, Nullable<decimal> openingBalance, Nullable<System.DateTime> openingBalanceAsOnDate, string countryCode, Nullable<int> ownerSetupID)
        {
            var unitPurchaseRequestIdParameter = unitPurchaseRequestId.HasValue ?
                new ObjectParameter("UnitPurchaseRequestId", unitPurchaseRequestId) :
                new ObjectParameter("UnitPurchaseRequestId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var ownerUserIdParameter = ownerUserId.HasValue ?
                new ObjectParameter("OwnerUserId", ownerUserId) :
                new ObjectParameter("OwnerUserId", typeof(long));
    
            var isSelfOccupiedParameter = isSelfOccupied != null ?
                new ObjectParameter("IsSelfOccupied", isSelfOccupied) :
                new ObjectParameter("IsSelfOccupied", typeof(string));
    
            var ownerAddressParameter = ownerAddress != null ?
                new ObjectParameter("OwnerAddress", ownerAddress) :
                new ObjectParameter("OwnerAddress", typeof(string));
    
            var unitPurchaseDateParameter = unitPurchaseDate.HasValue ?
                new ObjectParameter("UnitPurchaseDate", unitPurchaseDate) :
                new ObjectParameter("UnitPurchaseDate", typeof(System.DateTime));
    
            var sPAFilePathParameter = sPAFilePath != null ?
                new ObjectParameter("SPAFilePath", sPAFilePath) :
                new ObjectParameter("SPAFilePath", typeof(string));
    
            var ownerUserNameParameter = ownerUserName != null ?
                new ObjectParameter("OwnerUserName", ownerUserName) :
                new ObjectParameter("OwnerUserName", typeof(string));
    
            var ownerMobileNumberParameter = ownerMobileNumber != null ?
                new ObjectParameter("OwnerMobileNumber", ownerMobileNumber) :
                new ObjectParameter("OwnerMobileNumber", typeof(string));
    
            var ownerEmailParameter = ownerEmail != null ?
                new ObjectParameter("OwnerEmail", ownerEmail) :
                new ObjectParameter("OwnerEmail", typeof(string));
    
            var ownerIsMalaysianParameter = ownerIsMalaysian != null ?
                new ObjectParameter("OwnerIsMalaysian", ownerIsMalaysian) :
                new ObjectParameter("OwnerIsMalaysian", typeof(string));
    
            var ownerICorPassportNumberParameter = ownerICorPassportNumber != null ?
                new ObjectParameter("OwnerICorPassportNumber", ownerICorPassportNumber) :
                new ObjectParameter("OwnerICorPassportNumber", typeof(string));
    
            var ownerVisaExpirityParameter = ownerVisaExpirity != null ?
                new ObjectParameter("OwnerVisaExpirity", ownerVisaExpirity) :
                new ObjectParameter("OwnerVisaExpirity", typeof(string));
    
            var ownerCountryIdParameter = ownerCountryId.HasValue ?
                new ObjectParameter("OwnerCountryId", ownerCountryId) :
                new ObjectParameter("OwnerCountryId", typeof(int));
    
            var ownerProfilePathParameter = ownerProfilePath != null ?
                new ObjectParameter("OwnerProfilePath", ownerProfilePath) :
                new ObjectParameter("OwnerProfilePath", typeof(string));
    
            var currentPasswordParameter = currentPassword != null ?
                new ObjectParameter("CurrentPassword", currentPassword) :
                new ObjectParameter("CurrentPassword", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var occupiedFromParameter = occupiedFrom.HasValue ?
                new ObjectParameter("OccupiedFrom", occupiedFrom) :
                new ObjectParameter("OccupiedFrom", typeof(System.DateTime));
    
            var vacatingDateParameter = vacatingDate.HasValue ?
                new ObjectParameter("VacatingDate", vacatingDate) :
                new ObjectParameter("VacatingDate", typeof(System.DateTime));
    
            var ownerCentralUserIdParameter = ownerCentralUserId.HasValue ?
                new ObjectParameter("OwnerCentralUserId", ownerCentralUserId) :
                new ObjectParameter("OwnerCentralUserId", typeof(long));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("AddressLine2", addressLine2) :
                new ObjectParameter("AddressLine2", typeof(string));
    
            var addressLine3Parameter = addressLine3 != null ?
                new ObjectParameter("AddressLine3", addressLine3) :
                new ObjectParameter("AddressLine3", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var addressStateParameter = addressState != null ?
                new ObjectParameter("AddressState", addressState) :
                new ObjectParameter("AddressState", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var openingBalanceParameter = openingBalance.HasValue ?
                new ObjectParameter("OpeningBalance", openingBalance) :
                new ObjectParameter("OpeningBalance", typeof(decimal));
    
            var openingBalanceAsOnDateParameter = openingBalanceAsOnDate.HasValue ?
                new ObjectParameter("OpeningBalanceAsOnDate", openingBalanceAsOnDate) :
                new ObjectParameter("OpeningBalanceAsOnDate", typeof(System.DateTime));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var ownerSetupIDParameter = ownerSetupID.HasValue ?
                new ObjectParameter("OwnerSetupID", ownerSetupID) :
                new ObjectParameter("OwnerSetupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitPurchaseRequestDetails", unitPurchaseRequestIdParameter, unitIdParameter, ownerUserIdParameter, isSelfOccupiedParameter, ownerAddressParameter, unitPurchaseDateParameter, sPAFilePathParameter, ownerUserNameParameter, ownerMobileNumberParameter, ownerEmailParameter, ownerIsMalaysianParameter, ownerICorPassportNumberParameter, ownerVisaExpirityParameter, ownerCountryIdParameter, ownerProfilePathParameter, currentPasswordParameter, isActiveParameter, occupiedFromParameter, vacatingDateParameter, ownerCentralUserIdParameter, addressLine1Parameter, addressLine2Parameter, addressLine3Parameter, cityParameter, addressStateParameter, postalCodeParameter, updatedByParameter, errorCode, isNewUser, condomiumName, openingBalanceParameter, openingBalanceAsOnDateParameter, countryCodeParameter, ownerSetupIDParameter);
        }
    
        public virtual int SP_DGC_SaveUnitTenantRequestDetails(Nullable<long> unitTenantRequestId, Nullable<long> unitPurchaseRequestId, Nullable<int> unitId, Nullable<long> tenantUserId, Nullable<System.DateTime> tenantOccupiedFrom, Nullable<int> numberOfLivingPeople, string tenantCompanyName, Nullable<System.DateTime> tenancyAgreementDate, Nullable<System.DateTime> tenantOccupiedTo, string rentalAgreementFilePath, string tenantUserName, string tenantMobileNumber, string tenantEmail, string tenantIsMalaysian, string tenantICorPassportNumber, string tenantVisaExpirity, Nullable<int> tenantCountryId, string tenantProfilePath, string currentPassword, string isActive, Nullable<long> tenantCentralUserId, string updatedBy, ObjectParameter errorCode, ObjectParameter isNewUser, ObjectParameter condomiumName, string countryCode, Nullable<int> tenantSetupId)
        {
            var unitTenantRequestIdParameter = unitTenantRequestId.HasValue ?
                new ObjectParameter("UnitTenantRequestId", unitTenantRequestId) :
                new ObjectParameter("UnitTenantRequestId", typeof(long));
    
            var unitPurchaseRequestIdParameter = unitPurchaseRequestId.HasValue ?
                new ObjectParameter("UnitPurchaseRequestId", unitPurchaseRequestId) :
                new ObjectParameter("UnitPurchaseRequestId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var tenantUserIdParameter = tenantUserId.HasValue ?
                new ObjectParameter("TenantUserId", tenantUserId) :
                new ObjectParameter("TenantUserId", typeof(long));
    
            var tenantOccupiedFromParameter = tenantOccupiedFrom.HasValue ?
                new ObjectParameter("TenantOccupiedFrom", tenantOccupiedFrom) :
                new ObjectParameter("TenantOccupiedFrom", typeof(System.DateTime));
    
            var numberOfLivingPeopleParameter = numberOfLivingPeople.HasValue ?
                new ObjectParameter("NumberOfLivingPeople", numberOfLivingPeople) :
                new ObjectParameter("NumberOfLivingPeople", typeof(int));
    
            var tenantCompanyNameParameter = tenantCompanyName != null ?
                new ObjectParameter("TenantCompanyName", tenantCompanyName) :
                new ObjectParameter("TenantCompanyName", typeof(string));
    
            var tenancyAgreementDateParameter = tenancyAgreementDate.HasValue ?
                new ObjectParameter("TenancyAgreementDate", tenancyAgreementDate) :
                new ObjectParameter("TenancyAgreementDate", typeof(System.DateTime));
    
            var tenantOccupiedToParameter = tenantOccupiedTo.HasValue ?
                new ObjectParameter("TenantOccupiedTo", tenantOccupiedTo) :
                new ObjectParameter("TenantOccupiedTo", typeof(System.DateTime));
    
            var rentalAgreementFilePathParameter = rentalAgreementFilePath != null ?
                new ObjectParameter("RentalAgreementFilePath", rentalAgreementFilePath) :
                new ObjectParameter("RentalAgreementFilePath", typeof(string));
    
            var tenantUserNameParameter = tenantUserName != null ?
                new ObjectParameter("TenantUserName", tenantUserName) :
                new ObjectParameter("TenantUserName", typeof(string));
    
            var tenantMobileNumberParameter = tenantMobileNumber != null ?
                new ObjectParameter("TenantMobileNumber", tenantMobileNumber) :
                new ObjectParameter("TenantMobileNumber", typeof(string));
    
            var tenantEmailParameter = tenantEmail != null ?
                new ObjectParameter("TenantEmail", tenantEmail) :
                new ObjectParameter("TenantEmail", typeof(string));
    
            var tenantIsMalaysianParameter = tenantIsMalaysian != null ?
                new ObjectParameter("TenantIsMalaysian", tenantIsMalaysian) :
                new ObjectParameter("TenantIsMalaysian", typeof(string));
    
            var tenantICorPassportNumberParameter = tenantICorPassportNumber != null ?
                new ObjectParameter("TenantICorPassportNumber", tenantICorPassportNumber) :
                new ObjectParameter("TenantICorPassportNumber", typeof(string));
    
            var tenantVisaExpirityParameter = tenantVisaExpirity != null ?
                new ObjectParameter("TenantVisaExpirity", tenantVisaExpirity) :
                new ObjectParameter("TenantVisaExpirity", typeof(string));
    
            var tenantCountryIdParameter = tenantCountryId.HasValue ?
                new ObjectParameter("TenantCountryId", tenantCountryId) :
                new ObjectParameter("TenantCountryId", typeof(int));
    
            var tenantProfilePathParameter = tenantProfilePath != null ?
                new ObjectParameter("TenantProfilePath", tenantProfilePath) :
                new ObjectParameter("TenantProfilePath", typeof(string));
    
            var currentPasswordParameter = currentPassword != null ?
                new ObjectParameter("CurrentPassword", currentPassword) :
                new ObjectParameter("CurrentPassword", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var tenantCentralUserIdParameter = tenantCentralUserId.HasValue ?
                new ObjectParameter("TenantCentralUserId", tenantCentralUserId) :
                new ObjectParameter("TenantCentralUserId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var tenantSetupIdParameter = tenantSetupId.HasValue ?
                new ObjectParameter("TenantSetupId", tenantSetupId) :
                new ObjectParameter("TenantSetupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitTenantRequestDetails", unitTenantRequestIdParameter, unitPurchaseRequestIdParameter, unitIdParameter, tenantUserIdParameter, tenantOccupiedFromParameter, numberOfLivingPeopleParameter, tenantCompanyNameParameter, tenancyAgreementDateParameter, tenantOccupiedToParameter, rentalAgreementFilePathParameter, tenantUserNameParameter, tenantMobileNumberParameter, tenantEmailParameter, tenantIsMalaysianParameter, tenantICorPassportNumberParameter, tenantVisaExpirityParameter, tenantCountryIdParameter, tenantProfilePathParameter, currentPasswordParameter, isActiveParameter, tenantCentralUserIdParameter, updatedByParameter, errorCode, isNewUser, condomiumName, countryCodeParameter, tenantSetupIdParameter);
        }
    
        public virtual int SP_DGC_InitialSetUp_AccessCardsRequestProcessBySetupID(Nullable<int> accessCardRequestSetupID, string processedBy, Nullable<long> paymentReceviedByUserid, ObjectParameter errorCode)
        {
            var accessCardRequestSetupIDParameter = accessCardRequestSetupID.HasValue ?
                new ObjectParameter("AccessCardRequestSetupID", accessCardRequestSetupID) :
                new ObjectParameter("AccessCardRequestSetupID", typeof(int));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            var paymentReceviedByUseridParameter = paymentReceviedByUserid.HasValue ?
                new ObjectParameter("PaymentReceviedByUserid", paymentReceviedByUserid) :
                new ObjectParameter("PaymentReceviedByUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_AccessCardsRequestProcessBySetupID", accessCardRequestSetupIDParameter, processedByParameter, paymentReceviedByUseridParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_InitialSetUp_GetAccessCardsRequestDetailsByAccessGoodsId_Result> SP_DGC_InitialSetUp_GetAccessCardsRequestDetailsByAccessGoodsId(Nullable<int> typeOfAccessGoodsId)
        {
            var typeOfAccessGoodsIdParameter = typeOfAccessGoodsId.HasValue ?
                new ObjectParameter("TypeOfAccessGoodsId", typeOfAccessGoodsId) :
                new ObjectParameter("TypeOfAccessGoodsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_InitialSetUp_GetAccessCardsRequestDetailsByAccessGoodsId_Result>("SP_DGC_InitialSetUp_GetAccessCardsRequestDetailsByAccessGoodsId", typeOfAccessGoodsIdParameter);
        }
    
        public virtual int SP_DGC_InitialSetUp_LedgerProcessByLedgerSetupId(Nullable<int> ledgerSetupId, string processedBy, ObjectParameter errorCode)
        {
            var ledgerSetupIdParameter = ledgerSetupId.HasValue ?
                new ObjectParameter("LedgerSetupId", ledgerSetupId) :
                new ObjectParameter("LedgerSetupId", typeof(int));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_LedgerProcessByLedgerSetupId", ledgerSetupIdParameter, processedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeactivateAsset(Nullable<int> assetId, string deActiveComment, string deActivatedBy, ObjectParameter errorCode)
        {
            var assetIdParameter = assetId.HasValue ?
                new ObjectParameter("AssetId", assetId) :
                new ObjectParameter("AssetId", typeof(int));
    
            var deActiveCommentParameter = deActiveComment != null ?
                new ObjectParameter("DeActiveComment", deActiveComment) :
                new ObjectParameter("DeActiveComment", typeof(string));
    
            var deActivatedByParameter = deActivatedBy != null ?
                new ObjectParameter("DeActivatedBy", deActivatedBy) :
                new ObjectParameter("DeActivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeactivateAsset", assetIdParameter, deActiveCommentParameter, deActivatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_DeleteAssetsPurchaseLineItemByLineId(Nullable<int> assetsPurchaseLineID)
        {
            var assetsPurchaseLineIDParameter = assetsPurchaseLineID.HasValue ?
                new ObjectParameter("AssetsPurchaseLineID", assetsPurchaseLineID) :
                new ObjectParameter("AssetsPurchaseLineID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteAssetsPurchaseLineItemByLineId", assetsPurchaseLineIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveAssets_Result> SP_DGC_GetActiveAssets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveAssets_Result>("SP_DGC_GetActiveAssets");
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveSuppliers_Result> SP_DGC_GetActiveSuppliers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveSuppliers_Result>("SP_DGC_GetActiveSuppliers");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllAssetsPurchaseDetails_Result> SP_DGC_GetAllAssetsPurchaseDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllAssetsPurchaseDetails_Result>("SP_DGC_GetAllAssetsPurchaseDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllAssetsPurchaseLineItemDetails_Result> SP_DGC_GetAllAssetsPurchaseLineItemDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, Nullable<long> assetPurchaseId, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllAssetsPurchaseLineItemDetails_Result>("SP_DGC_GetAllAssetsPurchaseLineItemDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, assetPurchaseIdParameter, actualTotalRecords);
        }
    
        public virtual int SP_DGC_SaveAssetsPurchaseLineItemDetails(Nullable<int> assetsPurchaseLineID, Nullable<long> assetPurchaseId, string lineNumber, string lineItemDescription, Nullable<decimal> basePricePerUnit, Nullable<decimal> taxAmountPerUnit, Nullable<decimal> discountAmountPerUnit, Nullable<int> totalNumberOfAssets, Nullable<decimal> lineTotalAmount, Nullable<int> assetId, string createdBy, ObjectParameter errorCode)
        {
            var assetsPurchaseLineIDParameter = assetsPurchaseLineID.HasValue ?
                new ObjectParameter("AssetsPurchaseLineID", assetsPurchaseLineID) :
                new ObjectParameter("AssetsPurchaseLineID", typeof(int));
    
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            var lineNumberParameter = lineNumber != null ?
                new ObjectParameter("LineNumber", lineNumber) :
                new ObjectParameter("LineNumber", typeof(string));
    
            var lineItemDescriptionParameter = lineItemDescription != null ?
                new ObjectParameter("LineItemDescription", lineItemDescription) :
                new ObjectParameter("LineItemDescription", typeof(string));
    
            var basePricePerUnitParameter = basePricePerUnit.HasValue ?
                new ObjectParameter("BasePricePerUnit", basePricePerUnit) :
                new ObjectParameter("BasePricePerUnit", typeof(decimal));
    
            var taxAmountPerUnitParameter = taxAmountPerUnit.HasValue ?
                new ObjectParameter("TaxAmountPerUnit", taxAmountPerUnit) :
                new ObjectParameter("TaxAmountPerUnit", typeof(decimal));
    
            var discountAmountPerUnitParameter = discountAmountPerUnit.HasValue ?
                new ObjectParameter("DiscountAmountPerUnit", discountAmountPerUnit) :
                new ObjectParameter("DiscountAmountPerUnit", typeof(decimal));
    
            var totalNumberOfAssetsParameter = totalNumberOfAssets.HasValue ?
                new ObjectParameter("TotalNumberOfAssets", totalNumberOfAssets) :
                new ObjectParameter("TotalNumberOfAssets", typeof(int));
    
            var lineTotalAmountParameter = lineTotalAmount.HasValue ?
                new ObjectParameter("LineTotalAmount", lineTotalAmount) :
                new ObjectParameter("LineTotalAmount", typeof(decimal));
    
            var assetIdParameter = assetId.HasValue ?
                new ObjectParameter("AssetId", assetId) :
                new ObjectParameter("AssetId", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveAssetsPurchaseLineItemDetails", assetsPurchaseLineIDParameter, assetPurchaseIdParameter, lineNumberParameter, lineItemDescriptionParameter, basePricePerUnitParameter, taxAmountPerUnitParameter, discountAmountPerUnitParameter, totalNumberOfAssetsParameter, lineTotalAmountParameter, assetIdParameter, createdByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAssetPurchaselineitemByLineId_Result> SP_DGC_GetAssetPurchaselineitemByLineId(Nullable<int> assetsPurchaseLineID)
        {
            var assetsPurchaseLineIDParameter = assetsPurchaseLineID.HasValue ?
                new ObjectParameter("AssetsPurchaseLineID", assetsPurchaseLineID) :
                new ObjectParameter("AssetsPurchaseLineID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAssetPurchaselineitemByLineId_Result>("SP_DGC_GetAssetPurchaselineitemByLineId", assetsPurchaseLineIDParameter);
        }
    
        public virtual int SP_DGC_SaveAssetsPurchaseDetails(Nullable<long> assetPurchaseId, Nullable<long> vendorRegId, string assetPurchaseOrderNumber, Nullable<System.DateTime> assetPurchaseDate, Nullable<decimal> assetPurchaseAmount, Nullable<int> workOrderID, Nullable<decimal> paidAmount, Nullable<System.DateTime> lastPaidOn, Nullable<int> statusid, string assetPurchasedBy, string purchaseNotes, Nullable<long> createdByUserId, string createdBy, string billFilePath, ObjectParameter errorCode)
        {
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(long));
    
            var assetPurchaseOrderNumberParameter = assetPurchaseOrderNumber != null ?
                new ObjectParameter("AssetPurchaseOrderNumber", assetPurchaseOrderNumber) :
                new ObjectParameter("AssetPurchaseOrderNumber", typeof(string));
    
            var assetPurchaseDateParameter = assetPurchaseDate.HasValue ?
                new ObjectParameter("AssetPurchaseDate", assetPurchaseDate) :
                new ObjectParameter("AssetPurchaseDate", typeof(System.DateTime));
    
            var assetPurchaseAmountParameter = assetPurchaseAmount.HasValue ?
                new ObjectParameter("AssetPurchaseAmount", assetPurchaseAmount) :
                new ObjectParameter("AssetPurchaseAmount", typeof(decimal));
    
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(decimal));
    
            var lastPaidOnParameter = lastPaidOn.HasValue ?
                new ObjectParameter("LastPaidOn", lastPaidOn) :
                new ObjectParameter("LastPaidOn", typeof(System.DateTime));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("Statusid", statusid) :
                new ObjectParameter("Statusid", typeof(int));
    
            var assetPurchasedByParameter = assetPurchasedBy != null ?
                new ObjectParameter("AssetPurchasedBy", assetPurchasedBy) :
                new ObjectParameter("AssetPurchasedBy", typeof(string));
    
            var purchaseNotesParameter = purchaseNotes != null ?
                new ObjectParameter("PurchaseNotes", purchaseNotes) :
                new ObjectParameter("PurchaseNotes", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(long));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var billFilePathParameter = billFilePath != null ?
                new ObjectParameter("BillFilePath", billFilePath) :
                new ObjectParameter("BillFilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveAssetsPurchaseDetails", assetPurchaseIdParameter, vendorRegIdParameter, assetPurchaseOrderNumberParameter, assetPurchaseDateParameter, assetPurchaseAmountParameter, workOrderIDParameter, paidAmountParameter, lastPaidOnParameter, statusidParameter, assetPurchasedByParameter, purchaseNotesParameter, createdByUserIdParameter, createdByParameter, billFilePathParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveVisitorRequestQrCodeFilePath(Nullable<int> visitorRequestId, string visitorQrCodeFilePath, ObjectParameter errorCode)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            var visitorQrCodeFilePathParameter = visitorQrCodeFilePath != null ?
                new ObjectParameter("VisitorQrCodeFilePath", visitorQrCodeFilePath) :
                new ObjectParameter("VisitorQrCodeFilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVisitorRequestQrCodeFilePath", visitorRequestIdParameter, visitorQrCodeFilePathParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAssetsPurchaseByAPurchaseId_Result> SP_DGC_GetAssetsPurchaseByAPurchaseId(Nullable<long> assetPurchaseId)
        {
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAssetsPurchaseByAPurchaseId_Result>("SP_DGC_GetAssetsPurchaseByAPurchaseId", assetPurchaseIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllAssetsDetails_Result> SP_DGC_GetAllAssetsDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllAssetsDetails_Result>("SP_DGC_GetAllAssetsDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAssetsByAssetId_Result> SP_DGC_GetAssetsByAssetId(Nullable<int> assetId)
        {
            var assetIdParameter = assetId.HasValue ?
                new ObjectParameter("AssetId", assetId) :
                new ObjectParameter("AssetId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAssetsByAssetId_Result>("SP_DGC_GetAssetsByAssetId", assetIdParameter);
        }
    
        public virtual int SP_DGC_SaveAssetDetails(Nullable<int> assetId, string assetName, string assetDescription, string isActive, string assetCode, string createdBy, ObjectParameter errorCode)
        {
            var assetIdParameter = assetId.HasValue ?
                new ObjectParameter("AssetId", assetId) :
                new ObjectParameter("AssetId", typeof(int));
    
            var assetNameParameter = assetName != null ?
                new ObjectParameter("AssetName", assetName) :
                new ObjectParameter("AssetName", typeof(string));
    
            var assetDescriptionParameter = assetDescription != null ?
                new ObjectParameter("AssetDescription", assetDescription) :
                new ObjectParameter("AssetDescription", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var assetCodeParameter = assetCode != null ?
                new ObjectParameter("AssetCode", assetCode) :
                new ObjectParameter("AssetCode", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveAssetDetails", assetIdParameter, assetNameParameter, assetDescriptionParameter, isActiveParameter, assetCodeParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveAssetsPurchaseActionDetails(Nullable<long> assetPurchaseId, string comments, Nullable<int> requestStatusId, string paymentInfo, string additionalReferenceFilePath, string actionTakenBy, Nullable<long> actionTakenByUserId, Nullable<int> previousStatusId, ObjectParameter errorCode, ObjectParameter assetsPurchaseActionId)
        {
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByParameter = actionTakenBy != null ?
                new ObjectParameter("ActionTakenBy", actionTakenBy) :
                new ObjectParameter("ActionTakenBy", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var previousStatusIdParameter = previousStatusId.HasValue ?
                new ObjectParameter("PreviousStatusId", previousStatusId) :
                new ObjectParameter("PreviousStatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveAssetsPurchaseActionDetails", assetPurchaseIdParameter, commentsParameter, requestStatusIdParameter, paymentInfoParameter, additionalReferenceFilePathParameter, actionTakenByParameter, actionTakenByUserIdParameter, previousStatusIdParameter, errorCode, assetsPurchaseActionId);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllAssetsPurchaseActionDetails_Result> SP_DGC_GetAllAssetsPurchaseActionDetails(Nullable<long> assetPurchaseId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllAssetsPurchaseActionDetails_Result>("SP_DGC_GetAllAssetsPurchaseActionDetails", assetPurchaseIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAssetsPurchasePayableLines_Result> SP_DGC_GetAssetsPurchasePayableLines(Nullable<long> assetPurchaseId)
        {
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAssetsPurchasePayableLines_Result>("SP_DGC_GetAssetsPurchasePayableLines", assetPurchaseIdParameter);
        }
    
        public virtual int SP_DGC_TransposeAssetsPurchasePaymentbyAPActionId(Nullable<long> transposedAssetsPurchaseActionId, Nullable<long> assetsPurchaseId, string transposedBy, Nullable<long> transposedByUserId, string comments, ObjectParameter errorCode)
        {
            var transposedAssetsPurchaseActionIdParameter = transposedAssetsPurchaseActionId.HasValue ?
                new ObjectParameter("TransposedAssetsPurchaseActionId", transposedAssetsPurchaseActionId) :
                new ObjectParameter("TransposedAssetsPurchaseActionId", typeof(long));
    
            var assetsPurchaseIdParameter = assetsPurchaseId.HasValue ?
                new ObjectParameter("AssetsPurchaseId", assetsPurchaseId) :
                new ObjectParameter("AssetsPurchaseId", typeof(long));
    
            var transposedByParameter = transposedBy != null ?
                new ObjectParameter("TransposedBy", transposedBy) :
                new ObjectParameter("TransposedBy", typeof(string));
    
            var transposedByUserIdParameter = transposedByUserId.HasValue ?
                new ObjectParameter("TransposedByUserId", transposedByUserId) :
                new ObjectParameter("TransposedByUserId", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_TransposeAssetsPurchasePaymentbyAPActionId", transposedAssetsPurchaseActionIdParameter, assetsPurchaseIdParameter, transposedByParameter, transposedByUserIdParameter, commentsParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveVendorComapaniesByDeptID_Result> SP_DGC_GetActiveVendorComapaniesByDeptID(Nullable<int> departmentId)
        {
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveVendorComapaniesByDeptID_Result>("SP_DGC_GetActiveVendorComapaniesByDeptID", departmentIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetVehicleParkFeeDetails_Result> SP_DGC_GetVehicleParkFeeDetails(string isShowAllFuturePrice)
        {
            var isShowAllFuturePriceParameter = isShowAllFuturePrice != null ?
                new ObjectParameter("IsShowAllFuturePrice", isShowAllFuturePrice) :
                new ObjectParameter("IsShowAllFuturePrice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVehicleParkFeeDetails_Result>("SP_DGC_GetVehicleParkFeeDetails", isShowAllFuturePriceParameter);
        }
    
        public virtual int SP_DGC_ApprovalAssetPurchase(Nullable<long> assetPurchaseId, string approvedBy, string purchaseComments, ObjectParameter errorCode)
        {
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            var approvedByParameter = approvedBy != null ?
                new ObjectParameter("ApprovedBy", approvedBy) :
                new ObjectParameter("ApprovedBy", typeof(string));
    
            var purchaseCommentsParameter = purchaseComments != null ?
                new ObjectParameter("PurchaseComments", purchaseComments) :
                new ObjectParameter("PurchaseComments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_ApprovalAssetPurchase", assetPurchaseIdParameter, approvedByParameter, purchaseCommentsParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllCourtsDetailsByFacilityId_Result> SP_DGC_GetAllCourtsDetailsByFacilityId(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> facilityId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllCourtsDetailsByFacilityId_Result>("SP_DGC_GetAllCourtsDetailsByFacilityId", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, facilityIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllLocationDetailsByFacilityId_Result> SP_DGC_GetAllLocationDetailsByFacilityId(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> facilitiesId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllLocationDetailsByFacilityId_Result>("SP_DGC_GetAllLocationDetailsByFacilityId", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, facilitiesIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityCourtByCourtId_Result> SP_DGC_GetFacilityCourtByCourtId(Nullable<int> courtID)
        {
            var courtIDParameter = courtID.HasValue ?
                new ObjectParameter("CourtID", courtID) :
                new ObjectParameter("CourtID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityCourtByCourtId_Result>("SP_DGC_GetFacilityCourtByCourtId", courtIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityLocationByLocationId_Result> SP_DGC_GetFacilityLocationByLocationId(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityLocationByLocationId_Result>("SP_DGC_GetFacilityLocationByLocationId", locationIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetTrainerDetailsByFacilityId_Result> SP_DGC_GetTrainerDetailsByFacilityId(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> facilitiesId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetTrainerDetailsByFacilityId_Result>("SP_DGC_GetTrainerDetailsByFacilityId", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, facilitiesIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetTrainerDetailsById_Result> SP_DGC_GetTrainerDetailsById(Nullable<int> trainerId)
        {
            var trainerIdParameter = trainerId.HasValue ?
                new ObjectParameter("TrainerId", trainerId) :
                new ObjectParameter("TrainerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetTrainerDetailsById_Result>("SP_DGC_GetTrainerDetailsById", trainerIdParameter);
        }
    
        public virtual int SP_DGC_SaveFacilityCourtDetails(Nullable<int> courtID, Nullable<int> facilityId, string courtName, string courtDescription, Nullable<int> maxNumberOfPeople, Nullable<int> minNumberOfPeople, string shutDownDates, string daysTiming, Nullable<System.DateTime> effectiveFrom, string isActive, string createdBy, string isAllowMultipleBookingsForTimeSlot, ObjectParameter errorCode)
        {
            var courtIDParameter = courtID.HasValue ?
                new ObjectParameter("CourtID", courtID) :
                new ObjectParameter("CourtID", typeof(int));
    
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            var courtNameParameter = courtName != null ?
                new ObjectParameter("CourtName", courtName) :
                new ObjectParameter("CourtName", typeof(string));
    
            var courtDescriptionParameter = courtDescription != null ?
                new ObjectParameter("CourtDescription", courtDescription) :
                new ObjectParameter("CourtDescription", typeof(string));
    
            var maxNumberOfPeopleParameter = maxNumberOfPeople.HasValue ?
                new ObjectParameter("MaxNumberOfPeople", maxNumberOfPeople) :
                new ObjectParameter("MaxNumberOfPeople", typeof(int));
    
            var minNumberOfPeopleParameter = minNumberOfPeople.HasValue ?
                new ObjectParameter("MinNumberOfPeople", minNumberOfPeople) :
                new ObjectParameter("MinNumberOfPeople", typeof(int));
    
            var shutDownDatesParameter = shutDownDates != null ?
                new ObjectParameter("ShutDownDates", shutDownDates) :
                new ObjectParameter("ShutDownDates", typeof(string));
    
            var daysTimingParameter = daysTiming != null ?
                new ObjectParameter("DaysTiming", daysTiming) :
                new ObjectParameter("DaysTiming", typeof(string));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isAllowMultipleBookingsForTimeSlotParameter = isAllowMultipleBookingsForTimeSlot != null ?
                new ObjectParameter("IsAllowMultipleBookingsForTimeSlot", isAllowMultipleBookingsForTimeSlot) :
                new ObjectParameter("IsAllowMultipleBookingsForTimeSlot", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFacilityCourtDetails", courtIDParameter, facilityIdParameter, courtNameParameter, courtDescriptionParameter, maxNumberOfPeopleParameter, minNumberOfPeopleParameter, shutDownDatesParameter, daysTimingParameter, effectiveFromParameter, isActiveParameter, createdByParameter, isAllowMultipleBookingsForTimeSlotParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveFacilityLocationDetails(Nullable<int> locationID, Nullable<int> facilitiesId, string locationName, string locationDescription, string shutDownDates, string isActive, string createdBy, string isAllowMultipleBookingsForTimeSlot, ObjectParameter errorCode)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(int));
    
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var locationDescriptionParameter = locationDescription != null ?
                new ObjectParameter("LocationDescription", locationDescription) :
                new ObjectParameter("LocationDescription", typeof(string));
    
            var shutDownDatesParameter = shutDownDates != null ?
                new ObjectParameter("ShutDownDates", shutDownDates) :
                new ObjectParameter("ShutDownDates", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isAllowMultipleBookingsForTimeSlotParameter = isAllowMultipleBookingsForTimeSlot != null ?
                new ObjectParameter("IsAllowMultipleBookingsForTimeSlot", isAllowMultipleBookingsForTimeSlot) :
                new ObjectParameter("IsAllowMultipleBookingsForTimeSlot", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFacilityLocationDetails", locationIDParameter, facilitiesIdParameter, locationNameParameter, locationDescriptionParameter, shutDownDatesParameter, isActiveParameter, createdByParameter, isAllowMultipleBookingsForTimeSlotParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveTrainerDetails(Nullable<int> trainerId, Nullable<int> facilitiesId, string trainerName, string mobileNo, string email, string trainerTiming, Nullable<System.DateTime> effectiveFrom, string isActive, string profilePic, string updatedBy, string isAllowMultipleBookingsForTimeSlot, ObjectParameter errorCode)
        {
            var trainerIdParameter = trainerId.HasValue ?
                new ObjectParameter("TrainerId", trainerId) :
                new ObjectParameter("TrainerId", typeof(int));
    
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(int));
    
            var trainerNameParameter = trainerName != null ?
                new ObjectParameter("TrainerName", trainerName) :
                new ObjectParameter("TrainerName", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var trainerTimingParameter = trainerTiming != null ?
                new ObjectParameter("TrainerTiming", trainerTiming) :
                new ObjectParameter("TrainerTiming", typeof(string));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var profilePicParameter = profilePic != null ?
                new ObjectParameter("ProfilePic", profilePic) :
                new ObjectParameter("ProfilePic", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isAllowMultipleBookingsForTimeSlotParameter = isAllowMultipleBookingsForTimeSlot != null ?
                new ObjectParameter("IsAllowMultipleBookingsForTimeSlot", isAllowMultipleBookingsForTimeSlot) :
                new ObjectParameter("IsAllowMultipleBookingsForTimeSlot", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveTrainerDetails", trainerIdParameter, facilitiesIdParameter, trainerNameParameter, mobileNoParameter, emailParameter, trainerTimingParameter, effectiveFromParameter, isActiveParameter, profilePicParameter, updatedByParameter, isAllowMultipleBookingsForTimeSlotParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetNotificationReceivers_Result> SP_DGC_GetNotificationReceivers(Nullable<int> notificationId)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetNotificationReceivers_Result>("SP_DGC_GetNotificationReceivers", notificationIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetComplaintDetaisById_Result> SP_DGC_GetComplaintDetaisById(Nullable<long> complaintId)
        {
            var complaintIdParameter = complaintId.HasValue ?
                new ObjectParameter("ComplaintId", complaintId) :
                new ObjectParameter("ComplaintId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetComplaintDetaisById_Result>("SP_DGC_GetComplaintDetaisById", complaintIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllComplaintDetails_Result> SP_DGC_GetAllComplaintDetails(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, string statusCode, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<System.DateTime> complaintFromDate, Nullable<System.DateTime> complaintToDate, Nullable<int> departmentID, Nullable<int> statusId)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var complaintFromDateParameter = complaintFromDate.HasValue ?
                new ObjectParameter("ComplaintFromDate", complaintFromDate) :
                new ObjectParameter("ComplaintFromDate", typeof(System.DateTime));
    
            var complaintToDateParameter = complaintToDate.HasValue ?
                new ObjectParameter("ComplaintToDate", complaintToDate) :
                new ObjectParameter("ComplaintToDate", typeof(System.DateTime));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllComplaintDetails_Result>("SP_DGC_GetAllComplaintDetails", requestedFromRoleParameter, requestedUserIdParameter, statusCodeParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, complaintFromDateParameter, complaintToDateParameter, departmentIDParameter, statusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetComplaintInProgressDetailsById_Result> SP_DGC_GetComplaintInProgressDetailsById(Nullable<long> complaintId)
        {
            var complaintIdParameter = complaintId.HasValue ?
                new ObjectParameter("ComplaintId", complaintId) :
                new ObjectParameter("ComplaintId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetComplaintInProgressDetailsById_Result>("SP_DGC_GetComplaintInProgressDetailsById", complaintIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCondoAssetDetailsByAPurchaseId_Result> SP_DGC_GetCondoAssetDetailsByAPurchaseId(Nullable<long> assetPurchaseId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, string createdBy)
        {
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCondoAssetDetailsByAPurchaseId_Result>("SP_DGC_GetCondoAssetDetailsByAPurchaseId", assetPurchaseIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, createdByParameter);
        }
    
        public virtual int SP_DGC_SaveCondoAssetCodesDetails(string condoAssetDetails, string createdBy, ObjectParameter errorCode)
        {
            var condoAssetDetailsParameter = condoAssetDetails != null ?
                new ObjectParameter("CondoAssetDetails", condoAssetDetails) :
                new ObjectParameter("CondoAssetDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCondoAssetCodesDetails", condoAssetDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_Asset_LedgerCreate_Mapping(Nullable<long> assetPurchaseId, Nullable<int> aPurchaseActionId, Nullable<int> purchaseStatusId, string updatedBy, ObjectParameter errorCode)
        {
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            var aPurchaseActionIdParameter = aPurchaseActionId.HasValue ?
                new ObjectParameter("APurchaseActionId", aPurchaseActionId) :
                new ObjectParameter("APurchaseActionId", typeof(int));
    
            var purchaseStatusIdParameter = purchaseStatusId.HasValue ?
                new ObjectParameter("PurchaseStatusId", purchaseStatusId) :
                new ObjectParameter("PurchaseStatusId", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Asset_LedgerCreate_Mapping", assetPurchaseIdParameter, aPurchaseActionIdParameter, purchaseStatusIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_AssetPurchaseOrder_PostToLedger(Nullable<long> assetPurchaseId, string updatedBy, ObjectParameter errorCode)
        {
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_AssetPurchaseOrder_PostToLedger", assetPurchaseIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_AssetPurchasePaymentPostToLedger(Nullable<int> aPurchaseActionId, Nullable<long> assetPurchaseId, string updatedBy, ObjectParameter errorCode)
        {
            var aPurchaseActionIdParameter = aPurchaseActionId.HasValue ?
                new ObjectParameter("APurchaseActionId", aPurchaseActionId) :
                new ObjectParameter("APurchaseActionId", typeof(int));
    
            var assetPurchaseIdParameter = assetPurchaseId.HasValue ?
                new ObjectParameter("AssetPurchaseId", assetPurchaseId) :
                new ObjectParameter("AssetPurchaseId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_AssetPurchasePaymentPostToLedger", aPurchaseActionIdParameter, assetPurchaseIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveCondoAssetDepreciationDetails(string condoAssetDepreciationDetails, string createdBy, Nullable<long> createdByUserId, ObjectParameter errorCode)
        {
            var condoAssetDepreciationDetailsParameter = condoAssetDepreciationDetails != null ?
                new ObjectParameter("CondoAssetDepreciationDetails", condoAssetDepreciationDetails) :
                new ObjectParameter("CondoAssetDepreciationDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCondoAssetDepreciationDetails", condoAssetDepreciationDetailsParameter, createdByParameter, createdByUserIdParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_InitialSetUp_GetAllPaidParkingSlotRequestDetails_Result> SP_DGC_InitialSetUp_GetAllPaidParkingSlotRequestDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_InitialSetUp_GetAllPaidParkingSlotRequestDetails_Result>("SP_DGC_InitialSetUp_GetAllPaidParkingSlotRequestDetails");
        }
    
        public virtual ObjectResult<SP_DGC_GetCondoDepreciationRequestDetails_Result> SP_DGC_GetCondoDepreciationRequestDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCondoDepreciationRequestDetails_Result>("SP_DGC_GetCondoDepreciationRequestDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetCondoAssetDepreciationByDRequestId_Result> SP_DGC_GetCondoAssetDepreciationByDRequestId(Nullable<int> depreciationRequestId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var depreciationRequestIdParameter = depreciationRequestId.HasValue ?
                new ObjectParameter("DepreciationRequestId", depreciationRequestId) :
                new ObjectParameter("DepreciationRequestId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCondoAssetDepreciationByDRequestId_Result>("SP_DGC_GetCondoAssetDepreciationByDRequestId", depreciationRequestIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetDepreciatioRequestByRequestId_Result> SP_DGC_GetDepreciatioRequestByRequestId(Nullable<int> depreciationRequestId)
        {
            var depreciationRequestIdParameter = depreciationRequestId.HasValue ?
                new ObjectParameter("DepreciationRequestId", depreciationRequestId) :
                new ObjectParameter("DepreciationRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetDepreciatioRequestByRequestId_Result>("SP_DGC_GetDepreciatioRequestByRequestId", depreciationRequestIdParameter);
        }
    
        public virtual int SP_DGC_ApproveOrRejectDepreciations(Nullable<int> depreciationRequestId, Nullable<int> statusId, string depreciatedBy, string comments, ObjectParameter errorCode, Nullable<long> actionTakenByUserId)
        {
            var depreciationRequestIdParameter = depreciationRequestId.HasValue ?
                new ObjectParameter("DepreciationRequestId", depreciationRequestId) :
                new ObjectParameter("DepreciationRequestId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var depreciatedByParameter = depreciatedBy != null ?
                new ObjectParameter("DepreciatedBy", depreciatedBy) :
                new ObjectParameter("DepreciatedBy", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_ApproveOrRejectDepreciations", depreciationRequestIdParameter, statusIdParameter, depreciatedByParameter, commentsParameter, errorCode, actionTakenByUserIdParameter);
        }
    
        public virtual int SP_DGC_InitialSetUp_AdvancePaymentProcessBySetupID(Nullable<int> advancePaymentSetupID, string processedBy, Nullable<long> paymentReceviedByUserid, ObjectParameter errorCode)
        {
            var advancePaymentSetupIDParameter = advancePaymentSetupID.HasValue ?
                new ObjectParameter("AdvancePaymentSetupID", advancePaymentSetupID) :
                new ObjectParameter("AdvancePaymentSetupID", typeof(int));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            var paymentReceviedByUseridParameter = paymentReceviedByUserid.HasValue ?
                new ObjectParameter("PaymentReceviedByUserid", paymentReceviedByUserid) :
                new ObjectParameter("PaymentReceviedByUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_AdvancePaymentProcessBySetupID", advancePaymentSetupIDParameter, processedByParameter, paymentReceviedByUseridParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_InitialSetUp_GetAllAdvancePaymentDetails_Result> SP_DGC_InitialSetUp_GetAllAdvancePaymentDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_InitialSetUp_GetAllAdvancePaymentDetails_Result>("SP_DGC_InitialSetUp_GetAllAdvancePaymentDetails");
        }
    
        public virtual int SP_DGC_IntialSetup_SaveAdvancePaymentSetupDetails(string advancePaymentDetails, string createdBy, ObjectParameter errorCode)
        {
            var advancePaymentDetailsParameter = advancePaymentDetails != null ?
                new ObjectParameter("AdvancePaymentDetails", advancePaymentDetails) :
                new ObjectParameter("AdvancePaymentDetails", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_SaveAdvancePaymentSetupDetails", advancePaymentDetailsParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveDepreciationRequestDetails(ObjectParameter depreciationRequestId, string referenceNumber, Nullable<System.DateTime> depreciationEntryDate, Nullable<int> statusID, string createdBy, Nullable<long> depreciationByUserId, ObjectParameter errorCode)
        {
            var referenceNumberParameter = referenceNumber != null ?
                new ObjectParameter("ReferenceNumber", referenceNumber) :
                new ObjectParameter("ReferenceNumber", typeof(string));
    
            var depreciationEntryDateParameter = depreciationEntryDate.HasValue ?
                new ObjectParameter("DepreciationEntryDate", depreciationEntryDate) :
                new ObjectParameter("DepreciationEntryDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var depreciationByUserIdParameter = depreciationByUserId.HasValue ?
                new ObjectParameter("DepreciationByUserId", depreciationByUserId) :
                new ObjectParameter("DepreciationByUserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveDepreciationRequestDetails", depreciationRequestId, referenceNumberParameter, depreciationEntryDateParameter, statusIDParameter, createdByParameter, depreciationByUserIdParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetUserDetailsByCentralId_Result> SP_DGC_GetUserDetailsByCentralId(Nullable<long> centralUserId)
        {
            var centralUserIdParameter = centralUserId.HasValue ?
                new ObjectParameter("CentralUserId", centralUserId) :
                new ObjectParameter("CentralUserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUserDetailsByCentralId_Result>("SP_DGC_GetUserDetailsByCentralId", centralUserIdParameter);
        }
    
        public virtual int SP_DGC_Depreciation_LedgerCreate_Mapping(Nullable<long> depreciationRequestId, string updatedBy, ObjectParameter errorCode)
        {
            var depreciationRequestIdParameter = depreciationRequestId.HasValue ?
                new ObjectParameter("DepreciationRequestId", depreciationRequestId) :
                new ObjectParameter("DepreciationRequestId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_Depreciation_LedgerCreate_Mapping", depreciationRequestIdParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllCondoAssetDepreciationDetails_Result> SP_DGC_GetAllCondoAssetDepreciationDetails(Nullable<int> depreciationRequestId)
        {
            var depreciationRequestIdParameter = depreciationRequestId.HasValue ?
                new ObjectParameter("DepreciationRequestId", depreciationRequestId) :
                new ObjectParameter("DepreciationRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllCondoAssetDepreciationDetails_Result>("SP_DGC_GetAllCondoAssetDepreciationDetails", depreciationRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUserDetailsByMobileNumber_Result> SP_DGC_GetUserDetailsByMobileNumber(string userMobileNumber)
        {
            var userMobileNumberParameter = userMobileNumber != null ?
                new ObjectParameter("UserMobileNumber", userMobileNumber) :
                new ObjectParameter("UserMobileNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUserDetailsByMobileNumber_Result>("SP_DGC_GetUserDetailsByMobileNumber", userMobileNumberParameter);
        }
    
        public virtual int SP_DGC_DeActiveCompanyMember(Nullable<int> vendorMemberId, Nullable<long> memberUserID, Nullable<long> membercentralUserid, string deActivatedBy)
        {
            var vendorMemberIdParameter = vendorMemberId.HasValue ?
                new ObjectParameter("VendorMemberId", vendorMemberId) :
                new ObjectParameter("VendorMemberId", typeof(int));
    
            var memberUserIDParameter = memberUserID.HasValue ?
                new ObjectParameter("MemberUserID", memberUserID) :
                new ObjectParameter("MemberUserID", typeof(long));
    
            var membercentralUseridParameter = membercentralUserid.HasValue ?
                new ObjectParameter("MembercentralUserid", membercentralUserid) :
                new ObjectParameter("MembercentralUserid", typeof(long));
    
            var deActivatedByParameter = deActivatedBy != null ?
                new ObjectParameter("DeActivatedBy", deActivatedBy) :
                new ObjectParameter("DeActivatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeActiveCompanyMember", vendorMemberIdParameter, memberUserIDParameter, membercentralUseridParameter, deActivatedByParameter);
        }
    
        public virtual int SP_DGC_SaveVendorMemberetails(Nullable<int> vendorMemberId, Nullable<int> vendorRegId, Nullable<long> memberUserID, Nullable<int> vDepartmentId, Nullable<long> memberCentralisedUserId, string memberName, string memberEmail, string memberMobileNumber, string isActive, string createdBy, ObjectParameter errorCode, string countryCode)
        {
            var vendorMemberIdParameter = vendorMemberId.HasValue ?
                new ObjectParameter("VendorMemberId", vendorMemberId) :
                new ObjectParameter("VendorMemberId", typeof(int));
    
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(int));
    
            var memberUserIDParameter = memberUserID.HasValue ?
                new ObjectParameter("MemberUserID", memberUserID) :
                new ObjectParameter("MemberUserID", typeof(long));
    
            var vDepartmentIdParameter = vDepartmentId.HasValue ?
                new ObjectParameter("VDepartmentId", vDepartmentId) :
                new ObjectParameter("VDepartmentId", typeof(int));
    
            var memberCentralisedUserIdParameter = memberCentralisedUserId.HasValue ?
                new ObjectParameter("MemberCentralisedUserId", memberCentralisedUserId) :
                new ObjectParameter("MemberCentralisedUserId", typeof(long));
    
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var memberEmailParameter = memberEmail != null ?
                new ObjectParameter("MemberEmail", memberEmail) :
                new ObjectParameter("MemberEmail", typeof(string));
    
            var memberMobileNumberParameter = memberMobileNumber != null ?
                new ObjectParameter("MemberMobileNumber", memberMobileNumber) :
                new ObjectParameter("MemberMobileNumber", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVendorMemberetails", vendorMemberIdParameter, vendorRegIdParameter, memberUserIDParameter, vDepartmentIdParameter, memberCentralisedUserIdParameter, memberNameParameter, memberEmailParameter, memberMobileNumberParameter, isActiveParameter, createdByParameter, errorCode, countryCodeParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVendorComapnyMembersDetails_Result> SP_DGC_GetAllVendorComapnyMembersDetails(Nullable<int> vendorRegId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var vendorRegIdParameter = vendorRegId.HasValue ?
                new ObjectParameter("VendorRegId", vendorRegId) :
                new ObjectParameter("VendorRegId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVendorComapnyMembersDetails_Result>("SP_DGC_GetAllVendorComapnyMembersDetails", vendorRegIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetCompanyMemberDetailsByMemberId_Result> SP_DGC_GetCompanyMemberDetailsByMemberId(Nullable<int> vendorMemberId)
        {
            var vendorMemberIdParameter = vendorMemberId.HasValue ?
                new ObjectParameter("VendorMemberId", vendorMemberId) :
                new ObjectParameter("VendorMemberId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCompanyMemberDetailsByMemberId_Result>("SP_DGC_GetCompanyMemberDetailsByMemberId", vendorMemberIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetComplaintHistoryDetailsById_Result> SP_DGC_GetComplaintHistoryDetailsById(Nullable<long> complaintId)
        {
            var complaintIdParameter = complaintId.HasValue ?
                new ObjectParameter("ComplaintId", complaintId) :
                new ObjectParameter("ComplaintId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetComplaintHistoryDetailsById_Result>("SP_DGC_GetComplaintHistoryDetailsById", complaintIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetPaidParkingHistoryByRequestId_Result> SP_DGC_GetPaidParkingHistoryByRequestId(Nullable<long> paidParkingRequestId)
        {
            var paidParkingRequestIdParameter = paidParkingRequestId.HasValue ?
                new ObjectParameter("PaidParkingRequestId", paidParkingRequestId) :
                new ObjectParameter("PaidParkingRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetPaidParkingHistoryByRequestId_Result>("SP_DGC_GetPaidParkingHistoryByRequestId", paidParkingRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetLivingMembersByUnitId_Result> SP_DGC_GetLivingMembersByUnitId(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLivingMembersByUnitId_Result>("SP_DGC_GetLivingMembersByUnitId", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetLivingMembersByUnitIdforVMS_Result> SP_DGC_GetLivingMembersByUnitIdforVMS(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLivingMembersByUnitIdforVMS_Result>("SP_DGC_GetLivingMembersByUnitIdforVMS", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetLivingOwnerByUnitIdforVMS_Result> SP_DGC_GetLivingOwnerByUnitIdforVMS(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetLivingOwnerByUnitIdforVMS_Result>("SP_DGC_GetLivingOwnerByUnitIdforVMS", unitIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllAccessGoodsRequests_Result> SP_DGC_GetAllAccessGoodsRequests(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId, Nullable<int> typeOfAccessCard, Nullable<System.DateTime> requestFromDate, Nullable<System.DateTime> requestToDate, Nullable<int> statusId)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var typeOfAccessCardParameter = typeOfAccessCard.HasValue ?
                new ObjectParameter("TypeOfAccessCard", typeOfAccessCard) :
                new ObjectParameter("TypeOfAccessCard", typeof(int));
    
            var requestFromDateParameter = requestFromDate.HasValue ?
                new ObjectParameter("RequestFromDate", requestFromDate) :
                new ObjectParameter("RequestFromDate", typeof(System.DateTime));
    
            var requestToDateParameter = requestToDate.HasValue ?
                new ObjectParameter("RequestToDate", requestToDate) :
                new ObjectParameter("RequestToDate", typeof(System.DateTime));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllAccessGoodsRequests_Result>("SP_DGC_GetAllAccessGoodsRequests", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter, typeOfAccessCardParameter, requestFromDateParameter, requestToDateParameter, statusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVehicleParkingRequest_Result> SP_DGC_GetAllVehicleParkingRequest(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId, Nullable<System.DateTime> bookedFromDate, Nullable<System.DateTime> bookedToDate, Nullable<System.DateTime> raisedFomDate, Nullable<System.DateTime> raisedToDate, Nullable<int> statusId)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var bookedFromDateParameter = bookedFromDate.HasValue ?
                new ObjectParameter("BookedFromDate", bookedFromDate) :
                new ObjectParameter("BookedFromDate", typeof(System.DateTime));
    
            var bookedToDateParameter = bookedToDate.HasValue ?
                new ObjectParameter("BookedToDate", bookedToDate) :
                new ObjectParameter("BookedToDate", typeof(System.DateTime));
    
            var raisedFomDateParameter = raisedFomDate.HasValue ?
                new ObjectParameter("RaisedFomDate", raisedFomDate) :
                new ObjectParameter("RaisedFomDate", typeof(System.DateTime));
    
            var raisedToDateParameter = raisedToDate.HasValue ?
                new ObjectParameter("RaisedToDate", raisedToDate) :
                new ObjectParameter("RaisedToDate", typeof(System.DateTime));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVehicleParkingRequest_Result>("SP_DGC_GetAllVehicleParkingRequest", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter, bookedFromDateParameter, bookedToDateParameter, raisedFomDateParameter, raisedToDateParameter, statusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllVisitorsRequestsDetails_Result> SP_DGC_GetAllVisitorsRequestsDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> requestedFromRole, Nullable<long> requestedUserId, string statusCode, Nullable<int> unitId, Nullable<System.DateTime> visitingFromDate, Nullable<System.DateTime> visitingToDate, Nullable<System.DateTime> reqestRaisedFomDate, Nullable<System.DateTime> reqestRaisedToDate, Nullable<int> statusId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var visitingFromDateParameter = visitingFromDate.HasValue ?
                new ObjectParameter("VisitingFromDate", visitingFromDate) :
                new ObjectParameter("VisitingFromDate", typeof(System.DateTime));
    
            var visitingToDateParameter = visitingToDate.HasValue ?
                new ObjectParameter("VisitingToDate", visitingToDate) :
                new ObjectParameter("VisitingToDate", typeof(System.DateTime));
    
            var reqestRaisedFomDateParameter = reqestRaisedFomDate.HasValue ?
                new ObjectParameter("ReqestRaisedFomDate", reqestRaisedFomDate) :
                new ObjectParameter("ReqestRaisedFomDate", typeof(System.DateTime));
    
            var reqestRaisedToDateParameter = reqestRaisedToDate.HasValue ?
                new ObjectParameter("ReqestRaisedToDate", reqestRaisedToDate) :
                new ObjectParameter("ReqestRaisedToDate", typeof(System.DateTime));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllVisitorsRequestsDetails_Result>("SP_DGC_GetAllVisitorsRequestsDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, requestedFromRoleParameter, requestedUserIdParameter, statusCodeParameter, unitIdParameter, visitingFromDateParameter, visitingToDateParameter, reqestRaisedFomDateParameter, reqestRaisedToDateParameter, statusIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetIPayMerchantDetails_Result> SP_DGC_GetIPayMerchantDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetIPayMerchantDetails_Result>("SP_DGC_GetIPayMerchantDetails");
        }
    
        public virtual int SP_DGC_SaveIPayMerchantDetails(Nullable<int> iPayMerchantId, string serviceProviderName, string merchantCompanyName, string merchantCode, string merchantKey, string merchantCountryCode, string merchantCurrencyCode, string serviceProviderReportURL, string reportURLLogIn, string reportURLPassword, Nullable<decimal> percentageofChargesOnDirectPay, string language_IsoCode, string backendPostUrl, string createdBy, ObjectParameter errorCode)
        {
            var iPayMerchantIdParameter = iPayMerchantId.HasValue ?
                new ObjectParameter("IPayMerchantId", iPayMerchantId) :
                new ObjectParameter("IPayMerchantId", typeof(int));
    
            var serviceProviderNameParameter = serviceProviderName != null ?
                new ObjectParameter("ServiceProviderName", serviceProviderName) :
                new ObjectParameter("ServiceProviderName", typeof(string));
    
            var merchantCompanyNameParameter = merchantCompanyName != null ?
                new ObjectParameter("MerchantCompanyName", merchantCompanyName) :
                new ObjectParameter("MerchantCompanyName", typeof(string));
    
            var merchantCodeParameter = merchantCode != null ?
                new ObjectParameter("MerchantCode", merchantCode) :
                new ObjectParameter("MerchantCode", typeof(string));
    
            var merchantKeyParameter = merchantKey != null ?
                new ObjectParameter("MerchantKey", merchantKey) :
                new ObjectParameter("MerchantKey", typeof(string));
    
            var merchantCountryCodeParameter = merchantCountryCode != null ?
                new ObjectParameter("MerchantCountryCode", merchantCountryCode) :
                new ObjectParameter("MerchantCountryCode", typeof(string));
    
            var merchantCurrencyCodeParameter = merchantCurrencyCode != null ?
                new ObjectParameter("MerchantCurrencyCode", merchantCurrencyCode) :
                new ObjectParameter("MerchantCurrencyCode", typeof(string));
    
            var serviceProviderReportURLParameter = serviceProviderReportURL != null ?
                new ObjectParameter("ServiceProviderReportURL", serviceProviderReportURL) :
                new ObjectParameter("ServiceProviderReportURL", typeof(string));
    
            var reportURLLogInParameter = reportURLLogIn != null ?
                new ObjectParameter("ReportURLLogIn", reportURLLogIn) :
                new ObjectParameter("ReportURLLogIn", typeof(string));
    
            var reportURLPasswordParameter = reportURLPassword != null ?
                new ObjectParameter("ReportURLPassword", reportURLPassword) :
                new ObjectParameter("ReportURLPassword", typeof(string));
    
            var percentageofChargesOnDirectPayParameter = percentageofChargesOnDirectPay.HasValue ?
                new ObjectParameter("PercentageofChargesOnDirectPay", percentageofChargesOnDirectPay) :
                new ObjectParameter("PercentageofChargesOnDirectPay", typeof(decimal));
    
            var language_IsoCodeParameter = language_IsoCode != null ?
                new ObjectParameter("Language_IsoCode", language_IsoCode) :
                new ObjectParameter("Language_IsoCode", typeof(string));
    
            var backendPostUrlParameter = backendPostUrl != null ?
                new ObjectParameter("BackendPostUrl", backendPostUrl) :
                new ObjectParameter("BackendPostUrl", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveIPayMerchantDetails", iPayMerchantIdParameter, serviceProviderNameParameter, merchantCompanyNameParameter, merchantCodeParameter, merchantKeyParameter, merchantCountryCodeParameter, merchantCurrencyCodeParameter, serviceProviderReportURLParameter, reportURLLogInParameter, reportURLPasswordParameter, percentageofChargesOnDirectPayParameter, language_IsoCodeParameter, backendPostUrlParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_PG_SaveHallbookingPaymentInitiation(Nullable<long> hallBookingRequestId, Nullable<int> requestStatusId, string paymentInfo, string comments, Nullable<long> actionTakenByUserId, string updatedBY, Nullable<int> previousStatusID, Nullable<System.DateTime> paymentDate, ObjectParameter errorCode, ObjectParameter pGResponseId)
        {
            var hallBookingRequestIdParameter = hallBookingRequestId.HasValue ?
                new ObjectParameter("HallBookingRequestId", hallBookingRequestId) :
                new ObjectParameter("HallBookingRequestId", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var paymentDateParameter = paymentDate.HasValue ?
                new ObjectParameter("PaymentDate", paymentDate) :
                new ObjectParameter("PaymentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_PG_SaveHallbookingPaymentInitiation", hallBookingRequestIdParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, actionTakenByUserIdParameter, updatedBYParameter, previousStatusIDParameter, paymentDateParameter, errorCode, pGResponseId);
        }
    
        public virtual ObjectResult<SP_DGC_PG_GetPG_RequestResponseByPGResponseId_Result> SP_DGC_PG_GetPG_RequestResponseByPGResponseId(Nullable<long> pGRR_Id)
        {
            var pGRR_IdParameter = pGRR_Id.HasValue ?
                new ObjectParameter("PGRR_Id", pGRR_Id) :
                new ObjectParameter("PGRR_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_PG_GetPG_RequestResponseByPGResponseId_Result>("SP_DGC_PG_GetPG_RequestResponseByPGResponseId", pGRR_IdParameter);
        }
    
        public virtual int SP_DGC_PG_SaveAccessGoodsRequestPaymentInitiation(Nullable<long> accessGoodsRequestId, Nullable<int> requestStatusId, string paymentInfo, string comments, Nullable<long> actionTakenByUserId, string updatedBY, Nullable<int> previousStatusID, Nullable<System.DateTime> paymentDate, ObjectParameter errorCode, ObjectParameter pGResponseId)
        {
            var accessGoodsRequestIdParameter = accessGoodsRequestId.HasValue ?
                new ObjectParameter("AccessGoodsRequestId", accessGoodsRequestId) :
                new ObjectParameter("AccessGoodsRequestId", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var paymentDateParameter = paymentDate.HasValue ?
                new ObjectParameter("PaymentDate", paymentDate) :
                new ObjectParameter("PaymentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_PG_SaveAccessGoodsRequestPaymentInitiation", accessGoodsRequestIdParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, actionTakenByUserIdParameter, updatedBYParameter, previousStatusIDParameter, paymentDateParameter, errorCode, pGResponseId);
        }
    
        public virtual int SP_DGC_PG_SaveFacilityBookingPaymentInitiation(Nullable<int> condoFacilityBookingId, Nullable<int> requestStatusId, string paymentInfo, string comments, Nullable<long> actionTakenByUserId, string updatedBY, Nullable<int> previousStatusID, Nullable<System.DateTime> paymentDate, ObjectParameter errorCode, ObjectParameter pGResponseId)
        {
            var condoFacilityBookingIdParameter = condoFacilityBookingId.HasValue ?
                new ObjectParameter("CondoFacilityBookingId", condoFacilityBookingId) :
                new ObjectParameter("CondoFacilityBookingId", typeof(int));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var paymentDateParameter = paymentDate.HasValue ?
                new ObjectParameter("PaymentDate", paymentDate) :
                new ObjectParameter("PaymentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_PG_SaveFacilityBookingPaymentInitiation", condoFacilityBookingIdParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, actionTakenByUserIdParameter, updatedBYParameter, previousStatusIDParameter, paymentDateParameter, errorCode, pGResponseId);
        }
    
        public virtual int SP_DGC_PG_SaveRenovationRequestPaymentInitiation(Nullable<long> rennovationRequestId, Nullable<int> requestStatusId, string paymentInfo, string comments, Nullable<long> actionTakenByUserId, string updatedBY, Nullable<int> previousStatusID, Nullable<System.DateTime> paymentDate, ObjectParameter errorCode, ObjectParameter pGResponseId)
        {
            var rennovationRequestIdParameter = rennovationRequestId.HasValue ?
                new ObjectParameter("RennovationRequestId", rennovationRequestId) :
                new ObjectParameter("RennovationRequestId", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var paymentDateParameter = paymentDate.HasValue ?
                new ObjectParameter("PaymentDate", paymentDate) :
                new ObjectParameter("PaymentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_PG_SaveRenovationRequestPaymentInitiation", rennovationRequestIdParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, actionTakenByUserIdParameter, updatedBYParameter, previousStatusIDParameter, paymentDateParameter, errorCode, pGResponseId);
        }
    
        public virtual int SP_DGC_PG_SaveVehicleParkingRequestPaymentInitiation(Nullable<long> vehicleParkingRequestID, Nullable<int> requestStatusId, string paymentInfo, string comments, Nullable<long> actionTakenByUserId, string updatedBY, Nullable<int> previousStatusID, Nullable<System.DateTime> paymentDate, ObjectParameter errorCode, ObjectParameter pGResponseId)
        {
            var vehicleParkingRequestIDParameter = vehicleParkingRequestID.HasValue ?
                new ObjectParameter("VehicleParkingRequestID", vehicleParkingRequestID) :
                new ObjectParameter("VehicleParkingRequestID", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var paymentDateParameter = paymentDate.HasValue ?
                new ObjectParameter("PaymentDate", paymentDate) :
                new ObjectParameter("PaymentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_PG_SaveVehicleParkingRequestPaymentInitiation", vehicleParkingRequestIDParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, actionTakenByUserIdParameter, updatedBYParameter, previousStatusIDParameter, paymentDateParameter, errorCode, pGResponseId);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitSettings_Result> SP_DGC_GetAllUnitSettings(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitSettings_Result>("SP_DGC_GetAllUnitSettings", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitSettingDetailsById_Result> SP_DGC_GetUnitSettingDetailsById(Nullable<int> unitId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitSettingDetailsById_Result>("SP_DGC_GetUnitSettingDetailsById", unitIdParameter);
        }
    
        public virtual int SP_DGC_SaveUnitMasterDetails(Nullable<int> unitId, string unitName, string unitDescription, Nullable<float> builtUpArea, Nullable<int> floorId, Nullable<int> blockId, string isActive, string updatedBy, string isResidence, Nullable<decimal> rentPerMonth, Nullable<decimal> depositAmount, Nullable<decimal> openingBalance, Nullable<System.DateTime> oBAsONDate, string qrCodePath, Nullable<int> noOfParkingSlots, Nullable<float> shareArea, Nullable<float> totalArea, string isunderManagement, ObjectParameter errorCode)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            var unitDescriptionParameter = unitDescription != null ?
                new ObjectParameter("UnitDescription", unitDescription) :
                new ObjectParameter("UnitDescription", typeof(string));
    
            var builtUpAreaParameter = builtUpArea.HasValue ?
                new ObjectParameter("BuiltUpArea", builtUpArea) :
                new ObjectParameter("BuiltUpArea", typeof(float));
    
            var floorIdParameter = floorId.HasValue ?
                new ObjectParameter("FloorId", floorId) :
                new ObjectParameter("FloorId", typeof(int));
    
            var blockIdParameter = blockId.HasValue ?
                new ObjectParameter("BlockId", blockId) :
                new ObjectParameter("BlockId", typeof(int));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isResidenceParameter = isResidence != null ?
                new ObjectParameter("IsResidence", isResidence) :
                new ObjectParameter("IsResidence", typeof(string));
    
            var rentPerMonthParameter = rentPerMonth.HasValue ?
                new ObjectParameter("RentPerMonth", rentPerMonth) :
                new ObjectParameter("RentPerMonth", typeof(decimal));
    
            var depositAmountParameter = depositAmount.HasValue ?
                new ObjectParameter("DepositAmount", depositAmount) :
                new ObjectParameter("DepositAmount", typeof(decimal));
    
            var openingBalanceParameter = openingBalance.HasValue ?
                new ObjectParameter("OpeningBalance", openingBalance) :
                new ObjectParameter("OpeningBalance", typeof(decimal));
    
            var oBAsONDateParameter = oBAsONDate.HasValue ?
                new ObjectParameter("OBAsONDate", oBAsONDate) :
                new ObjectParameter("OBAsONDate", typeof(System.DateTime));
    
            var qrCodePathParameter = qrCodePath != null ?
                new ObjectParameter("QrCodePath", qrCodePath) :
                new ObjectParameter("QrCodePath", typeof(string));
    
            var noOfParkingSlotsParameter = noOfParkingSlots.HasValue ?
                new ObjectParameter("NoOfParkingSlots", noOfParkingSlots) :
                new ObjectParameter("NoOfParkingSlots", typeof(int));
    
            var shareAreaParameter = shareArea.HasValue ?
                new ObjectParameter("ShareArea", shareArea) :
                new ObjectParameter("ShareArea", typeof(float));
    
            var totalAreaParameter = totalArea.HasValue ?
                new ObjectParameter("TotalArea", totalArea) :
                new ObjectParameter("TotalArea", typeof(float));
    
            var isunderManagementParameter = isunderManagement != null ?
                new ObjectParameter("IsunderManagement", isunderManagement) :
                new ObjectParameter("IsunderManagement", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitMasterDetails", unitIdParameter, unitNameParameter, unitDescriptionParameter, builtUpAreaParameter, floorIdParameter, blockIdParameter, isActiveParameter, updatedByParameter, isResidenceParameter, rentPerMonthParameter, depositAmountParameter, openingBalanceParameter, oBAsONDateParameter, qrCodePathParameter, noOfParkingSlotsParameter, shareAreaParameter, totalAreaParameter, isunderManagementParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitsOfCondomium_Result> SP_DGC_GetAllUnitsOfCondomium(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitsOfCondomium_Result>("SP_DGC_GetAllUnitsOfCondomium", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetHallFeeDetails_Result> SP_DGC_GetHallFeeDetails(string isShowAllFuturePrice)
        {
            var isShowAllFuturePriceParameter = isShowAllFuturePrice != null ?
                new ObjectParameter("IsShowAllFuturePrice", isShowAllFuturePrice) :
                new ObjectParameter("IsShowAllFuturePrice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetHallFeeDetails_Result>("SP_DGC_GetHallFeeDetails", isShowAllFuturePriceParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveInvoiceConfigurationDetails_Result> SP_DGC_GetActiveInvoiceConfigurationDetails(Nullable<int> billTypeId, string unitType)
        {
            var billTypeIdParameter = billTypeId.HasValue ?
                new ObjectParameter("BillTypeId", billTypeId) :
                new ObjectParameter("BillTypeId", typeof(int));
    
            var unitTypeParameter = unitType != null ?
                new ObjectParameter("UnitType", unitType) :
                new ObjectParameter("UnitType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveInvoiceConfigurationDetails_Result>("SP_DGC_GetActiveInvoiceConfigurationDetails", billTypeIdParameter, unitTypeParameter);
        }
    
        public virtual int SP_DGC_SaveInvoiceConfigurationDetails(Nullable<int> invoiceConfigId, Nullable<int> billTypeId, Nullable<float> lateFee, Nullable<int> intrestFreeDays, Nullable<float> rateOfIntrestPerMonth, Nullable<System.DateTime> biilingStartDate, Nullable<System.DateTime> effectiveFrom, string billcode, string lineDescription, string dueLineDesc, string intrestLineDesc, Nullable<int> invoicePeriodDuration, Nullable<int> billInclusiveMonth, string updatedBy, string unitType, string isLateFeeApplicable, ObjectParameter errorCode)
        {
            var invoiceConfigIdParameter = invoiceConfigId.HasValue ?
                new ObjectParameter("InvoiceConfigId", invoiceConfigId) :
                new ObjectParameter("InvoiceConfigId", typeof(int));
    
            var billTypeIdParameter = billTypeId.HasValue ?
                new ObjectParameter("BillTypeId", billTypeId) :
                new ObjectParameter("BillTypeId", typeof(int));
    
            var lateFeeParameter = lateFee.HasValue ?
                new ObjectParameter("LateFee", lateFee) :
                new ObjectParameter("LateFee", typeof(float));
    
            var intrestFreeDaysParameter = intrestFreeDays.HasValue ?
                new ObjectParameter("IntrestFreeDays", intrestFreeDays) :
                new ObjectParameter("IntrestFreeDays", typeof(int));
    
            var rateOfIntrestPerMonthParameter = rateOfIntrestPerMonth.HasValue ?
                new ObjectParameter("RateOfIntrestPerMonth", rateOfIntrestPerMonth) :
                new ObjectParameter("RateOfIntrestPerMonth", typeof(float));
    
            var biilingStartDateParameter = biilingStartDate.HasValue ?
                new ObjectParameter("BiilingStartDate", biilingStartDate) :
                new ObjectParameter("BiilingStartDate", typeof(System.DateTime));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var billcodeParameter = billcode != null ?
                new ObjectParameter("Billcode", billcode) :
                new ObjectParameter("Billcode", typeof(string));
    
            var lineDescriptionParameter = lineDescription != null ?
                new ObjectParameter("LineDescription", lineDescription) :
                new ObjectParameter("LineDescription", typeof(string));
    
            var dueLineDescParameter = dueLineDesc != null ?
                new ObjectParameter("DueLineDesc", dueLineDesc) :
                new ObjectParameter("DueLineDesc", typeof(string));
    
            var intrestLineDescParameter = intrestLineDesc != null ?
                new ObjectParameter("IntrestLineDesc", intrestLineDesc) :
                new ObjectParameter("IntrestLineDesc", typeof(string));
    
            var invoicePeriodDurationParameter = invoicePeriodDuration.HasValue ?
                new ObjectParameter("InvoicePeriodDuration", invoicePeriodDuration) :
                new ObjectParameter("InvoicePeriodDuration", typeof(int));
    
            var billInclusiveMonthParameter = billInclusiveMonth.HasValue ?
                new ObjectParameter("BillInclusiveMonth", billInclusiveMonth) :
                new ObjectParameter("BillInclusiveMonth", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var unitTypeParameter = unitType != null ?
                new ObjectParameter("UnitType", unitType) :
                new ObjectParameter("UnitType", typeof(string));
    
            var isLateFeeApplicableParameter = isLateFeeApplicable != null ?
                new ObjectParameter("IsLateFeeApplicable", isLateFeeApplicable) :
                new ObjectParameter("IsLateFeeApplicable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveInvoiceConfigurationDetails", invoiceConfigIdParameter, billTypeIdParameter, lateFeeParameter, intrestFreeDaysParameter, rateOfIntrestPerMonthParameter, biilingStartDateParameter, effectiveFromParameter, billcodeParameter, lineDescriptionParameter, dueLineDescParameter, intrestLineDescParameter, invoicePeriodDurationParameter, billInclusiveMonthParameter, updatedByParameter, unitTypeParameter, isLateFeeApplicableParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetHallFeeDetailsByBookinglotId_Result> SP_DGC_GetHallFeeDetailsByBookinglotId(Nullable<int> slotId)
        {
            var slotIdParameter = slotId.HasValue ?
                new ObjectParameter("SlotId", slotId) :
                new ObjectParameter("SlotId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetHallFeeDetailsByBookinglotId_Result>("SP_DGC_GetHallFeeDetailsByBookinglotId", slotIdParameter);
        }
    
        public virtual int SP_DGC_SaveHallBookingRequestDetails_V1(Nullable<long> hallBookingRequestId, string requestFor, Nullable<int> unitId, Nullable<long> livingMemberUserId, Nullable<System.DateTime> bookingDate, string puproseOfBooking, string hallPriceIds, Nullable<int> statusId, Nullable<long> requestByUserId, string updatedBy, ObjectParameter errorCode, ObjectParameter hBRquestId, ObjectParameter livingMemberCentralUserId, Nullable<System.DateTime> toDaysClientDate, Nullable<long> slotId, string isUserAcceptedTermsAndConditions)
        {
            var hallBookingRequestIdParameter = hallBookingRequestId.HasValue ?
                new ObjectParameter("HallBookingRequestId", hallBookingRequestId) :
                new ObjectParameter("HallBookingRequestId", typeof(long));
    
            var requestForParameter = requestFor != null ?
                new ObjectParameter("RequestFor", requestFor) :
                new ObjectParameter("RequestFor", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var livingMemberUserIdParameter = livingMemberUserId.HasValue ?
                new ObjectParameter("livingMemberUserId", livingMemberUserId) :
                new ObjectParameter("livingMemberUserId", typeof(long));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var puproseOfBookingParameter = puproseOfBooking != null ?
                new ObjectParameter("PuproseOfBooking", puproseOfBooking) :
                new ObjectParameter("PuproseOfBooking", typeof(string));
    
            var hallPriceIdsParameter = hallPriceIds != null ?
                new ObjectParameter("HallPriceIds", hallPriceIds) :
                new ObjectParameter("HallPriceIds", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var requestByUserIdParameter = requestByUserId.HasValue ?
                new ObjectParameter("RequestByUserId", requestByUserId) :
                new ObjectParameter("RequestByUserId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var toDaysClientDateParameter = toDaysClientDate.HasValue ?
                new ObjectParameter("ToDaysClientDate", toDaysClientDate) :
                new ObjectParameter("ToDaysClientDate", typeof(System.DateTime));
    
            var slotIdParameter = slotId.HasValue ?
                new ObjectParameter("SlotId", slotId) :
                new ObjectParameter("SlotId", typeof(long));
    
            var isUserAcceptedTermsAndConditionsParameter = isUserAcceptedTermsAndConditions != null ?
                new ObjectParameter("IsUserAcceptedTermsAndConditions", isUserAcceptedTermsAndConditions) :
                new ObjectParameter("IsUserAcceptedTermsAndConditions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveHallBookingRequestDetails_V1", hallBookingRequestIdParameter, requestForParameter, unitIdParameter, livingMemberUserIdParameter, bookingDateParameter, puproseOfBookingParameter, hallPriceIdsParameter, statusIdParameter, requestByUserIdParameter, updatedByParameter, errorCode, hBRquestId, livingMemberCentralUserId, toDaysClientDateParameter, slotIdParameter, isUserAcceptedTermsAndConditionsParameter);
        }
    
        public virtual int SP_DGC_SaveHallHourlyRateDetails(string unitRequestItemPriceInfo, string updatedBy, ObjectParameter errorCode)
        {
            var unitRequestItemPriceInfoParameter = unitRequestItemPriceInfo != null ?
                new ObjectParameter("UnitRequestItemPriceInfo", unitRequestItemPriceInfo) :
                new ObjectParameter("UnitRequestItemPriceInfo", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveHallHourlyRateDetails", unitRequestItemPriceInfoParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllHallBookingRequest_Result> SP_DGC_GetAllHallBookingRequest(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId, Nullable<System.DateTime> eventFromDate, Nullable<System.DateTime> eventToDate, Nullable<System.DateTime> raisedFomDate, Nullable<System.DateTime> raisedToDate, Nullable<int> statusID)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var eventFromDateParameter = eventFromDate.HasValue ?
                new ObjectParameter("EventFromDate", eventFromDate) :
                new ObjectParameter("EventFromDate", typeof(System.DateTime));
    
            var eventToDateParameter = eventToDate.HasValue ?
                new ObjectParameter("EventToDate", eventToDate) :
                new ObjectParameter("EventToDate", typeof(System.DateTime));
    
            var raisedFomDateParameter = raisedFomDate.HasValue ?
                new ObjectParameter("RaisedFomDate", raisedFomDate) :
                new ObjectParameter("RaisedFomDate", typeof(System.DateTime));
    
            var raisedToDateParameter = raisedToDate.HasValue ?
                new ObjectParameter("RaisedToDate", raisedToDate) :
                new ObjectParameter("RaisedToDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllHallBookingRequest_Result>("SP_DGC_GetAllHallBookingRequest", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter, eventFromDateParameter, eventToDateParameter, raisedFomDateParameter, raisedToDateParameter, statusIDParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetHallBookingHistoryById_Result> SP_DGC_GetHallBookingHistoryById(Nullable<long> hallBookingRequestId)
        {
            var hallBookingRequestIdParameter = hallBookingRequestId.HasValue ?
                new ObjectParameter("HallBookingRequestId", hallBookingRequestId) :
                new ObjectParameter("HallBookingRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetHallBookingHistoryById_Result>("SP_DGC_GetHallBookingHistoryById", hallBookingRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetWaterConsumeByMeterReadingId_Result> SP_DGC_GetWaterConsumeByMeterReadingId(Nullable<long> meterReadingId)
        {
            var meterReadingIdParameter = meterReadingId.HasValue ?
                new ObjectParameter("MeterReadingId", meterReadingId) :
                new ObjectParameter("MeterReadingId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetWaterConsumeByMeterReadingId_Result>("SP_DGC_GetWaterConsumeByMeterReadingId", meterReadingIdParameter);
        }
    
        public virtual int SP_DGC_SaveWaterConsumeDetails(Nullable<long> meterReadingId, Nullable<int> unitId, Nullable<System.DateTime> periodFrom, Nullable<System.DateTime> periodTo, string readingTime, string monthOfReading, Nullable<long> previousReading, Nullable<long> currentReading, Nullable<long> consumedUnits, Nullable<int> statusId, Nullable<long> readingTakenByUserId, string updatedBy, string uploadDocument, ObjectParameter errorCode)
        {
            var meterReadingIdParameter = meterReadingId.HasValue ?
                new ObjectParameter("MeterReadingId", meterReadingId) :
                new ObjectParameter("MeterReadingId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var periodFromParameter = periodFrom.HasValue ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(System.DateTime));
    
            var periodToParameter = periodTo.HasValue ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(System.DateTime));
    
            var readingTimeParameter = readingTime != null ?
                new ObjectParameter("ReadingTime", readingTime) :
                new ObjectParameter("ReadingTime", typeof(string));
    
            var monthOfReadingParameter = monthOfReading != null ?
                new ObjectParameter("MonthOfReading", monthOfReading) :
                new ObjectParameter("MonthOfReading", typeof(string));
    
            var previousReadingParameter = previousReading.HasValue ?
                new ObjectParameter("PreviousReading", previousReading) :
                new ObjectParameter("PreviousReading", typeof(long));
    
            var currentReadingParameter = currentReading.HasValue ?
                new ObjectParameter("CurrentReading", currentReading) :
                new ObjectParameter("CurrentReading", typeof(long));
    
            var consumedUnitsParameter = consumedUnits.HasValue ?
                new ObjectParameter("ConsumedUnits", consumedUnits) :
                new ObjectParameter("ConsumedUnits", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var readingTakenByUserIdParameter = readingTakenByUserId.HasValue ?
                new ObjectParameter("ReadingTakenByUserId", readingTakenByUserId) :
                new ObjectParameter("ReadingTakenByUserId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var uploadDocumentParameter = uploadDocument != null ?
                new ObjectParameter("UploadDocument", uploadDocument) :
                new ObjectParameter("UploadDocument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveWaterConsumeDetails", meterReadingIdParameter, unitIdParameter, periodFromParameter, periodToParameter, readingTimeParameter, monthOfReadingParameter, previousReadingParameter, currentReadingParameter, consumedUnitsParameter, statusIdParameter, readingTakenByUserIdParameter, updatedByParameter, uploadDocumentParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllFacilityDetails_Result> SP_DGC_GetAllFacilityDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllFacilityDetails_Result>("SP_DGC_GetAllFacilityDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllWaterConsumeDetails_Result> SP_DGC_GetAllWaterConsumeDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllWaterConsumeDetails_Result>("SP_DGC_GetAllWaterConsumeDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityChargesByBookingSlotId_Result> SP_DGC_GetFacilityChargesByBookingSlotId(Nullable<int> facilityId, Nullable<int> slotId)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            var slotIdParameter = slotId.HasValue ?
                new ObjectParameter("SlotId", slotId) :
                new ObjectParameter("SlotId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityChargesByBookingSlotId_Result>("SP_DGC_GetFacilityChargesByBookingSlotId", facilityIdParameter, slotIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityLinePackagePriceDetailsByLineId_Result> SP_DGC_GetFacilityLinePackagePriceDetailsByLineId(Nullable<int> facilityId, string isShowAllFuturePrice)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            var isShowAllFuturePriceParameter = isShowAllFuturePrice != null ?
                new ObjectParameter("IsShowAllFuturePrice", isShowAllFuturePrice) :
                new ObjectParameter("IsShowAllFuturePrice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityLinePackagePriceDetailsByLineId_Result>("SP_DGC_GetFacilityLinePackagePriceDetailsByLineId", facilityIdParameter, isShowAllFuturePriceParameter);
        }
    
        public virtual int SP_DGC_SaveFacilityLineFeeDetails(Nullable<long> facilityId, string facilityPriceInfo, string updatedBy, ObjectParameter errorCode)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(long));
    
            var facilityPriceInfoParameter = facilityPriceInfo != null ?
                new ObjectParameter("FacilityPriceInfo", facilityPriceInfo) :
                new ObjectParameter("FacilityPriceInfo", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFacilityLineFeeDetails", facilityIdParameter, facilityPriceInfoParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllCondoFacilityBookingDetails_Result> SP_DGC_GetAllCondoFacilityBookingDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> unitId, Nullable<System.DateTime> facilityFromDate, Nullable<System.DateTime> facilityToDate, Nullable<System.DateTime> raisedFomDate, Nullable<System.DateTime> raisedToDate, Nullable<int> statusId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var facilityFromDateParameter = facilityFromDate.HasValue ?
                new ObjectParameter("FacilityFromDate", facilityFromDate) :
                new ObjectParameter("FacilityFromDate", typeof(System.DateTime));
    
            var facilityToDateParameter = facilityToDate.HasValue ?
                new ObjectParameter("FacilityToDate", facilityToDate) :
                new ObjectParameter("FacilityToDate", typeof(System.DateTime));
    
            var raisedFomDateParameter = raisedFomDate.HasValue ?
                new ObjectParameter("RaisedFomDate", raisedFomDate) :
                new ObjectParameter("RaisedFomDate", typeof(System.DateTime));
    
            var raisedToDateParameter = raisedToDate.HasValue ?
                new ObjectParameter("RaisedToDate", raisedToDate) :
                new ObjectParameter("RaisedToDate", typeof(System.DateTime));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllCondoFacilityBookingDetails_Result>("SP_DGC_GetAllCondoFacilityBookingDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, requestedFromRoleParameter, requestedUserIdParameter, unitIdParameter, facilityFromDateParameter, facilityToDateParameter, raisedFomDateParameter, raisedToDateParameter, statusIdParameter);
        }
    
        public virtual int SP_DGC_SaveFacilitySlotSettingDetails(string slotSetting, string createdBy, ObjectParameter errorCode)
        {
            var slotSettingParameter = slotSetting != null ?
                new ObjectParameter("SlotSetting", slotSetting) :
                new ObjectParameter("SlotSetting", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFacilitySlotSettingDetails", slotSettingParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveHallSlotSettingDetails(string slotSetting, string createdBy, ObjectParameter errorCode)
        {
            var slotSettingParameter = slotSetting != null ?
                new ObjectParameter("SlotSetting", slotSetting) :
                new ObjectParameter("SlotSetting", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveHallSlotSettingDetails", slotSettingParameter, createdByParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveCondoFacilityBookingDetails(Nullable<int> facilitiesId, Nullable<int> courtID, Nullable<int> unitId, Nullable<int> livingMemberUserId, string outersName, Nullable<System.DateTime> bookingDate, string fromTime, string totime, string facilitiesCategory, Nullable<int> numberOfPeoples, string facilityBookPriceids, string updatedBy, ObjectParameter errorCode, ObjectParameter facilityBookingId, ObjectParameter livingMemberCentralUserId, Nullable<int> slotId, Nullable<System.DateTime> todaysClientDate, string isUserAcceptedTermsAndConditions)
        {
            var facilitiesIdParameter = facilitiesId.HasValue ?
                new ObjectParameter("FacilitiesId", facilitiesId) :
                new ObjectParameter("FacilitiesId", typeof(int));
    
            var courtIDParameter = courtID.HasValue ?
                new ObjectParameter("CourtID", courtID) :
                new ObjectParameter("CourtID", typeof(int));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var livingMemberUserIdParameter = livingMemberUserId.HasValue ?
                new ObjectParameter("LivingMemberUserId", livingMemberUserId) :
                new ObjectParameter("LivingMemberUserId", typeof(int));
    
            var outersNameParameter = outersName != null ?
                new ObjectParameter("OutersName", outersName) :
                new ObjectParameter("OutersName", typeof(string));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var fromTimeParameter = fromTime != null ?
                new ObjectParameter("FromTime", fromTime) :
                new ObjectParameter("FromTime", typeof(string));
    
            var totimeParameter = totime != null ?
                new ObjectParameter("Totime", totime) :
                new ObjectParameter("Totime", typeof(string));
    
            var facilitiesCategoryParameter = facilitiesCategory != null ?
                new ObjectParameter("facilitiesCategory", facilitiesCategory) :
                new ObjectParameter("facilitiesCategory", typeof(string));
    
            var numberOfPeoplesParameter = numberOfPeoples.HasValue ?
                new ObjectParameter("NumberOfPeoples", numberOfPeoples) :
                new ObjectParameter("NumberOfPeoples", typeof(int));
    
            var facilityBookPriceidsParameter = facilityBookPriceids != null ?
                new ObjectParameter("FacilityBookPriceids", facilityBookPriceids) :
                new ObjectParameter("FacilityBookPriceids", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var slotIdParameter = slotId.HasValue ?
                new ObjectParameter("SlotId", slotId) :
                new ObjectParameter("SlotId", typeof(int));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            var isUserAcceptedTermsAndConditionsParameter = isUserAcceptedTermsAndConditions != null ?
                new ObjectParameter("IsUserAcceptedTermsAndConditions", isUserAcceptedTermsAndConditions) :
                new ObjectParameter("IsUserAcceptedTermsAndConditions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCondoFacilityBookingDetails", facilitiesIdParameter, courtIDParameter, unitIdParameter, livingMemberUserIdParameter, outersNameParameter, bookingDateParameter, fromTimeParameter, totimeParameter, facilitiesCategoryParameter, numberOfPeoplesParameter, facilityBookPriceidsParameter, updatedByParameter, errorCode, facilityBookingId, livingMemberCentralUserId, slotIdParameter, todaysClientDateParameter, isUserAcceptedTermsAndConditionsParameter);
        }
    
        public virtual int SP_DGC_SaveAccessCardsRequestDetails(Nullable<long> accessGoodsRequestId, Nullable<int> unitId, Nullable<int> accessGoodsId, string requestForMemberName, Nullable<int> numberOfRequiredAccessGoods, Nullable<decimal> totalCostOfRequest, string requestComments, Nullable<int> requestStatusId, Nullable<long> raisedByUserId, string raisedBy, ObjectParameter errorCode, ObjectParameter livingMemberCentralUserId, ObjectParameter aCRequestid)
        {
            var accessGoodsRequestIdParameter = accessGoodsRequestId.HasValue ?
                new ObjectParameter("AccessGoodsRequestId", accessGoodsRequestId) :
                new ObjectParameter("AccessGoodsRequestId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var accessGoodsIdParameter = accessGoodsId.HasValue ?
                new ObjectParameter("AccessGoodsId", accessGoodsId) :
                new ObjectParameter("AccessGoodsId", typeof(int));
    
            var requestForMemberNameParameter = requestForMemberName != null ?
                new ObjectParameter("RequestForMemberName", requestForMemberName) :
                new ObjectParameter("RequestForMemberName", typeof(string));
    
            var numberOfRequiredAccessGoodsParameter = numberOfRequiredAccessGoods.HasValue ?
                new ObjectParameter("NumberOfRequiredAccessGoods", numberOfRequiredAccessGoods) :
                new ObjectParameter("NumberOfRequiredAccessGoods", typeof(int));
    
            var totalCostOfRequestParameter = totalCostOfRequest.HasValue ?
                new ObjectParameter("TotalCostOfRequest", totalCostOfRequest) :
                new ObjectParameter("TotalCostOfRequest", typeof(decimal));
    
            var requestCommentsParameter = requestComments != null ?
                new ObjectParameter("RequestComments", requestComments) :
                new ObjectParameter("RequestComments", typeof(string));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var raisedByUserIdParameter = raisedByUserId.HasValue ?
                new ObjectParameter("RaisedByUserId", raisedByUserId) :
                new ObjectParameter("RaisedByUserId", typeof(long));
    
            var raisedByParameter = raisedBy != null ?
                new ObjectParameter("RaisedBy", raisedBy) :
                new ObjectParameter("RaisedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveAccessCardsRequestDetails", accessGoodsRequestIdParameter, unitIdParameter, accessGoodsIdParameter, requestForMemberNameParameter, numberOfRequiredAccessGoodsParameter, totalCostOfRequestParameter, requestCommentsParameter, requestStatusIdParameter, raisedByUserIdParameter, raisedByParameter, errorCode, livingMemberCentralUserId, aCRequestid);
        }
    
        public virtual int SP_DGC_SaveAccessGoodsRequestDetails(Nullable<long> accessGoodsRequestId, Nullable<int> unitId, Nullable<int> accessGoodsId, string requestForMemberName, Nullable<int> numberOfRequiredAccessGoods, Nullable<decimal> totalCostOfRequest, string requestComments, Nullable<int> requestStatusId, Nullable<long> raisedByUserId, string raisedBy, ObjectParameter errorCode, ObjectParameter livingMemberCentralUserId, ObjectParameter aCRequestid, string isUserAcceptedTermsAndConditions, Nullable<System.DateTime> createdOn)
        {
            var accessGoodsRequestIdParameter = accessGoodsRequestId.HasValue ?
                new ObjectParameter("AccessGoodsRequestId", accessGoodsRequestId) :
                new ObjectParameter("AccessGoodsRequestId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var accessGoodsIdParameter = accessGoodsId.HasValue ?
                new ObjectParameter("AccessGoodsId", accessGoodsId) :
                new ObjectParameter("AccessGoodsId", typeof(int));
    
            var requestForMemberNameParameter = requestForMemberName != null ?
                new ObjectParameter("RequestForMemberName", requestForMemberName) :
                new ObjectParameter("RequestForMemberName", typeof(string));
    
            var numberOfRequiredAccessGoodsParameter = numberOfRequiredAccessGoods.HasValue ?
                new ObjectParameter("NumberOfRequiredAccessGoods", numberOfRequiredAccessGoods) :
                new ObjectParameter("NumberOfRequiredAccessGoods", typeof(int));
    
            var totalCostOfRequestParameter = totalCostOfRequest.HasValue ?
                new ObjectParameter("TotalCostOfRequest", totalCostOfRequest) :
                new ObjectParameter("TotalCostOfRequest", typeof(decimal));
    
            var requestCommentsParameter = requestComments != null ?
                new ObjectParameter("RequestComments", requestComments) :
                new ObjectParameter("RequestComments", typeof(string));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var raisedByUserIdParameter = raisedByUserId.HasValue ?
                new ObjectParameter("RaisedByUserId", raisedByUserId) :
                new ObjectParameter("RaisedByUserId", typeof(long));
    
            var raisedByParameter = raisedBy != null ?
                new ObjectParameter("RaisedBy", raisedBy) :
                new ObjectParameter("RaisedBy", typeof(string));
    
            var isUserAcceptedTermsAndConditionsParameter = isUserAcceptedTermsAndConditions != null ?
                new ObjectParameter("IsUserAcceptedTermsAndConditions", isUserAcceptedTermsAndConditions) :
                new ObjectParameter("IsUserAcceptedTermsAndConditions", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveAccessGoodsRequestDetails", accessGoodsRequestIdParameter, unitIdParameter, accessGoodsIdParameter, requestForMemberNameParameter, numberOfRequiredAccessGoodsParameter, totalCostOfRequestParameter, requestCommentsParameter, requestStatusIdParameter, raisedByUserIdParameter, raisedByParameter, errorCode, livingMemberCentralUserId, aCRequestid, isUserAcceptedTermsAndConditionsParameter, createdOnParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetVisitorByVisitorId_Result> SP_DGC_GetVisitorByVisitorId(Nullable<int> visitorRequestId)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVisitorByVisitorId_Result>("SP_DGC_GetVisitorByVisitorId", visitorRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetVisitorByVisitorReqId_Result> SP_DGC_GetVisitorByVisitorReqId(Nullable<int> visitorRequestId)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVisitorByVisitorReqId_Result>("SP_DGC_GetVisitorByVisitorReqId", visitorRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllClampRequestDetails_Result> SP_DGC_GetAllClampRequestDetails(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<System.DateTime> clampedFromDate, Nullable<System.DateTime> clampedToDate, Nullable<int> statusId)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var clampedFromDateParameter = clampedFromDate.HasValue ?
                new ObjectParameter("ClampedFromDate", clampedFromDate) :
                new ObjectParameter("ClampedFromDate", typeof(System.DateTime));
    
            var clampedToDateParameter = clampedToDate.HasValue ?
                new ObjectParameter("ClampedToDate", clampedToDate) :
                new ObjectParameter("ClampedToDate", typeof(System.DateTime));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllClampRequestDetails_Result>("SP_DGC_GetAllClampRequestDetails", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, clampedFromDateParameter, clampedToDateParameter, statusIdParameter);
        }
    
        public virtual int SP_DGC_SaveVisitorRequest(Nullable<int> visitorRequestId, Nullable<long> livingMemberId, Nullable<int> unitId, string visitorName, string visitingPurpose, string visitorMobileNo, string visitorVehicleNo, Nullable<System.DateTime> visitingDateTime, string updatedBy, ObjectParameter errorCode, ObjectParameter vRequestID, ObjectParameter livingMemberCentralUserId, Nullable<System.DateTime> todayClientDate, Nullable<System.DateTime> expectedLeavingDate, string expectedLeavingTime)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            var livingMemberIdParameter = livingMemberId.HasValue ?
                new ObjectParameter("LivingMemberId", livingMemberId) :
                new ObjectParameter("LivingMemberId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var visitorNameParameter = visitorName != null ?
                new ObjectParameter("VisitorName", visitorName) :
                new ObjectParameter("VisitorName", typeof(string));
    
            var visitingPurposeParameter = visitingPurpose != null ?
                new ObjectParameter("VisitingPurpose", visitingPurpose) :
                new ObjectParameter("VisitingPurpose", typeof(string));
    
            var visitorMobileNoParameter = visitorMobileNo != null ?
                new ObjectParameter("VisitorMobileNo", visitorMobileNo) :
                new ObjectParameter("VisitorMobileNo", typeof(string));
    
            var visitorVehicleNoParameter = visitorVehicleNo != null ?
                new ObjectParameter("VisitorVehicleNo", visitorVehicleNo) :
                new ObjectParameter("VisitorVehicleNo", typeof(string));
    
            var visitingDateTimeParameter = visitingDateTime.HasValue ?
                new ObjectParameter("VisitingDateTime", visitingDateTime) :
                new ObjectParameter("VisitingDateTime", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var todayClientDateParameter = todayClientDate.HasValue ?
                new ObjectParameter("TodayClientDate", todayClientDate) :
                new ObjectParameter("TodayClientDate", typeof(System.DateTime));
    
            var expectedLeavingDateParameter = expectedLeavingDate.HasValue ?
                new ObjectParameter("ExpectedLeavingDate", expectedLeavingDate) :
                new ObjectParameter("ExpectedLeavingDate", typeof(System.DateTime));
    
            var expectedLeavingTimeParameter = expectedLeavingTime != null ?
                new ObjectParameter("ExpectedLeavingTime", expectedLeavingTime) :
                new ObjectParameter("ExpectedLeavingTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVisitorRequest", visitorRequestIdParameter, livingMemberIdParameter, unitIdParameter, visitorNameParameter, visitingPurposeParameter, visitorMobileNoParameter, visitorVehicleNoParameter, visitingDateTimeParameter, updatedByParameter, errorCode, vRequestID, livingMemberCentralUserId, todayClientDateParameter, expectedLeavingDateParameter, expectedLeavingTimeParameter);
        }
    
        public virtual int SP_DGC_SecuritySavingVisitorRequest(Nullable<int> visitorRequestId, Nullable<long> livingMemberId, Nullable<int> unitId, string visitorName, string visitingPurpose, string visitorMobileNo, string visitorVehicleNo, Nullable<System.DateTime> visitingDateTime, string visitorPhotPath, string visitorIdentityProofPath, string isSlatAvailable, string updatedBy, ObjectParameter errorCode, ObjectParameter currentVRequestID, ObjectParameter livingMemberCentralUserId, string visitorInComment, string visitorCardNumber, Nullable<long> actionTakenByUserid, Nullable<System.DateTime> todayClientDate, Nullable<System.DateTime> expectedLeavingDate, string expectedLeavingTime)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            var livingMemberIdParameter = livingMemberId.HasValue ?
                new ObjectParameter("LivingMemberId", livingMemberId) :
                new ObjectParameter("LivingMemberId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var visitorNameParameter = visitorName != null ?
                new ObjectParameter("VisitorName", visitorName) :
                new ObjectParameter("VisitorName", typeof(string));
    
            var visitingPurposeParameter = visitingPurpose != null ?
                new ObjectParameter("VisitingPurpose", visitingPurpose) :
                new ObjectParameter("VisitingPurpose", typeof(string));
    
            var visitorMobileNoParameter = visitorMobileNo != null ?
                new ObjectParameter("VisitorMobileNo", visitorMobileNo) :
                new ObjectParameter("VisitorMobileNo", typeof(string));
    
            var visitorVehicleNoParameter = visitorVehicleNo != null ?
                new ObjectParameter("VisitorVehicleNo", visitorVehicleNo) :
                new ObjectParameter("VisitorVehicleNo", typeof(string));
    
            var visitingDateTimeParameter = visitingDateTime.HasValue ?
                new ObjectParameter("VisitingDateTime", visitingDateTime) :
                new ObjectParameter("VisitingDateTime", typeof(System.DateTime));
    
            var visitorPhotPathParameter = visitorPhotPath != null ?
                new ObjectParameter("VisitorPhotPath", visitorPhotPath) :
                new ObjectParameter("VisitorPhotPath", typeof(string));
    
            var visitorIdentityProofPathParameter = visitorIdentityProofPath != null ?
                new ObjectParameter("VisitorIdentityProofPath", visitorIdentityProofPath) :
                new ObjectParameter("VisitorIdentityProofPath", typeof(string));
    
            var isSlatAvailableParameter = isSlatAvailable != null ?
                new ObjectParameter("IsSlatAvailable", isSlatAvailable) :
                new ObjectParameter("IsSlatAvailable", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var visitorInCommentParameter = visitorInComment != null ?
                new ObjectParameter("VisitorInComment", visitorInComment) :
                new ObjectParameter("VisitorInComment", typeof(string));
    
            var visitorCardNumberParameter = visitorCardNumber != null ?
                new ObjectParameter("VisitorCardNumber", visitorCardNumber) :
                new ObjectParameter("VisitorCardNumber", typeof(string));
    
            var actionTakenByUseridParameter = actionTakenByUserid.HasValue ?
                new ObjectParameter("ActionTakenByUserid", actionTakenByUserid) :
                new ObjectParameter("ActionTakenByUserid", typeof(long));
    
            var todayClientDateParameter = todayClientDate.HasValue ?
                new ObjectParameter("TodayClientDate", todayClientDate) :
                new ObjectParameter("TodayClientDate", typeof(System.DateTime));
    
            var expectedLeavingDateParameter = expectedLeavingDate.HasValue ?
                new ObjectParameter("ExpectedLeavingDate", expectedLeavingDate) :
                new ObjectParameter("ExpectedLeavingDate", typeof(System.DateTime));
    
            var expectedLeavingTimeParameter = expectedLeavingTime != null ?
                new ObjectParameter("ExpectedLeavingTime", expectedLeavingTime) :
                new ObjectParameter("ExpectedLeavingTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SecuritySavingVisitorRequest", visitorRequestIdParameter, livingMemberIdParameter, unitIdParameter, visitorNameParameter, visitingPurposeParameter, visitorMobileNoParameter, visitorVehicleNoParameter, visitingDateTimeParameter, visitorPhotPathParameter, visitorIdentityProofPathParameter, isSlatAvailableParameter, updatedByParameter, errorCode, currentVRequestID, livingMemberCentralUserId, visitorInCommentParameter, visitorCardNumberParameter, actionTakenByUseridParameter, todayClientDateParameter, expectedLeavingDateParameter, expectedLeavingTimeParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetVisitorDetailsByVisitorId_Result> SP_DGC_GetVisitorDetailsByVisitorId(Nullable<int> visitorRequestId)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVisitorDetailsByVisitorId_Result>("SP_DGC_GetVisitorDetailsByVisitorId", visitorRequestIdParameter);
        }
    
        public virtual int SP_DGC_SaveHallBookingRequestActionDetails_V1(Nullable<long> hallBookingRequestId, Nullable<int> requestStatusId, string paymentInfo, string comments, string additionalReferenceFilePath, Nullable<long> actionTakenByUserId, string updatedBY, ObjectParameter errorCode, Nullable<int> previousStatusID, Nullable<System.DateTime> todaysClientDate, ObjectParameter hallBookingRequestActionId)
        {
            var hallBookingRequestIdParameter = hallBookingRequestId.HasValue ?
                new ObjectParameter("HallBookingRequestId", hallBookingRequestId) :
                new ObjectParameter("HallBookingRequestId", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveHallBookingRequestActionDetails_V1", hallBookingRequestIdParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, additionalReferenceFilePathParameter, actionTakenByUserIdParameter, updatedBYParameter, errorCode, previousStatusIDParameter, todaysClientDateParameter, hallBookingRequestActionId);
        }
    
        public virtual int SP_DGC_SaveFacilityBookingRequestActionDetails(Nullable<int> condoFacilityBookingId, Nullable<int> requestStatusId, string paymentInfo, string comments, string additionalReferenceFilePath, Nullable<long> actionTakenByUserId, string updatedBY, ObjectParameter errorCode, Nullable<int> previousStatusID, Nullable<System.DateTime> todaysClientDate, ObjectParameter facilityBookingRequestActionId)
        {
            var condoFacilityBookingIdParameter = condoFacilityBookingId.HasValue ?
                new ObjectParameter("CondoFacilityBookingId", condoFacilityBookingId) :
                new ObjectParameter("CondoFacilityBookingId", typeof(int));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveFacilityBookingRequestActionDetails", condoFacilityBookingIdParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, additionalReferenceFilePathParameter, actionTakenByUserIdParameter, updatedBYParameter, errorCode, previousStatusIDParameter, todaysClientDateParameter, facilityBookingRequestActionId);
        }
    
        public virtual int SP_DGC_SaveVehicleParkingRequest(Nullable<long> vehicleParkingRequestID, Nullable<int> vehicleSlotId, Nullable<int> allowdVehicleId, Nullable<int> unitId, Nullable<long> ownerOrTenantUserID, Nullable<decimal> parkingPrice, Nullable<System.DateTime> bookingFromDate, string bookingComment, string vehicleParkPriceIds, string createdBy, ObjectParameter errorCode, Nullable<int> initalSetupRequestID, ObjectParameter currentVehicleParkingRequestID, string isUserAcceptedTermsAndConditions, Nullable<System.DateTime> createdOn)
        {
            var vehicleParkingRequestIDParameter = vehicleParkingRequestID.HasValue ?
                new ObjectParameter("VehicleParkingRequestID", vehicleParkingRequestID) :
                new ObjectParameter("VehicleParkingRequestID", typeof(long));
    
            var vehicleSlotIdParameter = vehicleSlotId.HasValue ?
                new ObjectParameter("VehicleSlotId", vehicleSlotId) :
                new ObjectParameter("VehicleSlotId", typeof(int));
    
            var allowdVehicleIdParameter = allowdVehicleId.HasValue ?
                new ObjectParameter("AllowdVehicleId", allowdVehicleId) :
                new ObjectParameter("AllowdVehicleId", typeof(int));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var ownerOrTenantUserIDParameter = ownerOrTenantUserID.HasValue ?
                new ObjectParameter("OwnerOrTenantUserID", ownerOrTenantUserID) :
                new ObjectParameter("OwnerOrTenantUserID", typeof(long));
    
            var parkingPriceParameter = parkingPrice.HasValue ?
                new ObjectParameter("ParkingPrice", parkingPrice) :
                new ObjectParameter("ParkingPrice", typeof(decimal));
    
            var bookingFromDateParameter = bookingFromDate.HasValue ?
                new ObjectParameter("BookingFromDate", bookingFromDate) :
                new ObjectParameter("BookingFromDate", typeof(System.DateTime));
    
            var bookingCommentParameter = bookingComment != null ?
                new ObjectParameter("BookingComment", bookingComment) :
                new ObjectParameter("BookingComment", typeof(string));
    
            var vehicleParkPriceIdsParameter = vehicleParkPriceIds != null ?
                new ObjectParameter("VehicleParkPriceIds", vehicleParkPriceIds) :
                new ObjectParameter("VehicleParkPriceIds", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var initalSetupRequestIDParameter = initalSetupRequestID.HasValue ?
                new ObjectParameter("InitalSetupRequestID", initalSetupRequestID) :
                new ObjectParameter("InitalSetupRequestID", typeof(int));
    
            var isUserAcceptedTermsAndConditionsParameter = isUserAcceptedTermsAndConditions != null ?
                new ObjectParameter("IsUserAcceptedTermsAndConditions", isUserAcceptedTermsAndConditions) :
                new ObjectParameter("IsUserAcceptedTermsAndConditions", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVehicleParkingRequest", vehicleParkingRequestIDParameter, vehicleSlotIdParameter, allowdVehicleIdParameter, unitIdParameter, ownerOrTenantUserIDParameter, parkingPriceParameter, bookingFromDateParameter, bookingCommentParameter, vehicleParkPriceIdsParameter, createdByParameter, errorCode, initalSetupRequestIDParameter, currentVehicleParkingRequestID, isUserAcceptedTermsAndConditionsParameter, createdOnParameter);
        }
    
        public virtual int SP_DGC_SaveVehicleParkingRequestActionDetails(Nullable<long> vehicleParkingRequestID, Nullable<int> requestStatusId, string paymentInfo, string comments, string additionalReferenceFilePath, Nullable<long> actionTakenByUserId, string updatedBY, ObjectParameter errorCode, Nullable<int> previousStatusID, Nullable<System.DateTime> finalStopBillDate, Nullable<System.DateTime> todaysClientDate, ObjectParameter vehicleParkingRequestActionId)
        {
            var vehicleParkingRequestIDParameter = vehicleParkingRequestID.HasValue ?
                new ObjectParameter("VehicleParkingRequestID", vehicleParkingRequestID) :
                new ObjectParameter("VehicleParkingRequestID", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var finalStopBillDateParameter = finalStopBillDate.HasValue ?
                new ObjectParameter("FinalStopBillDate", finalStopBillDate) :
                new ObjectParameter("FinalStopBillDate", typeof(System.DateTime));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVehicleParkingRequestActionDetails", vehicleParkingRequestIDParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, additionalReferenceFilePathParameter, actionTakenByUserIdParameter, updatedBYParameter, errorCode, previousStatusIDParameter, finalStopBillDateParameter, todaysClientDateParameter, vehicleParkingRequestActionId);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllFacilitySlotSettingDetails_Result> SP_DGC_GetAllFacilitySlotSettingDetails(Nullable<int> facilityId, Nullable<int> courtOrLocationOrTrinerId)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            var courtOrLocationOrTrinerIdParameter = courtOrLocationOrTrinerId.HasValue ?
                new ObjectParameter("CourtOrLocationOrTrinerId", courtOrLocationOrTrinerId) :
                new ObjectParameter("CourtOrLocationOrTrinerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllFacilitySlotSettingDetails_Result>("SP_DGC_GetAllFacilitySlotSettingDetails", facilityIdParameter, courtOrLocationOrTrinerIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllHallSlotSettingDetails_Result> SP_DGC_GetAllHallSlotSettingDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllHallSlotSettingDetails_Result>("SP_DGC_GetAllHallSlotSettingDetails");
        }
    
        public virtual ObjectResult<SP_DGC_GetlatestHouseRules_Result> SP_DGC_GetlatestHouseRules()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetlatestHouseRules_Result>("SP_DGC_GetlatestHouseRules");
        }
    
        public virtual ObjectResult<SP_DGC_GetActiveSecurityMemebers_Result> SP_DGC_GetActiveSecurityMemebers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetActiveSecurityMemebers_Result>("SP_DGC_GetActiveSecurityMemebers");
        }
    
        public virtual ObjectResult<SP_DGC_GetAllCondoBankAccounts_Result> SP_DGC_GetAllCondoBankAccounts(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllCondoBankAccounts_Result>("SP_DGC_GetAllCondoBankAccounts", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllRennovationRequestDetails_Result> SP_DGC_GetAllRennovationRequestDetails(string isSelfRequests, Nullable<long> raisedByUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId, Nullable<int> requestedFromRole, Nullable<System.DateTime> contractFromDate, Nullable<System.DateTime> contractToDate, Nullable<System.DateTime> raisedFomDate, Nullable<System.DateTime> raisedToDate, Nullable<int> statusId, Nullable<System.DateTime> todaysClientDate)
        {
            var isSelfRequestsParameter = isSelfRequests != null ?
                new ObjectParameter("IsSelfRequests", isSelfRequests) :
                new ObjectParameter("IsSelfRequests", typeof(string));
    
            var raisedByUserIdParameter = raisedByUserId.HasValue ?
                new ObjectParameter("RaisedByUserId", raisedByUserId) :
                new ObjectParameter("RaisedByUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var contractFromDateParameter = contractFromDate.HasValue ?
                new ObjectParameter("ContractFromDate", contractFromDate) :
                new ObjectParameter("ContractFromDate", typeof(System.DateTime));
    
            var contractToDateParameter = contractToDate.HasValue ?
                new ObjectParameter("ContractToDate", contractToDate) :
                new ObjectParameter("ContractToDate", typeof(System.DateTime));
    
            var raisedFomDateParameter = raisedFomDate.HasValue ?
                new ObjectParameter("RaisedFomDate", raisedFomDate) :
                new ObjectParameter("RaisedFomDate", typeof(System.DateTime));
    
            var raisedToDateParameter = raisedToDate.HasValue ?
                new ObjectParameter("RaisedToDate", raisedToDate) :
                new ObjectParameter("RaisedToDate", typeof(System.DateTime));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllRennovationRequestDetails_Result>("SP_DGC_GetAllRennovationRequestDetails", isSelfRequestsParameter, raisedByUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter, requestedFromRoleParameter, contractFromDateParameter, contractToDateParameter, raisedFomDateParameter, raisedToDateParameter, statusIdParameter, todaysClientDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCondoBankAccountByAccountId_Result> SP_DGC_GetCondoBankAccountByAccountId(Nullable<int> condoBankAccountID)
        {
            var condoBankAccountIDParameter = condoBankAccountID.HasValue ?
                new ObjectParameter("CondoBankAccountID", condoBankAccountID) :
                new ObjectParameter("CondoBankAccountID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCondoBankAccountByAccountId_Result>("SP_DGC_GetCondoBankAccountByAccountId", condoBankAccountIDParameter);
        }
    
        public virtual int SP_DGC_SaveCondoBankAccountDetails(Nullable<int> condoBankAccountID, string bankName, string bankAddress, string accountNumber, string confirmAccountNumber, string accountType, string branchName, string swiftCode, string ispettycash, Nullable<decimal> openingBalance, Nullable<System.DateTime> oBAsONDate, string updatedBy, string isLinkedToPaymentGateWay, ObjectParameter errorCode)
        {
            var condoBankAccountIDParameter = condoBankAccountID.HasValue ?
                new ObjectParameter("CondoBankAccountID", condoBankAccountID) :
                new ObjectParameter("CondoBankAccountID", typeof(int));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var bankAddressParameter = bankAddress != null ?
                new ObjectParameter("BankAddress", bankAddress) :
                new ObjectParameter("BankAddress", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var confirmAccountNumberParameter = confirmAccountNumber != null ?
                new ObjectParameter("ConfirmAccountNumber", confirmAccountNumber) :
                new ObjectParameter("ConfirmAccountNumber", typeof(string));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var swiftCodeParameter = swiftCode != null ?
                new ObjectParameter("SwiftCode", swiftCode) :
                new ObjectParameter("SwiftCode", typeof(string));
    
            var ispettycashParameter = ispettycash != null ?
                new ObjectParameter("Ispettycash", ispettycash) :
                new ObjectParameter("Ispettycash", typeof(string));
    
            var openingBalanceParameter = openingBalance.HasValue ?
                new ObjectParameter("OpeningBalance", openingBalance) :
                new ObjectParameter("OpeningBalance", typeof(decimal));
    
            var oBAsONDateParameter = oBAsONDate.HasValue ?
                new ObjectParameter("OBAsONDate", oBAsONDate) :
                new ObjectParameter("OBAsONDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isLinkedToPaymentGateWayParameter = isLinkedToPaymentGateWay != null ?
                new ObjectParameter("IsLinkedToPaymentGateWay", isLinkedToPaymentGateWay) :
                new ObjectParameter("IsLinkedToPaymentGateWay", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCondoBankAccountDetails", condoBankAccountIDParameter, bankNameParameter, bankAddressParameter, accountNumberParameter, confirmAccountNumberParameter, accountTypeParameter, branchNameParameter, swiftCodeParameter, ispettycashParameter, openingBalanceParameter, oBAsONDateParameter, updatedByParameter, isLinkedToPaymentGateWayParameter, errorCode);
        }
    
        public virtual int SP_DGC_SaveRennovationRequestDetails(Nullable<long> rennovationRequestId, Nullable<int> unitID, Nullable<long> requestBehalfOfUserId, Nullable<System.DateTime> periodFrom, Nullable<System.DateTime> periodTo, Nullable<decimal> depositAmount, string reqDescription, string contractorName, string contractorVehicalNumber, string contractorMobileNumber, Nullable<int> requestStatusId, Nullable<long> raisedByUserId, string updatedBy, ObjectParameter errorCode, ObjectParameter rRRequestid, ObjectParameter livingMemberCentralUserId, string isUserAcceptedTermsAndConditions, Nullable<System.DateTime> createdOn, Nullable<int> typeofRequest)
        {
            var rennovationRequestIdParameter = rennovationRequestId.HasValue ?
                new ObjectParameter("RennovationRequestId", rennovationRequestId) :
                new ObjectParameter("RennovationRequestId", typeof(long));
    
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(int));
    
            var requestBehalfOfUserIdParameter = requestBehalfOfUserId.HasValue ?
                new ObjectParameter("RequestBehalfOfUserId", requestBehalfOfUserId) :
                new ObjectParameter("RequestBehalfOfUserId", typeof(long));
    
            var periodFromParameter = periodFrom.HasValue ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(System.DateTime));
    
            var periodToParameter = periodTo.HasValue ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(System.DateTime));
    
            var depositAmountParameter = depositAmount.HasValue ?
                new ObjectParameter("DepositAmount", depositAmount) :
                new ObjectParameter("DepositAmount", typeof(decimal));
    
            var reqDescriptionParameter = reqDescription != null ?
                new ObjectParameter("ReqDescription", reqDescription) :
                new ObjectParameter("ReqDescription", typeof(string));
    
            var contractorNameParameter = contractorName != null ?
                new ObjectParameter("ContractorName", contractorName) :
                new ObjectParameter("ContractorName", typeof(string));
    
            var contractorVehicalNumberParameter = contractorVehicalNumber != null ?
                new ObjectParameter("ContractorVehicalNumber", contractorVehicalNumber) :
                new ObjectParameter("ContractorVehicalNumber", typeof(string));
    
            var contractorMobileNumberParameter = contractorMobileNumber != null ?
                new ObjectParameter("ContractorMobileNumber", contractorMobileNumber) :
                new ObjectParameter("ContractorMobileNumber", typeof(string));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var raisedByUserIdParameter = raisedByUserId.HasValue ?
                new ObjectParameter("RaisedByUserId", raisedByUserId) :
                new ObjectParameter("RaisedByUserId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var isUserAcceptedTermsAndConditionsParameter = isUserAcceptedTermsAndConditions != null ?
                new ObjectParameter("IsUserAcceptedTermsAndConditions", isUserAcceptedTermsAndConditions) :
                new ObjectParameter("IsUserAcceptedTermsAndConditions", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var typeofRequestParameter = typeofRequest.HasValue ?
                new ObjectParameter("TypeofRequest", typeofRequest) :
                new ObjectParameter("TypeofRequest", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveRennovationRequestDetails", rennovationRequestIdParameter, unitIDParameter, requestBehalfOfUserIdParameter, periodFromParameter, periodToParameter, depositAmountParameter, reqDescriptionParameter, contractorNameParameter, contractorVehicalNumberParameter, contractorMobileNumberParameter, requestStatusIdParameter, raisedByUserIdParameter, updatedByParameter, errorCode, rRRequestid, livingMemberCentralUserId, isUserAcceptedTermsAndConditionsParameter, createdOnParameter, typeofRequestParameter);
        }
    
        public virtual int SP_DGC_PG_SaveAllUnitRequest_Payments_LedgerDetails(string requestType, Nullable<long> requestId, Nullable<int> requestStatusId, Nullable<long> requestActionId, string receivedByUser, ObjectParameter errorCode)
        {
            var requestTypeParameter = requestType != null ?
                new ObjectParameter("RequestType", requestType) :
                new ObjectParameter("RequestType", typeof(string));
    
            var requestIdParameter = requestId.HasValue ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var requestActionIdParameter = requestActionId.HasValue ?
                new ObjectParameter("RequestActionId", requestActionId) :
                new ObjectParameter("RequestActionId", typeof(long));
    
            var receivedByUserParameter = receivedByUser != null ?
                new ObjectParameter("ReceivedByUser", receivedByUser) :
                new ObjectParameter("ReceivedByUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_PG_SaveAllUnitRequest_Payments_LedgerDetails", requestTypeParameter, requestIdParameter, requestStatusIdParameter, requestActionIdParameter, receivedByUserParameter, errorCode);
        }
    
        public virtual int SP_DGC_PG_UnitCumilativeInvoiceBill_PaymentByInitiation(Nullable<int> unitId, string billPaymentInfo, string subScriptionCode, Nullable<decimal> paidAmount, Nullable<long> paidByUserId, string paidBy, Nullable<System.DateTime> actualPaymentDate, ObjectParameter errorCode, ObjectParameter pGResponseId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var billPaymentInfoParameter = billPaymentInfo != null ?
                new ObjectParameter("BillPaymentInfo", billPaymentInfo) :
                new ObjectParameter("BillPaymentInfo", typeof(string));
    
            var subScriptionCodeParameter = subScriptionCode != null ?
                new ObjectParameter("SubScriptionCode", subScriptionCode) :
                new ObjectParameter("SubScriptionCode", typeof(string));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(decimal));
    
            var paidByUserIdParameter = paidByUserId.HasValue ?
                new ObjectParameter("PaidByUserId", paidByUserId) :
                new ObjectParameter("PaidByUserId", typeof(long));
    
            var paidByParameter = paidBy != null ?
                new ObjectParameter("PaidBy", paidBy) :
                new ObjectParameter("PaidBy", typeof(string));
    
            var actualPaymentDateParameter = actualPaymentDate.HasValue ?
                new ObjectParameter("ActualPaymentDate", actualPaymentDate) :
                new ObjectParameter("ActualPaymentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_PG_UnitCumilativeInvoiceBill_PaymentByInitiation", unitIdParameter, billPaymentInfoParameter, subScriptionCodeParameter, paidAmountParameter, paidByUserIdParameter, paidByParameter, actualPaymentDateParameter, errorCode, pGResponseId);
        }
    
        public virtual int SP_DGC_SaveUnitInvoicePaymentReversalDetails(Nullable<int> paymentReversalId, Nullable<long> paymentRequestId, Nullable<long> unitId, string comments, Nullable<System.DateTime> reversalDate, string reversalBy, Nullable<long> reversalByUserId, ObjectParameter errorCode)
        {
            var paymentReversalIdParameter = paymentReversalId.HasValue ?
                new ObjectParameter("PaymentReversalId", paymentReversalId) :
                new ObjectParameter("PaymentReversalId", typeof(int));
    
            var paymentRequestIdParameter = paymentRequestId.HasValue ?
                new ObjectParameter("PaymentRequestId", paymentRequestId) :
                new ObjectParameter("PaymentRequestId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var reversalDateParameter = reversalDate.HasValue ?
                new ObjectParameter("ReversalDate", reversalDate) :
                new ObjectParameter("ReversalDate", typeof(System.DateTime));
    
            var reversalByParameter = reversalBy != null ?
                new ObjectParameter("ReversalBy", reversalBy) :
                new ObjectParameter("ReversalBy", typeof(string));
    
            var reversalByUserIdParameter = reversalByUserId.HasValue ?
                new ObjectParameter("ReversalByUserId", reversalByUserId) :
                new ObjectParameter("ReversalByUserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveUnitInvoicePaymentReversalDetails", paymentReversalIdParameter, paymentRequestIdParameter, unitIdParameter, commentsParameter, reversalDateParameter, reversalByParameter, reversalByUserIdParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_PG_GetPaymentLineDetailsByPaymentId_Result> SP_DGC_PG_GetPaymentLineDetailsByPaymentId(Nullable<int> paymentRequestId)
        {
            var paymentRequestIdParameter = paymentRequestId.HasValue ?
                new ObjectParameter("PaymentRequestId", paymentRequestId) :
                new ObjectParameter("PaymentRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_PG_GetPaymentLineDetailsByPaymentId_Result>("SP_DGC_PG_GetPaymentLineDetailsByPaymentId", paymentRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_PG_SavePGResponseDetails_Result> SP_DGC_PG_SavePGResponseDetails(string responseXml, ObjectParameter errorCode)
        {
            var responseXmlParameter = responseXml != null ?
                new ObjectParameter("ResponseXml", responseXml) :
                new ObjectParameter("ResponseXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_PG_SavePGResponseDetails_Result>("SP_DGC_PG_SavePGResponseDetails", responseXmlParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetRennovationRequestHistoryById_Result> SP_DGC_GetRennovationRequestHistoryById(Nullable<long> rennovationRequestId)
        {
            var rennovationRequestIdParameter = rennovationRequestId.HasValue ?
                new ObjectParameter("RennovationRequestId", rennovationRequestId) :
                new ObjectParameter("RennovationRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetRennovationRequestHistoryById_Result>("SP_DGC_GetRennovationRequestHistoryById", rennovationRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_PG_SaveFailureResponseDetails_Result> SP_DGC_PG_SaveFailureResponseDetails(string responseXml, ObjectParameter errorCode)
        {
            var responseXmlParameter = responseXml != null ?
                new ObjectParameter("ResponseXml", responseXml) :
                new ObjectParameter("ResponseXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_PG_SaveFailureResponseDetails_Result>("SP_DGC_PG_SaveFailureResponseDetails", responseXmlParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetHallBookingRequestByHBRId_Result> SP_DGC_GetHallBookingRequestByHBRId(Nullable<long> hallBookingRequestId)
        {
            var hallBookingRequestIdParameter = hallBookingRequestId.HasValue ?
                new ObjectParameter("HallBookingRequestId", hallBookingRequestId) :
                new ObjectParameter("HallBookingRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetHallBookingRequestByHBRId_Result>("SP_DGC_GetHallBookingRequestByHBRId", hallBookingRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAvailableFacilitySlotsByDate_Result> SP_DGC_GetAvailableFacilitySlotsByDate(Nullable<int> facilityId, Nullable<int> courtOrLocationOrTrainerId, Nullable<System.DateTime> bookingDate, Nullable<System.DateTime> toDaysClintsDate)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            var courtOrLocationOrTrainerIdParameter = courtOrLocationOrTrainerId.HasValue ?
                new ObjectParameter("CourtOrLocationOrTrainerId", courtOrLocationOrTrainerId) :
                new ObjectParameter("CourtOrLocationOrTrainerId", typeof(int));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var toDaysClintsDateParameter = toDaysClintsDate.HasValue ?
                new ObjectParameter("ToDaysClintsDate", toDaysClintsDate) :
                new ObjectParameter("ToDaysClintsDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAvailableFacilitySlotsByDate_Result>("SP_DGC_GetAvailableFacilitySlotsByDate", facilityIdParameter, courtOrLocationOrTrainerIdParameter, bookingDateParameter, toDaysClintsDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAvailableSlotsByDate_Result> SP_DGC_GetAvailableSlotsByDate(Nullable<System.DateTime> bookingDate, Nullable<System.DateTime> toDaysClintsDate)
        {
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var toDaysClintsDateParameter = toDaysClintsDate.HasValue ?
                new ObjectParameter("ToDaysClintsDate", toDaysClintsDate) :
                new ObjectParameter("ToDaysClintsDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAvailableSlotsByDate_Result>("SP_DGC_GetAvailableSlotsByDate", bookingDateParameter, toDaysClintsDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetVisitorRequestHistoryByRequestId_Result> SP_DGC_GetVisitorRequestHistoryByRequestId(Nullable<int> visitorRequestId)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVisitorRequestHistoryByRequestId_Result>("SP_DGC_GetVisitorRequestHistoryByRequestId", visitorRequestIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetUnitInvoiceBillPayments_ToDoReversal_Result> SP_DGC_GetUnitInvoiceBillPayments_ToDoReversal(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId, Nullable<System.DateTime> entryFromDate, Nullable<System.DateTime> entryToDate)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var entryFromDateParameter = entryFromDate.HasValue ?
                new ObjectParameter("EntryFromDate", entryFromDate) :
                new ObjectParameter("EntryFromDate", typeof(System.DateTime));
    
            var entryToDateParameter = entryToDate.HasValue ?
                new ObjectParameter("EntryToDate", entryToDate) :
                new ObjectParameter("EntryToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetUnitInvoiceBillPayments_ToDoReversal_Result>("SP_DGC_GetUnitInvoiceBillPayments_ToDoReversal", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter, entryFromDateParameter, entryToDateParameter);
        }
    
        public virtual int SP_DGC_IntialBRSAuthorizedCodeGeneration(Nullable<long> bankReconciliationId, Nullable<int> paymentReqId, Nullable<System.DateTime> oldReconciliationDate, string oldReconciliationNote, Nullable<long> requestedByUserId, string requestedBy, Nullable<System.DateTime> todaysClientDate, ObjectParameter authorizedCode, ObjectParameter propertyMamgerUserId, ObjectParameter errorCode)
        {
            var bankReconciliationIdParameter = bankReconciliationId.HasValue ?
                new ObjectParameter("BankReconciliationId", bankReconciliationId) :
                new ObjectParameter("BankReconciliationId", typeof(long));
    
            var paymentReqIdParameter = paymentReqId.HasValue ?
                new ObjectParameter("PaymentReqId", paymentReqId) :
                new ObjectParameter("PaymentReqId", typeof(int));
    
            var oldReconciliationDateParameter = oldReconciliationDate.HasValue ?
                new ObjectParameter("OldReconciliationDate", oldReconciliationDate) :
                new ObjectParameter("OldReconciliationDate", typeof(System.DateTime));
    
            var oldReconciliationNoteParameter = oldReconciliationNote != null ?
                new ObjectParameter("OldReconciliationNote", oldReconciliationNote) :
                new ObjectParameter("OldReconciliationNote", typeof(string));
    
            var requestedByUserIdParameter = requestedByUserId.HasValue ?
                new ObjectParameter("RequestedByUserId", requestedByUserId) :
                new ObjectParameter("RequestedByUserId", typeof(long));
    
            var requestedByParameter = requestedBy != null ?
                new ObjectParameter("RequestedBy", requestedBy) :
                new ObjectParameter("RequestedBy", typeof(string));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialBRSAuthorizedCodeGeneration", bankReconciliationIdParameter, paymentReqIdParameter, oldReconciliationDateParameter, oldReconciliationNoteParameter, requestedByUserIdParameter, requestedByParameter, todaysClientDateParameter, authorizedCode, propertyMamgerUserId, errorCode);
        }
    
        public virtual int SP_DGC_SaveReconciliationAmendmentDetails(Nullable<long> bankReconciliationId, Nullable<int> paymentReqId, Nullable<System.DateTime> newReconciliationDate, string newReconciliationNote, Nullable<long> amendmentByUserId, string amendmentBy, Nullable<System.DateTime> todaysClientDate, string authorizedCode, ObjectParameter errorCode)
        {
            var bankReconciliationIdParameter = bankReconciliationId.HasValue ?
                new ObjectParameter("BankReconciliationId", bankReconciliationId) :
                new ObjectParameter("BankReconciliationId", typeof(long));
    
            var paymentReqIdParameter = paymentReqId.HasValue ?
                new ObjectParameter("PaymentReqId", paymentReqId) :
                new ObjectParameter("PaymentReqId", typeof(int));
    
            var newReconciliationDateParameter = newReconciliationDate.HasValue ?
                new ObjectParameter("NewReconciliationDate", newReconciliationDate) :
                new ObjectParameter("NewReconciliationDate", typeof(System.DateTime));
    
            var newReconciliationNoteParameter = newReconciliationNote != null ?
                new ObjectParameter("NewReconciliationNote", newReconciliationNote) :
                new ObjectParameter("NewReconciliationNote", typeof(string));
    
            var amendmentByUserIdParameter = amendmentByUserId.HasValue ?
                new ObjectParameter("AmendmentByUserId", amendmentByUserId) :
                new ObjectParameter("AmendmentByUserId", typeof(long));
    
            var amendmentByParameter = amendmentBy != null ?
                new ObjectParameter("AmendmentBy", amendmentBy) :
                new ObjectParameter("AmendmentBy", typeof(string));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            var authorizedCodeParameter = authorizedCode != null ?
                new ObjectParameter("AuthorizedCode", authorizedCode) :
                new ObjectParameter("AuthorizedCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveReconciliationAmendmentDetails", bankReconciliationIdParameter, paymentReqIdParameter, newReconciliationDateParameter, newReconciliationNoteParameter, amendmentByUserIdParameter, amendmentByParameter, todaysClientDateParameter, authorizedCodeParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllReconciliationAmendments_Result> SP_DGC_GetAllReconciliationAmendments(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, string monthName)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var monthNameParameter = monthName != null ?
                new ObjectParameter("MonthName", monthName) :
                new ObjectParameter("MonthName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllReconciliationAmendments_Result>("SP_DGC_GetAllReconciliationAmendments", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, monthNameParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCommercialUnitRentPayments_ToDoReversal_Result> SP_DGC_GetCommercialUnitRentPayments_ToDoReversal(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId, Nullable<int> shopRegistrationId, Nullable<System.DateTime> entryFromDate, Nullable<System.DateTime> entryToDate)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var shopRegistrationIdParameter = shopRegistrationId.HasValue ?
                new ObjectParameter("ShopRegistrationId", shopRegistrationId) :
                new ObjectParameter("ShopRegistrationId", typeof(int));
    
            var entryFromDateParameter = entryFromDate.HasValue ?
                new ObjectParameter("EntryFromDate", entryFromDate) :
                new ObjectParameter("EntryFromDate", typeof(System.DateTime));
    
            var entryToDateParameter = entryToDate.HasValue ?
                new ObjectParameter("EntryToDate", entryToDate) :
                new ObjectParameter("EntryToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCommercialUnitRentPayments_ToDoReversal_Result>("SP_DGC_GetCommercialUnitRentPayments_ToDoReversal", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter, shopRegistrationIdParameter, entryFromDateParameter, entryToDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetRennovationRequestDetailsById_Result> SP_DGC_GetRennovationRequestDetailsById(Nullable<long> renvRequestId)
        {
            var renvRequestIdParameter = renvRequestId.HasValue ?
                new ObjectParameter("RenvRequestId", renvRequestId) :
                new ObjectParameter("RenvRequestId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetRennovationRequestDetailsById_Result>("SP_DGC_GetRennovationRequestDetailsById", renvRequestIdParameter);
        }
    
        public virtual int SP_DGC_SaveCommercialUnitInvoicePaymentReversalDetails(Nullable<int> paymentReversalId, Nullable<long> paymentRequestId, Nullable<long> unitId, string comments, Nullable<System.DateTime> reversalDate, string reversalBy, Nullable<long> reversalByUserId, ObjectParameter errorCode, Nullable<int> shopRegistartionID)
        {
            var paymentReversalIdParameter = paymentReversalId.HasValue ?
                new ObjectParameter("PaymentReversalId", paymentReversalId) :
                new ObjectParameter("PaymentReversalId", typeof(int));
    
            var paymentRequestIdParameter = paymentRequestId.HasValue ?
                new ObjectParameter("PaymentRequestId", paymentRequestId) :
                new ObjectParameter("PaymentRequestId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var reversalDateParameter = reversalDate.HasValue ?
                new ObjectParameter("ReversalDate", reversalDate) :
                new ObjectParameter("ReversalDate", typeof(System.DateTime));
    
            var reversalByParameter = reversalBy != null ?
                new ObjectParameter("ReversalBy", reversalBy) :
                new ObjectParameter("ReversalBy", typeof(string));
    
            var reversalByUserIdParameter = reversalByUserId.HasValue ?
                new ObjectParameter("ReversalByUserId", reversalByUserId) :
                new ObjectParameter("ReversalByUserId", typeof(long));
    
            var shopRegistartionIDParameter = shopRegistartionID.HasValue ?
                new ObjectParameter("ShopRegistartionID", shopRegistartionID) :
                new ObjectParameter("ShopRegistartionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveCommercialUnitInvoicePaymentReversalDetails", paymentReversalIdParameter, paymentRequestIdParameter, unitIdParameter, commentsParameter, reversalDateParameter, reversalByParameter, reversalByUserIdParameter, errorCode, shopRegistartionIDParameter);
        }
    
        public virtual int SP_DGC_DeActivateUnitMemberAccessGood(Nullable<long> accessGoodsRequestId, string aGRIssueCardIds, string deactivatedBy, Nullable<long> deactivatedByUserId, string comments, ObjectParameter errorCode, Nullable<System.DateTime> todaysClientDate)
        {
            var accessGoodsRequestIdParameter = accessGoodsRequestId.HasValue ?
                new ObjectParameter("AccessGoodsRequestId", accessGoodsRequestId) :
                new ObjectParameter("AccessGoodsRequestId", typeof(long));
    
            var aGRIssueCardIdsParameter = aGRIssueCardIds != null ?
                new ObjectParameter("AGRIssueCardIds", aGRIssueCardIds) :
                new ObjectParameter("AGRIssueCardIds", typeof(string));
    
            var deactivatedByParameter = deactivatedBy != null ?
                new ObjectParameter("DeactivatedBy", deactivatedBy) :
                new ObjectParameter("DeactivatedBy", typeof(string));
    
            var deactivatedByUserIdParameter = deactivatedByUserId.HasValue ?
                new ObjectParameter("DeactivatedByUserId", deactivatedByUserId) :
                new ObjectParameter("DeactivatedByUserId", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeActivateUnitMemberAccessGood", accessGoodsRequestIdParameter, aGRIssueCardIdsParameter, deactivatedByParameter, deactivatedByUserIdParameter, commentsParameter, errorCode, todaysClientDateParameter);
        }
    
        public virtual int SP_DGC_SaveAccessGoodsRequestActionDetails(Nullable<long> accessGoodsRequestId, Nullable<int> requestStatusId, string paymentInfo, string comments, string additionalReferenceFilePath, Nullable<long> actionTakenByUserId, string updatedBY, Nullable<int> previousStatusID, ObjectParameter errorCode, ObjectParameter accessGoodsRequestActionId, Nullable<System.DateTime> todaysClientDate)
        {
            var accessGoodsRequestIdParameter = accessGoodsRequestId.HasValue ?
                new ObjectParameter("AccessGoodsRequestId", accessGoodsRequestId) :
                new ObjectParameter("AccessGoodsRequestId", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveAccessGoodsRequestActionDetails", accessGoodsRequestIdParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, additionalReferenceFilePathParameter, actionTakenByUserIdParameter, updatedBYParameter, previousStatusIDParameter, errorCode, accessGoodsRequestActionId, todaysClientDateParameter);
        }
    
        public virtual int SP_DGC_SaveClampRequestActionDetails(Nullable<long> clampRequestId, Nullable<int> requestStatusId, string paymentInfo, string comments, Nullable<long> actionTakenByUserId, string updatedBY, ObjectParameter errorCode, ObjectParameter clampRequestActionId, Nullable<System.DateTime> todaysClientDate)
        {
            var clampRequestIdParameter = clampRequestId.HasValue ?
                new ObjectParameter("ClampRequestId", clampRequestId) :
                new ObjectParameter("ClampRequestId", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveClampRequestActionDetails", clampRequestIdParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, actionTakenByUserIdParameter, updatedBYParameter, errorCode, clampRequestActionId, todaysClientDateParameter);
        }
    
        public virtual int SP_DGC_SaveClampRequestDetails(Nullable<long> clampRequestId, string vehicleNumber, string clampRemarks, string referenceFilePath, Nullable<decimal> amount, Nullable<long> amountId, Nullable<int> statusId, Nullable<long> clampedByUserId, string updatedBy, ObjectParameter errorCode, ObjectParameter livingMemberUserId, Nullable<System.DateTime> todaysClientDate)
        {
            var clampRequestIdParameter = clampRequestId.HasValue ?
                new ObjectParameter("ClampRequestId", clampRequestId) :
                new ObjectParameter("ClampRequestId", typeof(long));
    
            var vehicleNumberParameter = vehicleNumber != null ?
                new ObjectParameter("VehicleNumber", vehicleNumber) :
                new ObjectParameter("VehicleNumber", typeof(string));
    
            var clampRemarksParameter = clampRemarks != null ?
                new ObjectParameter("ClampRemarks", clampRemarks) :
                new ObjectParameter("ClampRemarks", typeof(string));
    
            var referenceFilePathParameter = referenceFilePath != null ?
                new ObjectParameter("ReferenceFilePath", referenceFilePath) :
                new ObjectParameter("ReferenceFilePath", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amountIdParameter = amountId.HasValue ?
                new ObjectParameter("AmountId", amountId) :
                new ObjectParameter("AmountId", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var clampedByUserIdParameter = clampedByUserId.HasValue ?
                new ObjectParameter("ClampedByUserId", clampedByUserId) :
                new ObjectParameter("ClampedByUserId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveClampRequestDetails", clampRequestIdParameter, vehicleNumberParameter, clampRemarksParameter, referenceFilePathParameter, amountParameter, amountIdParameter, statusIdParameter, clampedByUserIdParameter, updatedByParameter, errorCode, livingMemberUserId, todaysClientDateParameter);
        }
    
        public virtual int SP_DGC_SaveComplaint(string subject, string description, Nullable<int> departmentId, Nullable<int> statusId, Nullable<long> raisedByUserId, string referenceDocPath, string raisedBy, Nullable<int> unitId, Nullable<long> livingMemberUserId, ObjectParameter errorCode, ObjectParameter currentComplaintId, ObjectParameter assignedCentralUserId, ObjectParameter raisedCentralUserId, Nullable<System.DateTime> todaysClientDate)
        {
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var raisedByUserIdParameter = raisedByUserId.HasValue ?
                new ObjectParameter("RaisedByUserId", raisedByUserId) :
                new ObjectParameter("RaisedByUserId", typeof(long));
    
            var referenceDocPathParameter = referenceDocPath != null ?
                new ObjectParameter("ReferenceDocPath", referenceDocPath) :
                new ObjectParameter("ReferenceDocPath", typeof(string));
    
            var raisedByParameter = raisedBy != null ?
                new ObjectParameter("RaisedBy", raisedBy) :
                new ObjectParameter("RaisedBy", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var livingMemberUserIdParameter = livingMemberUserId.HasValue ?
                new ObjectParameter("LivingMemberUserId", livingMemberUserId) :
                new ObjectParameter("LivingMemberUserId", typeof(long));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveComplaint", subjectParameter, descriptionParameter, departmentIdParameter, statusIdParameter, raisedByUserIdParameter, referenceDocPathParameter, raisedByParameter, unitIdParameter, livingMemberUserIdParameter, errorCode, currentComplaintId, assignedCentralUserId, raisedCentralUserId, todaysClientDateParameter);
        }
    
        public virtual int SP_DGC_SaveComplaintCancelDetails(Nullable<long> complaintId, string cancelComments, Nullable<int> statusId, Nullable<long> cancelledByUserId, string cancelledBy, ObjectParameter errorCode, Nullable<int> previousStatusID, Nullable<System.DateTime> todaysClientDate)
        {
            var complaintIdParameter = complaintId.HasValue ?
                new ObjectParameter("ComplaintId", complaintId) :
                new ObjectParameter("ComplaintId", typeof(long));
    
            var cancelCommentsParameter = cancelComments != null ?
                new ObjectParameter("CancelComments", cancelComments) :
                new ObjectParameter("CancelComments", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var cancelledByUserIdParameter = cancelledByUserId.HasValue ?
                new ObjectParameter("CancelledByUserId", cancelledByUserId) :
                new ObjectParameter("CancelledByUserId", typeof(long));
    
            var cancelledByParameter = cancelledBy != null ?
                new ObjectParameter("CancelledBy", cancelledBy) :
                new ObjectParameter("CancelledBy", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveComplaintCancelDetails", complaintIdParameter, cancelCommentsParameter, statusIdParameter, cancelledByUserIdParameter, cancelledByParameter, errorCode, previousStatusIDParameter, todaysClientDateParameter);
        }
    
        public virtual int SP_DGC_SaveComplaintStatusChangeDetails(Nullable<long> complaintId, Nullable<int> statusId, Nullable<long> complaintAssigneeId, Nullable<long> assigneeToUserId, string assigneeComments, string actionReferenceFilePath, string isDelegated, Nullable<long> delegatedUserId, string updatedBy, ObjectParameter errorCode, Nullable<int> previousStatusID, Nullable<int> percentageOfCompleation, Nullable<System.DateTime> todaysClientDate)
        {
            var complaintIdParameter = complaintId.HasValue ?
                new ObjectParameter("ComplaintId", complaintId) :
                new ObjectParameter("ComplaintId", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var complaintAssigneeIdParameter = complaintAssigneeId.HasValue ?
                new ObjectParameter("ComplaintAssigneeId", complaintAssigneeId) :
                new ObjectParameter("ComplaintAssigneeId", typeof(long));
    
            var assigneeToUserIdParameter = assigneeToUserId.HasValue ?
                new ObjectParameter("AssigneeToUserId", assigneeToUserId) :
                new ObjectParameter("AssigneeToUserId", typeof(long));
    
            var assigneeCommentsParameter = assigneeComments != null ?
                new ObjectParameter("AssigneeComments", assigneeComments) :
                new ObjectParameter("AssigneeComments", typeof(string));
    
            var actionReferenceFilePathParameter = actionReferenceFilePath != null ?
                new ObjectParameter("ActionReferenceFilePath", actionReferenceFilePath) :
                new ObjectParameter("ActionReferenceFilePath", typeof(string));
    
            var isDelegatedParameter = isDelegated != null ?
                new ObjectParameter("IsDelegated", isDelegated) :
                new ObjectParameter("IsDelegated", typeof(string));
    
            var delegatedUserIdParameter = delegatedUserId.HasValue ?
                new ObjectParameter("DelegatedUserId", delegatedUserId) :
                new ObjectParameter("DelegatedUserId", typeof(long));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var percentageOfCompleationParameter = percentageOfCompleation.HasValue ?
                new ObjectParameter("PercentageOfCompleation", percentageOfCompleation) :
                new ObjectParameter("PercentageOfCompleation", typeof(int));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveComplaintStatusChangeDetails", complaintIdParameter, statusIdParameter, complaintAssigneeIdParameter, assigneeToUserIdParameter, assigneeCommentsParameter, actionReferenceFilePathParameter, isDelegatedParameter, delegatedUserIdParameter, updatedByParameter, errorCode, previousStatusIDParameter, percentageOfCompleationParameter, todaysClientDateParameter);
        }
    
        public virtual int SP_DGC_SaveDeliveredAccessGoodsDetails(Nullable<long> accessGoodsRequestId, string comments, string issueInfo, Nullable<long> activatedByUserId, string activatedBy, ObjectParameter errorCode, Nullable<System.DateTime> todaysClientDate)
        {
            var accessGoodsRequestIdParameter = accessGoodsRequestId.HasValue ?
                new ObjectParameter("AccessGoodsRequestId", accessGoodsRequestId) :
                new ObjectParameter("AccessGoodsRequestId", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var issueInfoParameter = issueInfo != null ?
                new ObjectParameter("IssueInfo", issueInfo) :
                new ObjectParameter("IssueInfo", typeof(string));
    
            var activatedByUserIdParameter = activatedByUserId.HasValue ?
                new ObjectParameter("ActivatedByUserId", activatedByUserId) :
                new ObjectParameter("ActivatedByUserId", typeof(long));
    
            var activatedByParameter = activatedBy != null ?
                new ObjectParameter("ActivatedBy", activatedBy) :
                new ObjectParameter("ActivatedBy", typeof(string));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveDeliveredAccessGoodsDetails", accessGoodsRequestIdParameter, commentsParameter, issueInfoParameter, activatedByUserIdParameter, activatedByParameter, errorCode, todaysClientDateParameter);
        }
    
        public virtual int SP_DGC_SaveRennovationRequestActionDetails(Nullable<long> rennovationRequestId, Nullable<int> requestStatusId, string paymentInfo, string comments, string additionalReferenceFilePath, Nullable<long> actionTakenByUserId, string updatedBY, ObjectParameter errorCode, Nullable<int> previousStatusID, ObjectParameter rennovationRequestActionId, Nullable<System.DateTime> todaysClientDate)
        {
            var rennovationRequestIdParameter = rennovationRequestId.HasValue ?
                new ObjectParameter("RennovationRequestId", rennovationRequestId) :
                new ObjectParameter("RennovationRequestId", typeof(long));
    
            var requestStatusIdParameter = requestStatusId.HasValue ?
                new ObjectParameter("RequestStatusId", requestStatusId) :
                new ObjectParameter("RequestStatusId", typeof(int));
    
            var paymentInfoParameter = paymentInfo != null ?
                new ObjectParameter("PaymentInfo", paymentInfo) :
                new ObjectParameter("PaymentInfo", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var additionalReferenceFilePathParameter = additionalReferenceFilePath != null ?
                new ObjectParameter("AdditionalReferenceFilePath", additionalReferenceFilePath) :
                new ObjectParameter("AdditionalReferenceFilePath", typeof(string));
    
            var actionTakenByUserIdParameter = actionTakenByUserId.HasValue ?
                new ObjectParameter("ActionTakenByUserId", actionTakenByUserId) :
                new ObjectParameter("ActionTakenByUserId", typeof(long));
    
            var updatedBYParameter = updatedBY != null ?
                new ObjectParameter("UpdatedBY", updatedBY) :
                new ObjectParameter("UpdatedBY", typeof(string));
    
            var previousStatusIDParameter = previousStatusID.HasValue ?
                new ObjectParameter("PreviousStatusID", previousStatusID) :
                new ObjectParameter("PreviousStatusID", typeof(int));
    
            var todaysClientDateParameter = todaysClientDate.HasValue ?
                new ObjectParameter("TodaysClientDate", todaysClientDate) :
                new ObjectParameter("TodaysClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveRennovationRequestActionDetails", rennovationRequestIdParameter, requestStatusIdParameter, paymentInfoParameter, commentsParameter, additionalReferenceFilePathParameter, actionTakenByUserIdParameter, updatedBYParameter, errorCode, previousStatusIDParameter, rennovationRequestActionId, todaysClientDateParameter);
        }
    
        public virtual int SP_DGC_SaveVisitorRequestActionDetails(Nullable<int> visitorRequestId, Nullable<int> statusId, Nullable<int> previouseStatusid, string actionDetails, string actionComment, string actionTakenBy, Nullable<long> actionByUserId, ObjectParameter errorCode, ObjectParameter livingMemberCentraluserid, ObjectParameter actionTakenCentraluserid, Nullable<System.DateTime> todayClientDate)
        {
            var visitorRequestIdParameter = visitorRequestId.HasValue ?
                new ObjectParameter("VisitorRequestId", visitorRequestId) :
                new ObjectParameter("VisitorRequestId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var previouseStatusidParameter = previouseStatusid.HasValue ?
                new ObjectParameter("PreviouseStatusid", previouseStatusid) :
                new ObjectParameter("PreviouseStatusid", typeof(int));
    
            var actionDetailsParameter = actionDetails != null ?
                new ObjectParameter("ActionDetails", actionDetails) :
                new ObjectParameter("ActionDetails", typeof(string));
    
            var actionCommentParameter = actionComment != null ?
                new ObjectParameter("ActionComment", actionComment) :
                new ObjectParameter("ActionComment", typeof(string));
    
            var actionTakenByParameter = actionTakenBy != null ?
                new ObjectParameter("ActionTakenBy", actionTakenBy) :
                new ObjectParameter("ActionTakenBy", typeof(string));
    
            var actionByUserIdParameter = actionByUserId.HasValue ?
                new ObjectParameter("ActionByUserId", actionByUserId) :
                new ObjectParameter("ActionByUserId", typeof(long));
    
            var todayClientDateParameter = todayClientDate.HasValue ?
                new ObjectParameter("TodayClientDate", todayClientDate) :
                new ObjectParameter("TodayClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveVisitorRequestActionDetails", visitorRequestIdParameter, statusIdParameter, previouseStatusidParameter, actionDetailsParameter, actionCommentParameter, actionTakenByParameter, actionByUserIdParameter, errorCode, livingMemberCentraluserid, actionTakenCentraluserid, todayClientDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityBookingHistoryById_Result> SP_DGC_GetFacilityBookingHistoryById(Nullable<int> condoFacilityBookingId)
        {
            var condoFacilityBookingIdParameter = condoFacilityBookingId.HasValue ?
                new ObjectParameter("CondoFacilityBookingId", condoFacilityBookingId) :
                new ObjectParameter("CondoFacilityBookingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityBookingHistoryById_Result>("SP_DGC_GetFacilityBookingHistoryById", condoFacilityBookingIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllActiveERContacts_Result> SP_DGC_GetAllActiveERContacts(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, string isActive)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllActiveERContacts_Result>("SP_DGC_GetAllActiveERContacts", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, isActiveParameter);
        }
    
        public virtual int SP_DGC_PG_LogIpaySuccessResponse(string responseXml, ObjectParameter errorCode, ObjectParameter pGResponseLogId)
        {
            var responseXmlParameter = responseXml != null ?
                new ObjectParameter("ResponseXml", responseXml) :
                new ObjectParameter("ResponseXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_PG_LogIpaySuccessResponse", responseXmlParameter, errorCode, pGResponseLogId);
        }
    
        public virtual int SP_DGC_PG_UpdatePGResponselOGDetails(Nullable<long> pGResponseLogId, string errorMessage)
        {
            var pGResponseLogIdParameter = pGResponseLogId.HasValue ?
                new ObjectParameter("PGResponseLogId", pGResponseLogId) :
                new ObjectParameter("PGResponseLogId", typeof(long));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_PG_UpdatePGResponselOGDetails", pGResponseLogIdParameter, errorMessageParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllRennovationRequestInitialSetupDetails_Result> SP_DGC_GetAllRennovationRequestInitialSetupDetails(ObjectParameter actualTotalRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllRennovationRequestInitialSetupDetails_Result>("SP_DGC_GetAllRennovationRequestInitialSetupDetails", actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllHallBookingInitialSetupDetails_Result> SP_DGC_GetAllHallBookingInitialSetupDetails(ObjectParameter actualTotalRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllHallBookingInitialSetupDetails_Result>("SP_DGC_GetAllHallBookingInitialSetupDetails", actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_InitialSetUp_GetAllFacilityRequestDetails_Result> SP_DGC_InitialSetUp_GetAllFacilityRequestDetails(Nullable<int> facilityId)
        {
            var facilityIdParameter = facilityId.HasValue ?
                new ObjectParameter("FacilityId", facilityId) :
                new ObjectParameter("FacilityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_InitialSetUp_GetAllFacilityRequestDetails_Result>("SP_DGC_InitialSetUp_GetAllFacilityRequestDetails", facilityIdParameter);
        }
    
        public virtual int SP_DGC_InitialSetUp_RenovationRequestProcess(Nullable<int> renovationRequestSetupId, string processedBy, Nullable<long> paymentReceviedByUserid, ObjectParameter errorCode)
        {
            var renovationRequestSetupIdParameter = renovationRequestSetupId.HasValue ?
                new ObjectParameter("RenovationRequestSetupId", renovationRequestSetupId) :
                new ObjectParameter("RenovationRequestSetupId", typeof(int));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            var paymentReceviedByUseridParameter = paymentReceviedByUserid.HasValue ?
                new ObjectParameter("PaymentReceviedByUserid", paymentReceviedByUserid) :
                new ObjectParameter("PaymentReceviedByUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_RenovationRequestProcess", renovationRequestSetupIdParameter, processedByParameter, paymentReceviedByUseridParameter, errorCode);
        }
    
        public virtual int SP_DGC_InitialSetUp_HallBookingProcess(Nullable<int> hallBookingSetupId, string hallPriceIds, string processedBy, Nullable<long> paymentReceviedByUserid, ObjectParameter errorCode)
        {
            var hallBookingSetupIdParameter = hallBookingSetupId.HasValue ?
                new ObjectParameter("HallBookingSetupId", hallBookingSetupId) :
                new ObjectParameter("HallBookingSetupId", typeof(int));
    
            var hallPriceIdsParameter = hallPriceIds != null ?
                new ObjectParameter("HallPriceIds", hallPriceIds) :
                new ObjectParameter("HallPriceIds", typeof(string));
    
            var processedByParameter = processedBy != null ?
                new ObjectParameter("ProcessedBy", processedBy) :
                new ObjectParameter("ProcessedBy", typeof(string));
    
            var paymentReceviedByUseridParameter = paymentReceviedByUserid.HasValue ?
                new ObjectParameter("PaymentReceviedByUserid", paymentReceviedByUserid) :
                new ObjectParameter("PaymentReceviedByUserid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_InitialSetUp_HallBookingProcess", hallBookingSetupIdParameter, hallPriceIdsParameter, processedByParameter, paymentReceviedByUseridParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_IntialSetup_GetAllVendorCompanyProcessDetails_Result> SP_DGC_IntialSetup_GetAllVendorCompanyProcessDetails(ObjectParameter actualTotalRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_IntialSetup_GetAllVendorCompanyProcessDetails_Result>("SP_DGC_IntialSetup_GetAllVendorCompanyProcessDetails", actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_GetBillTypeDetailsById_Result> SP_DGC_GetBillTypeDetailsById(Nullable<int> billTypeId, string unitType)
        {
            var billTypeIdParameter = billTypeId.HasValue ?
                new ObjectParameter("BillTypeId", billTypeId) :
                new ObjectParameter("BillTypeId", typeof(int));
    
            var unitTypeParameter = unitType != null ?
                new ObjectParameter("UnitType", unitType) :
                new ObjectParameter("UnitType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetBillTypeDetailsById_Result>("SP_DGC_GetBillTypeDetailsById", billTypeIdParameter, unitTypeParameter);
        }
    
        public virtual int SP_DGC_SaveBillRateDetails(Nullable<int> billTypeId, Nullable<int> rateCalculationId, string slabRateXml, Nullable<System.DateTime> effectiveFrom, string updatedBy, ObjectParameter errorCode, string unitType, Nullable<System.DateTime> todayClientDate)
        {
            var billTypeIdParameter = billTypeId.HasValue ?
                new ObjectParameter("BillTypeId", billTypeId) :
                new ObjectParameter("BillTypeId", typeof(int));
    
            var rateCalculationIdParameter = rateCalculationId.HasValue ?
                new ObjectParameter("RateCalculationId", rateCalculationId) :
                new ObjectParameter("RateCalculationId", typeof(int));
    
            var slabRateXmlParameter = slabRateXml != null ?
                new ObjectParameter("SlabRateXml", slabRateXml) :
                new ObjectParameter("SlabRateXml", typeof(string));
    
            var effectiveFromParameter = effectiveFrom.HasValue ?
                new ObjectParameter("EffectiveFrom", effectiveFrom) :
                new ObjectParameter("EffectiveFrom", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var unitTypeParameter = unitType != null ?
                new ObjectParameter("UnitType", unitType) :
                new ObjectParameter("UnitType", typeof(string));
    
            var todayClientDateParameter = todayClientDate.HasValue ?
                new ObjectParameter("TodayClientDate", todayClientDate) :
                new ObjectParameter("TodayClientDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_SaveBillRateDetails", billTypeIdParameter, rateCalculationIdParameter, slabRateXmlParameter, effectiveFromParameter, updatedByParameter, errorCode, unitTypeParameter, todayClientDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetFacilityLastBookingDateBySlotId_Result> SP_DGC_GetFacilityLastBookingDateBySlotId(Nullable<int> slotId, Nullable<int> courtOrLocationOrTrinerId)
        {
            var slotIdParameter = slotId.HasValue ?
                new ObjectParameter("SlotId", slotId) :
                new ObjectParameter("SlotId", typeof(int));
    
            var courtOrLocationOrTrinerIdParameter = courtOrLocationOrTrinerId.HasValue ?
                new ObjectParameter("CourtOrLocationOrTrinerId", courtOrLocationOrTrinerId) :
                new ObjectParameter("CourtOrLocationOrTrinerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetFacilityLastBookingDateBySlotId_Result>("SP_DGC_GetFacilityLastBookingDateBySlotId", slotIdParameter, courtOrLocationOrTrinerIdParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetHallLastBookingDateBySlotId_Result> SP_DGC_GetHallLastBookingDateBySlotId(Nullable<int> slotId)
        {
            var slotIdParameter = slotId.HasValue ?
                new ObjectParameter("SlotId", slotId) :
                new ObjectParameter("SlotId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetHallLastBookingDateBySlotId_Result>("SP_DGC_GetHallLastBookingDateBySlotId", slotIdParameter);
        }
    
        public virtual int SP_DGC_DeleteFacilitySlotSettingBySlotId(Nullable<int> slotId, Nullable<System.DateTime> effectiveTo, Nullable<System.DateTime> clintDate, string updatedBy, ObjectParameter errorCode, Nullable<System.DateTime> lastBookingDate)
        {
            var slotIdParameter = slotId.HasValue ?
                new ObjectParameter("SlotId", slotId) :
                new ObjectParameter("SlotId", typeof(int));
    
            var effectiveToParameter = effectiveTo.HasValue ?
                new ObjectParameter("EffectiveTo", effectiveTo) :
                new ObjectParameter("EffectiveTo", typeof(System.DateTime));
    
            var clintDateParameter = clintDate.HasValue ?
                new ObjectParameter("ClintDate", clintDate) :
                new ObjectParameter("ClintDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var lastBookingDateParameter = lastBookingDate.HasValue ?
                new ObjectParameter("LastBookingDate", lastBookingDate) :
                new ObjectParameter("LastBookingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteFacilitySlotSettingBySlotId", slotIdParameter, effectiveToParameter, clintDateParameter, updatedByParameter, errorCode, lastBookingDateParameter);
        }
    
        public virtual int SP_DGC_DeleteHallSlotSettingBySlotId(Nullable<int> slotId, Nullable<System.DateTime> clintDate, string updatedBy, Nullable<System.DateTime> effectiveTo, ObjectParameter errorCode, Nullable<System.DateTime> lastBookingDate)
        {
            var slotIdParameter = slotId.HasValue ?
                new ObjectParameter("SlotId", slotId) :
                new ObjectParameter("SlotId", typeof(int));
    
            var clintDateParameter = clintDate.HasValue ?
                new ObjectParameter("ClintDate", clintDate) :
                new ObjectParameter("ClintDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var effectiveToParameter = effectiveTo.HasValue ?
                new ObjectParameter("EffectiveTo", effectiveTo) :
                new ObjectParameter("EffectiveTo", typeof(System.DateTime));
    
            var lastBookingDateParameter = lastBookingDate.HasValue ?
                new ObjectParameter("LastBookingDate", lastBookingDate) :
                new ObjectParameter("LastBookingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_DeleteHallSlotSettingBySlotId", slotIdParameter, clintDateParameter, updatedByParameter, effectiveToParameter, errorCode, lastBookingDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitInvoicePaidDetailsByUnitId_Result> SP_DGC_GetAllUnitInvoicePaidDetailsByUnitId(Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> unitId, Nullable<System.DateTime> entryFromDate, Nullable<System.DateTime> entryToDate)
        {
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var entryFromDateParameter = entryFromDate.HasValue ?
                new ObjectParameter("EntryFromDate", entryFromDate) :
                new ObjectParameter("EntryFromDate", typeof(System.DateTime));
    
            var entryToDateParameter = entryToDate.HasValue ?
                new ObjectParameter("EntryToDate", entryToDate) :
                new ObjectParameter("EntryToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitInvoicePaidDetailsByUnitId_Result>("SP_DGC_GetAllUnitInvoicePaidDetailsByUnitId", requestedFromRoleParameter, requestedUserIdParameter, pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, unitIdParameter, entryFromDateParameter, entryToDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_IntialSetup_GetTenantDetailsBySetupd_Result> SP_DGC_IntialSetup_GetTenantDetailsBySetupd(Nullable<int> setupId)
        {
            var setupIdParameter = setupId.HasValue ?
                new ObjectParameter("SetupId", setupId) :
                new ObjectParameter("SetupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_IntialSetup_GetTenantDetailsBySetupd_Result>("SP_DGC_IntialSetup_GetTenantDetailsBySetupd", setupIdParameter);
        }
    
        public virtual int SP_DGC_IntialSetup_UpdateTenantDetailsBySetupId(Nullable<int> tenantSetupID, string blockName, string floorName, string unitName, string tenantEmail, string tenantName, string tenantMobilenumber, string updatedBy, ObjectParameter errorCode)
        {
            var tenantSetupIDParameter = tenantSetupID.HasValue ?
                new ObjectParameter("TenantSetupID", tenantSetupID) :
                new ObjectParameter("TenantSetupID", typeof(int));
    
            var blockNameParameter = blockName != null ?
                new ObjectParameter("BlockName", blockName) :
                new ObjectParameter("BlockName", typeof(string));
    
            var floorNameParameter = floorName != null ?
                new ObjectParameter("FloorName", floorName) :
                new ObjectParameter("FloorName", typeof(string));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            var tenantEmailParameter = tenantEmail != null ?
                new ObjectParameter("TenantEmail", tenantEmail) :
                new ObjectParameter("TenantEmail", typeof(string));
    
            var tenantNameParameter = tenantName != null ?
                new ObjectParameter("TenantName", tenantName) :
                new ObjectParameter("TenantName", typeof(string));
    
            var tenantMobilenumberParameter = tenantMobilenumber != null ?
                new ObjectParameter("TenantMobilenumber", tenantMobilenumber) :
                new ObjectParameter("TenantMobilenumber", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_UpdateTenantDetailsBySetupId", tenantSetupIDParameter, blockNameParameter, floorNameParameter, unitNameParameter, tenantEmailParameter, tenantNameParameter, tenantMobilenumberParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllUnitOwnerSetupDetails_Result> SP_DGC_GetAllUnitOwnerSetupDetails(ObjectParameter actualTotalRecords)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllUnitOwnerSetupDetails_Result>("SP_DGC_GetAllUnitOwnerSetupDetails", actualTotalRecords);
        }
    
        public virtual ObjectResult<SP_DGC_IntialSetup_GetOwnerDetailsBySetupd_Result> SP_DGC_IntialSetup_GetOwnerDetailsBySetupd(Nullable<int> setupId)
        {
            var setupIdParameter = setupId.HasValue ?
                new ObjectParameter("SetupId", setupId) :
                new ObjectParameter("SetupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_IntialSetup_GetOwnerDetailsBySetupd_Result>("SP_DGC_IntialSetup_GetOwnerDetailsBySetupd", setupIdParameter);
        }
    
        public virtual int SP_DGC_IntialSetup_UpdateOwnerDetailsBySetupId(Nullable<int> ownerSetupID, string blockName, string floorName, string unitName, string ownerName, string ownerEmail, string ownerMobileNumber, string isMalaysian, string iCOrPassPortNumber, string isSelfOccupied, string ownerAddress, string updatedBy, ObjectParameter errorCode)
        {
            var ownerSetupIDParameter = ownerSetupID.HasValue ?
                new ObjectParameter("OwnerSetupID", ownerSetupID) :
                new ObjectParameter("OwnerSetupID", typeof(int));
    
            var blockNameParameter = blockName != null ?
                new ObjectParameter("BlockName", blockName) :
                new ObjectParameter("BlockName", typeof(string));
    
            var floorNameParameter = floorName != null ?
                new ObjectParameter("FloorName", floorName) :
                new ObjectParameter("FloorName", typeof(string));
    
            var unitNameParameter = unitName != null ?
                new ObjectParameter("UnitName", unitName) :
                new ObjectParameter("UnitName", typeof(string));
    
            var ownerNameParameter = ownerName != null ?
                new ObjectParameter("OwnerName", ownerName) :
                new ObjectParameter("OwnerName", typeof(string));
    
            var ownerEmailParameter = ownerEmail != null ?
                new ObjectParameter("OwnerEmail", ownerEmail) :
                new ObjectParameter("OwnerEmail", typeof(string));
    
            var ownerMobileNumberParameter = ownerMobileNumber != null ?
                new ObjectParameter("OwnerMobileNumber", ownerMobileNumber) :
                new ObjectParameter("OwnerMobileNumber", typeof(string));
    
            var isMalaysianParameter = isMalaysian != null ?
                new ObjectParameter("IsMalaysian", isMalaysian) :
                new ObjectParameter("IsMalaysian", typeof(string));
    
            var iCOrPassPortNumberParameter = iCOrPassPortNumber != null ?
                new ObjectParameter("ICOrPassPortNumber", iCOrPassPortNumber) :
                new ObjectParameter("ICOrPassPortNumber", typeof(string));
    
            var isSelfOccupiedParameter = isSelfOccupied != null ?
                new ObjectParameter("IsSelfOccupied", isSelfOccupied) :
                new ObjectParameter("IsSelfOccupied", typeof(string));
    
            var ownerAddressParameter = ownerAddress != null ?
                new ObjectParameter("OwnerAddress", ownerAddress) :
                new ObjectParameter("OwnerAddress", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DGC_IntialSetup_UpdateOwnerDetailsBySetupId", ownerSetupIDParameter, blockNameParameter, floorNameParameter, unitNameParameter, ownerNameParameter, ownerEmailParameter, ownerMobileNumberParameter, isMalaysianParameter, iCOrPassPortNumberParameter, isSelfOccupiedParameter, ownerAddressParameter, updatedByParameter, errorCode);
        }
    
        public virtual ObjectResult<SP_DGC_GetVisitorInButNotOutDetails_Result> SP_DGC_GetVisitorInButNotOutDetails(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<int> requestedFromRole, Nullable<long> requestedUserId, Nullable<int> unitId, Nullable<System.DateTime> visitingFromDate, Nullable<System.DateTime> visitingToDate, Nullable<System.DateTime> todaysClintDate)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var requestedFromRoleParameter = requestedFromRole.HasValue ?
                new ObjectParameter("RequestedFromRole", requestedFromRole) :
                new ObjectParameter("RequestedFromRole", typeof(int));
    
            var requestedUserIdParameter = requestedUserId.HasValue ?
                new ObjectParameter("RequestedUserId", requestedUserId) :
                new ObjectParameter("RequestedUserId", typeof(long));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var visitingFromDateParameter = visitingFromDate.HasValue ?
                new ObjectParameter("VisitingFromDate", visitingFromDate) :
                new ObjectParameter("VisitingFromDate", typeof(System.DateTime));
    
            var visitingToDateParameter = visitingToDate.HasValue ?
                new ObjectParameter("VisitingToDate", visitingToDate) :
                new ObjectParameter("VisitingToDate", typeof(System.DateTime));
    
            var todaysClintDateParameter = todaysClintDate.HasValue ?
                new ObjectParameter("TodaysClintDate", todaysClintDate) :
                new ObjectParameter("TodaysClintDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetVisitorInButNotOutDetails_Result>("SP_DGC_GetVisitorInButNotOutDetails", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, requestedFromRoleParameter, requestedUserIdParameter, unitIdParameter, visitingFromDateParameter, visitingToDateParameter, todaysClintDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllAnnouncements_Result> SP_DGC_GetAllAnnouncements(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<System.DateTime> todaysclintDate)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var todaysclintDateParameter = todaysclintDate.HasValue ?
                new ObjectParameter("TodaysclintDate", todaysclintDate) :
                new ObjectParameter("TodaysclintDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllAnnouncements_Result>("SP_DGC_GetAllAnnouncements", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, todaysclintDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetAllNotifications_Result> SP_DGC_GetAllNotifications(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<System.DateTime> todaysclintDate)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var todaysclintDateParameter = todaysclintDate.HasValue ?
                new ObjectParameter("TodaysclintDate", todaysclintDate) :
                new ObjectParameter("TodaysclintDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetAllNotifications_Result>("SP_DGC_GetAllNotifications", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, todaysclintDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetCurrentAnnouncements_Result> SP_DGC_GetCurrentAnnouncements(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortingColumn, string sortingDirection, string searchingValue, ObjectParameter actualTotalRecords, Nullable<System.DateTime> todaysclintDate)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortingColumnParameter = sortingColumn.HasValue ?
                new ObjectParameter("SortingColumn", sortingColumn) :
                new ObjectParameter("SortingColumn", typeof(int));
    
            var sortingDirectionParameter = sortingDirection != null ?
                new ObjectParameter("sortingDirection", sortingDirection) :
                new ObjectParameter("sortingDirection", typeof(string));
    
            var searchingValueParameter = searchingValue != null ?
                new ObjectParameter("SearchingValue", searchingValue) :
                new ObjectParameter("SearchingValue", typeof(string));
    
            var todaysclintDateParameter = todaysclintDate.HasValue ?
                new ObjectParameter("TodaysclintDate", todaysclintDate) :
                new ObjectParameter("TodaysclintDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetCurrentAnnouncements_Result>("SP_DGC_GetCurrentAnnouncements", pageNumberParameter, pageSizeParameter, sortingColumnParameter, sortingDirectionParameter, searchingValueParameter, actualTotalRecords, todaysclintDateParameter);
        }
    
        public virtual ObjectResult<SP_DGC_GetNotificationByUserid_Result> SP_DGC_GetNotificationByUserid(Nullable<int> userId, Nullable<int> pageNumber, Nullable<int> pageSize, ObjectParameter actualTotalRecords, Nullable<System.DateTime> todaysclintDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var todaysclintDateParameter = todaysclintDate.HasValue ?
                new ObjectParameter("TodaysclintDate", todaysclintDate) :
                new ObjectParameter("TodaysclintDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DGC_GetNotificationByUserid_Result>("SP_DGC_GetNotificationByUserid", userIdParameter, pageNumberParameter, pageSizeParameter, actualTotalRecords, todaysclintDateParameter);
        }
    }
}
