using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using System.Xml;
using System.Xml.Linq;

namespace EdmxToPOCOGen
{
    class Program
    {
        static XElement edmxXmlElm;
        static void Main(string[] args)
        {
            Console.WriteLine("Wellcome to POCO(Plain Old CLR Object) genarator from EDMX!");
            Console.WriteLine("Did you add any new object(Only StoreProc) added to the EDMX?");
            Console.WriteLine("If Yes... Press Enter Else Press any key to exit.");
            var userInput = Console.ReadKey();
            if (userInput.Key == ConsoleKey.Enter)
            {
                Console.WriteLine("Prosessing Please wait....");
                Console.WriteLine("Fecching .edmx file within this solution...");
                foreach (var edmxFile in findEDMXFile())
                {
                    edmxXmlElm = EDMXLoad(edmxFile);
                    StringBuilder autoGenPOCO = new StringBuilder();
                    autoGenPOCO = AutoGenCodeComment(autoGenPOCO);
                    Console.WriteLine(autoGenPOCO.ToString());
                }
            }

            Console.ReadLine();
        }

        static List<string> findEDMXFile()
        {
            var files = new List<string>();
            var parentFolder = Path.GetFullPath(Path.Combine(Environment.CurrentDirectory, @"../../../"));
            files = Directory.GetFiles(parentFolder, "*.edmx", SearchOption.AllDirectories).ToList();
            if (files.Any() == false)
            {
                Console.WriteLine("Please provide the edmx file path:");
                files.Add(Console.ReadLine());
            }

            return files;
        }

        static StringBuilder AutoGenCodeComment(StringBuilder autoGenPOCO)
        {
            autoGenPOCO.AppendLine("//------------------------------------------------------------------------------");
            autoGenPOCO.AppendLine("// <auto-generated>");
            autoGenPOCO.AppendLine("//     This code was generated from a Reverse POCO Gen tool.");
            autoGenPOCO.AppendLine("//");
            autoGenPOCO.AppendLine("//     Manual changes to this file may cause unexpected behavior in your application.");
            autoGenPOCO.AppendLine("//     Manual changes to this file will be overwritten if the code is regenerated.");
            autoGenPOCO.AppendLine("// </auto-generated>");
            autoGenPOCO.AppendLine("//------------------------------------------------------------------------------");

            XNamespace edmx = edmxXmlElm.Name.Namespace;
            string nameSpace = edmxXmlElm.Element(edmx + "ConceptualModels").Attribute("Namespace").Value;

            autoGenPOCO.AppendLine(string.Format("namespace {0}", nameSpace));
            autoGenPOCO.AppendLine("{");
            autoGenPOCO.AppendLine("    using System;");
            autoGenPOCO.AppendLine("    using System.Data.Entity;");
            autoGenPOCO.AppendLine("    using System.Data.Entity.Infrastructure;");
            autoGenPOCO.AppendLine("    using System.Data.Entity.Core.Objects;");
            autoGenPOCO.AppendLine("    using System.Linq;");
            autoGenPOCO.AppendLine("");
            autoGenPOCO.AppendLine(string.Format("    public partial class {0} : DbContext", edmxXmlElm.Element("EntityContainer").Attributes("Name").FirstOrDefault().Value));
            autoGenPOCO.AppendLine("    {");
            autoGenPOCO.AppendLine("        public CentralDigitalCondoEntities()");
            autoGenPOCO.AppendLine("            : base(\"name=CentralDigitalCondoEntities\")");
            autoGenPOCO.AppendLine("        {");
            autoGenPOCO.AppendLine("        }");
            autoGenPOCO.AppendLine("");
            autoGenPOCO.AppendLine("        protected override void OnModelCreating(DbModelBuilder modelBuilder)");
            autoGenPOCO.AppendLine("        {");
            autoGenPOCO.AppendLine("            throw new UnintentionalCodeFirstException();");
            autoGenPOCO.AppendLine("        }");

            return autoGenPOCO;
        }

        static XElement EDMXLoad(string filePath)
        {
            return XElement.Load(filePath);
        }
    }
}
